[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A clinically relevant spatial single-cell landscape of pancreatic cancer",
    "section": "",
    "text": "Preface\nThis is a Quarto book of code accompanying our manuscript “A clinically relevant spatial single-cell landscape of pancreatic cancer”.\n\nsessionInfo()\n\nR version 4.4.1 (2024-06-14)\nPlatform: x86_64-conda-linux-gnu\nRunning under: CentOS Linux 8\n\nMatrix products: default\nBLAS/LAPACK: /cluster/apps/anaconda3/2020.02/envs/R-4.4.1/lib/libopenblasp-r0.3.27.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Asia/Shanghai\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    grid      stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] ggraph_2.2.1                tidygraph_1.3.1            \n [3] ggrepel_0.9.6               viridis_0.6.5              \n [5] viridisLite_0.4.2           jhuanglabRNAseq_1.0.0      \n [7] SummarizedExperiment_1.36.0 Biobase_2.66.0             \n [9] GenomicRanges_1.58.0        GenomeInfoDb_1.42.1        \n[11] IRanges_2.40.1              S4Vectors_0.44.0           \n[13] BiocGenerics_0.52.0         MatrixGenerics_1.18.1      \n[15] matrixStats_1.5.0           ComplexHeatmap_2.22.0      \n[17] circlize_0.4.16             lubridate_1.9.4            \n[19] forcats_1.0.0               stringr_1.5.1              \n[21] dplyr_1.1.4                 purrr_1.0.4                \n[23] readr_2.1.5                 tidyr_1.3.1                \n[25] tibble_3.2.1                ggplot2_3.5.1              \n[27] tidyverse_2.0.0             patchwork_1.3.0            \n[29] ggsci_3.2.0                 glue_1.8.0                 \n[31] jhtools_1.0.0               ggthemes_5.1.0             \n\nloaded via a namespace (and not attached):\n  [1] fs_1.6.5                 easySVG_0.1.0            bitops_1.0-9            \n  [4] enrichplot_1.26.6        httr_1.4.7               RColorBrewer_1.1-3      \n  [7] doParallel_1.0.17        tools_4.4.1              backports_1.5.0         \n [10] R6_2.5.1                 lazyeval_0.2.2           GetoptLong_1.0.5        \n [13] withr_3.0.2              prettyunits_1.2.0        gridExtra_2.3           \n [16] cli_3.6.3                formatR_1.14             genefilter_1.88.0       \n [19] ngstk_0.2.3              ggridges_0.5.6           Rsamtools_2.22.0        \n [22] yulab.utils_0.1.9        gson_0.1.0               DOSE_4.0.0              \n [25] R.utils_2.12.3           ini_0.3.1                parallelly_1.41.0       \n [28] limma_3.62.2             RSQLite_2.3.9            BiocIO_1.16.0           \n [31] generics_0.1.3           gridGraphics_0.5-1       shape_1.4.6.1           \n [34] configr_0.3.5            hwriter_1.3.2.1          gtools_3.9.5            \n [37] car_3.1-3                zip_2.3.1                dendextend_1.19.0       \n [40] GO.db_3.20.0             Matrix_1.7-1             futile.logger_1.4.3     \n [43] abind_1.4-8              R.methodsS3_1.8.2        lifecycle_1.0.4         \n [46] yaml_2.3.10              carData_3.0-5            gplots_3.2.0            \n [49] qvalue_2.38.0            SparseArray_1.6.1        BiocFileCache_2.14.0    \n [52] blob_1.2.4               gdata_3.0.1              crayon_1.5.3            \n [55] RcppTOML_0.2.2           ggtangle_0.0.6           lattice_0.22-6          \n [58] msigdbr_7.5.1            cowplot_1.1.3            annotate_1.84.0         \n [61] KEGGREST_1.46.0          pillar_1.10.1            knitr_1.49              \n [64] optparse_1.7.5           fgsea_1.32.2             rjson_0.2.23            \n [67] codetools_0.2-20         fastmatch_1.1-6          ggfun_0.1.8             \n [70] data.table_1.16.4        vctrs_0.6.5              png_0.1-8               \n [73] treeio_1.30.0            gtable_0.3.6             cachem_1.1.0            \n [76] xfun_0.50                openxlsx_4.2.7.1         S4Arrays_1.6.0          \n [79] survival_3.8-3           iterators_1.0.14         statmod_1.5.0           \n [82] nlme_3.1-166             ggtree_3.14.0            bit64_4.6.0-1           \n [85] progress_1.2.3           filelock_1.0.3           KernSmooth_2.23-26      \n [88] colorspace_2.1-1         DBI_1.2.3                DESeq2_1.46.0           \n [91] tidyselect_1.2.1         bit_4.5.0.1              compiler_4.4.1          \n [94] curl_6.1.0               httr2_1.1.0              xml2_1.3.6              \n [97] DelayedArray_0.32.0      rtracklayer_1.66.0       scales_1.3.0            \n[100] caTools_1.18.3           rappdirs_0.3.3           digest_0.6.37           \n[103] rmarkdown_2.29           XVector_0.46.0           htmltools_0.5.8.1       \n[106] pkgconfig_2.0.3          gvmap_0.1.6              dbplyr_2.5.0            \n[109] fastmap_1.2.0            rlang_1.1.5              GlobalOptions_0.1.2     \n[112] htmlwidgets_1.6.4        UCSC.utils_1.2.0         farver_2.1.2            \n[115] jsonlite_1.8.9           DEXSeq_1.52.0            BiocParallel_1.40.0     \n[118] GOSemSim_2.32.0          R.oo_1.27.0              RCurl_1.98-1.16         \n[121] magrittr_2.0.3           Formula_1.2-5            GenomeInfoDbData_1.2.13 \n[124] ggplotify_0.1.2          munsell_0.5.1            Rcpp_1.0.14             \n[127] ape_5.8-1                babelgene_22.9           stringi_1.8.4           \n[130] MASS_7.3-64              zlibbioc_1.52.0          plyr_1.8.9              \n[133] org.Hs.eg.db_3.20.0      parallel_4.4.1           listenv_0.9.1           \n[136] graphlayouts_1.2.1       Biostrings_2.74.1        splines_4.4.1           \n[139] hms_1.1.3                locfit_1.5-9.10          igraph_2.1.3            \n[142] ggpubr_0.6.0             ggsignif_0.6.4           reshape2_1.4.4          \n[145] geneplotter_1.84.0       biomaRt_2.62.0           futile.options_1.0.1    \n[148] XML_3.99-0.18            evaluate_1.0.3           lambda.r_1.2.4          \n[151] tweenr_2.0.3             tzdb_0.4.0               foreach_1.5.2           \n[154] polyclip_1.10-7          getopt_1.20.4            future_1.34.0           \n[157] clue_0.3-66              ggforce_0.4.2            broom_1.0.7             \n[160] xtable_1.8-4             restfulr_0.0.15          rsvg_2.6.0              \n[163] tidytree_0.4.6           rstatix_0.7.2            clusterProfiler_4.14.4  \n[166] aplot_0.2.4              GenomicAlignments_1.42.0 memoise_2.0.1           \n[169] AnnotationDbi_1.68.0     tximport_1.34.0          cluster_2.1.8           \n[172] corrplot_0.95            timechange_0.3.0         globals_0.16.3          \n[175] ggfortify_0.4.17",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "figure1.html",
    "href": "figure1.html",
    "title": "figure1",
    "section": "",
    "text": "figure1a\nsp_info &lt;- coldat %&gt;% dplyr::select(sample_id, stype3) %&gt;% distinct() %&gt;% \n    remove_rownames() %&gt;% dplyr::mutate(group = ifelse(stype3 != \"Paracancerous\" & \n                                                  stype3 != \"Normal\", \"Tumor\", stype3))\n\nsp_info$group &lt;- factor(sp_info$group, levels = c(\"Tumor\", \"Paracancerous\", \"Normal\"))\nsp_info$stype3 &lt;- factor(sp_info$stype3, levels = c(\"Punc_liver\", \"Punc_pancreas\",\n                                                    \"Surgery_after_chemo\", \"Surgery_without_chemo\",\n                                                    \"Paracancerous\", \"Normal\"))\n\n# plot\np &lt;- ggplot(sp_info, aes(x = group, fill = stype3)) +\n  geom_bar(position = \"stack\", width = 0.8) +\n  scale_fill_manual(values = stype3_cols) +\n  scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 60, hjust = 1),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        legend.title = element_blank()) +\n  geom_text(aes(label = ..count..), stat = \"count\", position = position_stack(vjust = 0.5))\nggsave(glue::glue(\"{res_dir}/fig1a_sample_info.pdf\"), width = 3, height = 6)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1d",
    "href": "figure1.html#figure1d",
    "title": "figure1",
    "section": "figure1d",
    "text": "figure1d\n\nmeta_all &lt;- readr::read_csv(glue::glue(\"{dat_dir}/metadata_sinfo.csv\"))\nc_mat_lst &lt;- readr::read_rds(glue::glue(\"{dat_dir}/heatmap_1d_mat_lst.rds\"))\nc_mat &lt;- c_mat_lst[[1]]\ncluster_prop &lt;- c_mat_lst[[2]]\n\n# lineage markers\nanno_marks &lt;- c(\"a_smooth\", \"CD14\", \"CD33\", \"CD16\", \"CD163\", \"Pan_Keratin\", \"CD11b\",\n                \"CD31\", \"CD11c\", \"FoxP3\", \"CD4\", \"E_Cadherin\", \"CD68\",\n                \"CD20\", \"CD8a\", \"Collagen1\", \"CD3\", \"HLA_DR\",\"CD25\",\n                \"Vimentin\", \"CCR6\", \"B7_H4\", \"Ki67\")\n\n# cell grouping and ordering data for heatmap\n# the ordering should NOT be changed to avoid bugs of ComplexHeatmap package!!\nepiendo_cells &lt;- c(\"Epithelial tumor cell\", \"Normal epithelial cell\", \"Endothelial cell\")\nimmu_stroma_cells &lt;- c(\"DC\", \"MDSC\", \"Monocyte\", \"B cell\", \"CD8+ T cell\", \"CD4+ T cell\",\n                 \"HLA-DR-CD163- mp\", \"HLA-DR-CD163+ mp\", \"HLA-DR+CD163- mp\",\n                   \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163- MMT\", \"HLA-DR+CD163- MMT\", \n                 \"HLA-DR+CD163+ MMT\", \"PSC\", \"myoCAF\", \"Col1+ CAF\")\nother_cells &lt;- c(\"CCR6+ cell\", \"B7-H4+ cell\", \"Ki67+ cell\", \"Vim+ cell\", \"Unknown\")\n\ngrouping_celltype &lt;- data.frame(cell_type_new = c(epiendo_cells, immu_stroma_cells, other_cells),\n                                meta_celltype = c(rep(\"Epi-endo\", 3), rep(\"Immune-stroma\", 16), rep(\"Others\", 5)))\n\nheatmap_dat &lt;- c_mat[grouping_celltype$cell_type_new, anno_marks]\nsplit_row &lt;- grouping_celltype$meta_celltype\nsplit_row &lt;- factor(split_row, levels = c(\"Epi-endo\", \"Immune-stroma\", \"Others\"))\n\nmeta_colors &lt;- c(\"#B61932\", \"#568AC2\", \"#BEA278\")\nlabels_meta &lt;- c(\"Epi-endo\", \"Immune-stroma\", \"Others\")\nlabels_meta2 &lt;- c(\"Epithelial & endothelial Cells\", \"Immune & stroma Cells\", \"Other Cells\")\nblock_anno = rowAnnotation(Type = anno_block(gp = gpar(fill = meta_colors),\n                                             labels = labels_meta,\n                                             labels_gp = gpar(col = \"white\", fontsize = 10)))\n\ncol_fun = circlize::colorRamp2(c(-1, 0, 1, 2, 3), c(\"#5658A5\", \"#8BCDA3\", \"#FBF4AA\", \"#F16943\", \"#9D1A44\"))\nprop_data &lt;- cluster_prop[ ,3]\nnames(prop_data) &lt;- cluster_prop[ ,1]\n\n# bar annotation\nmeta_all1 &lt;- meta_all %&gt;% dplyr::mutate(base_excision_eval = case_when(\n  nchar(base_excision_eval) == 4 ~ \"BRPC_LAPC\",\n  TRUE ~ base_excision_eval))\ncoldat &lt;- left_join(coldat, meta_all1[, c(\"sample_id\", \"base_excision_eval\")])\ngroup_dat &lt;- coldat %&gt;% group_by(cell_type_new) %&gt;%\n  dplyr::mutate(allcount = n()) %&gt;%\n  group_by(cell_type_new, base_excision_eval, allcount) %&gt;%\n  summarise(count = n()) %&gt;%\n  na.omit() %&gt;% dplyr::mutate(frac = count / allcount)\ngroup_dat$cell_type_order &lt;- factor(group_dat$cell_type_new,\n                                    levels = rev(grouping_celltype$cell_type_new))\nprop_data &lt;- prop_data[match(rownames(heatmap_dat), names(prop_data))]\ncell_amount_anno = ComplexHeatmap::rowAnnotation(\n  frac = anno_barplot(prop_data,\n                      gp = gpar(fill = ctype10_cols[match(rownames(heatmap_dat), names(ctype10_cols))])))\ntext_color &lt;- scales::muted(ctype10_cols[match(rev(grouping_celltype$cell_type_new), names(ctype10_cols))], l = 50)\n\n# bubble plot\ngroup_dat$base_order &lt;- factor(group_dat$base_excision_eval,\n                               levels = c(\"RPC\", \"BRPC_LAPC\", \"MPC\"))\npcirc &lt;- ggplot(group_dat, aes(y = cell_type_order, x = base_order)) +\n  geom_point(aes(color = cell_type_order, alpha = frac, size = count)) +\n  scale_color_manual(values = ctype10_cols) +\n  scale_size(range = c(1, 15), name = \"Fraction of clinical in celltype group\") +\n  theme(\n    axis.text.y = element_text(color = text_color),\n    # not officially supported but works anyway, one may also seek for ggtext solution\n    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank(),\n    axis.line = element_line(colour = \"black\"),\n    legend.position = \"none\",\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank()\n  ) +\n  expand_limits(y = c(1, length(levels(group_dat$cell_type_order)) + 0.8))\n\n# main heatmap\nht_main &lt;- Heatmap(heatmap_dat, name = \"matrix\", heatmap_legend_param = list(title = \"exp\"),\n                   cluster_row_slices = F, col = col_fun, row_km = 0,\n                   cluster_rows = F, show_heatmap_legend = F, left_annotation = block_anno,\n                   split = split_row, show_row_names = F, row_title = NULL,\n                   show_row_dend = F, show_column_dend = F)\n\nht &lt;- attach_annotation(ht_main, cell_amount_anno, side = \"right\")\nht &lt;- draw(ht)\n\n\n\n\n\n\n\ngrob &lt;- grid.grabExpr(draw(ht))\n\n# legends\nheat_legend &lt;- Legend(title = \"Intensity\", at = -1:3, col_fun = col_fun)\nmeta_legend &lt;- Legend(labels = labels_meta2, title = \"Cell Categories\",\n                      legend_gp = gpar(fill = meta_colors))\nmerged_legends &lt;- packLegend(heat_legend, meta_legend)\n\n# merged plot\np &lt;- ggdraw() +\n  draw_plot(pcirc, 0, 0.033, 0.27, 0.95) +   ## x, y, width, height\n  draw_plot(grob, 0.275, 0.001, 0.52, 0.98) +\n  draw_plot(grid.grabExpr(draw(merged_legends)), 0.84, 0.4, 0.06, 0.08)\nggsave(glue::glue(\"{res_dir}/fig1d_heatmap_main_anno.pdf\"), p, height = 7, width = 13)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1d_sup2",
    "href": "figure1.html#figure1d_sup2",
    "title": "figure1",
    "section": "figure1d_sup2",
    "text": "figure1d_sup2\n\nfunc_marks &lt;- c(\"CD45\", \"CD45RO\", \"EGFR\", \"PD_L1\", \"LAG_3\", \"Vista\", \"CCR6\", \"Arginase_1\", \"PD1\",\n                \"Vimentin\", \"B7_H4\", \"Granzyme_B\", \"Ki67\", \"Caspase3\")\n\nheatmap_dat &lt;- c_mat[grouping_celltype$cell_type_new, func_marks]\ncolnames(heatmap_dat) &lt;- c(\"CD45\", \"CD45RO\", \"EGFR\", \"PD-L1\", \"LAG3\", \"VISTA\", \"CCR6\", \"Arg-1\", \"PD-1\",\n                           \"Vim\", \"B7-H4\", \"GZMB\", \"Ki-67\", \"Casp-3\")\nht_func &lt;- Heatmap(heatmap_dat, name = \"matrix\", heatmap_legend_param = list(title = \"exp\"),\n                   cluster_row_slices = F, col = col_fun, row_km = 0,\n                   cluster_rows = F, show_heatmap_legend = T, #left_annotation = block_anno,\n                   show_row_names = T,#split = split_row, row_title = NULL,\n                   show_row_dend = F, show_column_dend = F)\n\npdf(glue::glue(\"{res_dir}/fig1dsup2_heatmap_sup_functional.pdf\"), height = 6, width = 5)\ndraw(ht_func)\nd &lt;- dev.off()\nht_func",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1e",
    "href": "figure1.html#figure1e",
    "title": "figure1",
    "section": "figure1e",
    "text": "figure1e\n\ncelltypes &lt;- unique(coldat$cell_type_new)\ncld &lt;- coldat %&gt;% group_by(stype3) %&gt;% dplyr::mutate(n_cell = n()) %&gt;%\n  group_by(cell_type_new, .add = T) %&gt;% dplyr::mutate(cell_ratio = n()/n_cell)\ndf &lt;- cld %&gt;% ungroup() %&gt;% dplyr::select(stype3, cell_type_new, cell_ratio) %&gt;%\n  dplyr::distinct() %&gt;% pivot_wider(names_from = cell_type_new, values_from = cell_ratio) %&gt;%\n  dplyr::mutate(across(where(is.numeric), replace_na, 0)) %&gt;%\n  pivot_longer(celltypes, names_to = \"cell_type\", values_to = \"ratio\")\ndf$stype3&lt;- factor(df$stype3, levels = c(\"Surgery_without_chemo\", \"Surgery_after_chemo\", \"Punc_pancreas\", \"Punc_liver\", \"Paracancerous\", \"Normal\"))\nstack &lt;- function (df = df) {\n  p &lt;- ggplot(df, mapping = aes(stype3, ratio*100, fill = cell_type)) +\n    geom_bar(stat = 'identity', position = position_stack(), width = 0.8) +\n    labs(x = '', y = 'Cell percentage') +\n    theme_bw() + scale_fill_manual(values = ctype10_cols) +\n    theme(axis.title = element_text(size = 13),\n          axis.text.x = element_text(angle = 60, hjust = 1),\n          axis.title.x = element_blank(),\n          axis.ticks.x =  element_blank(),\n          axis.text.y = element_text(color = \"black\"),\n          axis.ticks = element_line(size = 0.25),\n          strip.text = element_text(size = 8),\n          strip.background = element_rect(fill = NA, color = NA),\n          legend.position = \"none\") +\n    scale_y_continuous(expand = c(0,0))\n  return(p)\n}\np &lt;- stack(df = df)\nggsave(glue::glue(\"{res_dir}/fig1e_stype2_stackplot.pdf\"), p, width = 2, height = 3, dpi = 300)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1f",
    "href": "figure1.html#figure1f",
    "title": "figure1",
    "section": "figure1f",
    "text": "figure1f\n\np &lt;- plot2d(seu_sub, color.by = \"stype3\", show.cluser.id = F, size = 0.01,\n             item.use = c(\"t_sne1\", \"t_sne2\")) + scale_color_manual(values = stype3_cols) +\n  guides(colour = guide_legend(override.aes = list(size = 2)))\nggsave(glue::glue(\"{res_dir}/fig1f_tsne_stype3_300000.png\"), p, dpi = 300, width = 7, height = 5)       \n\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1sup4",
    "href": "figure1.html#figure1sup4",
    "title": "figure1",
    "section": "figure1sup4",
    "text": "figure1sup4\n\ndf &lt;- readr::read_csv(glue::glue(\"{dat_dir}/cell_score_stat.csv\"))\n\nmy_comparisons &lt;- list(c(\"Normal\",\"Paracancerous\"), c(\"Normal\", \"Surgery_without_chemo\"),\n                       c(\"Paracancerous\", \"Surgery_without_chemo\"),\n                       c(\"Surgery_without_chemo\", \"Surgery_after_chemo\"),\n                       c(\"Punc_pancreas\", \"Punc_liver\"))\n\ndf$stype3 &lt;- factor(df$stype3, levels = c(\"Surgery_without_chemo\", \"Surgery_after_chemo\", \"Punc_pancreas\",\"Punc_liver\", \"Paracancerous\", \"Normal\"))\n\np1 &lt;- (ggplot(df, aes_string(x = \"stype3\", y = \"cell_density\")) +\n         geom_boxplot(outlier.shape= NA, lwd = 0.2, color = \"#000000\", fill = stype3_cols) +\n         ylim(0, 1.9) + \n         plot.theme +\n         theme(legend.position = \"none\") +\n         axistheme1+\n         stat_compare_means(method = \"wilcox.test\",\n                            comparisons = my_comparisons,\n                            hide.ns = TRUE,\n                            bracket.size = 0.2,\n                            vjust = 0.8,\n                            aes(label = ..p.signif..)))\np2 &lt;- (ggplot(df, aes_string(x = \"stype3\", y = \"score_col\")) +\n         geom_boxplot(outlier.shape= NA, lwd = 0.2, color = \"#000000\", fill = stype3_cols) +\n         ylim(-2, 8) + \n         plot.theme +\n         theme(legend.position = \"none\") +\n         axistheme1+\n         stat_compare_means(method = \"wilcox.test\",\n                            comparisons = my_comparisons,\n                            hide.ns = TRUE,\n                            bracket.size = 0.2,\n                            vjust = 0.8,\n                            aes(label = ..p.signif..)))\np3 &lt;- (ggplot(df, aes_string(x = \"stype3\", y = \"DispersionScore\")) +\n         geom_boxplot(outlier.shape= NA, lwd = 0.2, color = \"#000000\", fill = stype3_cols) +\n         ylim(0.3, 1.4) + \n         plot.theme +\n         theme(legend.position = \"none\") +\n         axistheme1+\n         stat_compare_means(method = \"wilcox.test\",\n                            comparisons = my_comparisons,\n                            hide.ns = TRUE,\n                            bracket.size = 0.2,\n                            vjust = 0.8,\n                            aes(label = ..p.signif..)))\n\np &lt;- p2|p1|p3\nggsave(glue::glue(\"{res_dir}/fig1sup4_stype3_area_ecce_boxplot.pdf\"), p, width = 7, height = 5)       \nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1sup5a",
    "href": "figure1.html#figure1sup5a",
    "title": "figure1",
    "section": "figure1sup5a",
    "text": "figure1sup5a\n\n# theme\nplot.theme &lt;- theme_bw() + theme(panel.grid.major = element_blank(),\n                                 panel.grid.minor = element_blank())\n\naxistheme2 &lt;- theme(axis.title.y = element_text(size = 8),\n                    axis.text.y = element_text(size = 6),\n                    axis.title.x = element_blank(),\n                    axis.text.x = element_blank(),\n                    axis.line = element_line(linewidth = .4, colour = \"black\"),\n                    axis.ticks.y = element_line(linewidth = .4, colour = \"black\"),\n                    axis.ticks.x = element_blank(),\n                    legend.position = \"none\")\n\n# plot function\nboxplot_clinical &lt;- function (df = df, sel_group = \"stage\", celltype = \"DC\", axistheme = axistheme1, wd = .3,\n                              ylim = 400, label_y = c(0.4,0.5,0.6), compare = compare_list, fil_col = NULL) {\n  #colors &lt;- list(color2, color3)\n  # dot_colors &lt;- list(dot_color2, dot_color3)\n  plot.theme &lt;- theme_bw() + theme(panel.grid.major = element_blank(),\n                                   panel.grid.minor = element_blank())\n\n  comparisons_n &lt;- length(compare) + 2\n  p &lt;- ggplot(df, aes_string(sel_group, celltype)) +\n    geom_boxplot(outlier.shape = NA, width = wd,\n                 lwd = 0.2, color = \"#000000\", aes(fill = !!sym(sel_group))) +\n    scale_y_continuous(limits=c(0, ylim), oob = scales::rescale_none) +\n    scale_fill_manual(values = fil_col) +\n    plot.theme + axistheme +\n    stat_compare_means(method = \"t.test\", comparisons = compare,\n                       hide.ns = TRUE, bracket.size = 0.2, vjust = 0.6,\n                       label.y = label_y, tip.length = 0.01,\n                       aes(label = ..p.signif..))\n  return(p)\n}\n\n# all immnue cells\nimmu_cols &lt;- c(\"Macrophage_HLADRp\",\"MDSC\", \"Macrophage_HLADRp_CD163p\",\n               \"MMT_HLADRp_CD163p\", \"DC\", \"MMT_HLADRp\", \"Monocyte\",\n               \"MMT_HLADRn_CD163n\", \"CD8T\", \"Macrophage_CD163p\",\n               \"CD4T\", \"Macrophage_HLADRn_CD163n\", \"Bcell\")\n\n# tumor_para_normal\nsampleinfo &lt;- sinfo %&gt;% dplyr::select(sample_id, stype2) %&gt;% distinct() %&gt;% \n  dplyr::filter(stype2 %in% c(\"normal\", \"paracancerous\", \"tumor\"))\ntp_df &lt;- metadata[[\"cell_ratio\"]] %&gt;% inner_join(sampleinfo, by = \"sample_id\") %&gt;%\n  dplyr::mutate(Epithelial = Epithelial_normal + Epithelial_tumor) %&gt;%\n  dplyr::mutate(Fibroblast = PSC + mCAF + CAF_col1p) %&gt;%\n  rowwise() %&gt;% dplyr::mutate(immunecells = sum(c_across(all_of(immu_cols)))) %&gt;%\n  dplyr::mutate(stype2 = case_when(stype2 == \"tumor\" ~ \"Tumor\",\n                                   stype2 == \"normal\" ~ \"Normal\",\n                                   stype2 == \"paracancerous\" ~ \"Paracancerous\"))\nmy_comparisons_tp &lt;- list(c(\"Normal\",\"Paracancerous\"), c(\"Normal\", \"Tumor\"), c(\"Paracancerous\", \"Tumor\"))\ntp_df$stype2&lt;- factor(tp_df$stype2, levels = c(\"Normal\", \"Paracancerous\", \"Tumor\"))\nfil_c &lt;- c(\"Tumor\" = \"#BC3C29FF\", \"Paracancerous\" = \"#0072B5FF\", \"Normal\" = \"#E18727FF\")\n\np1 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"Epithelial_tumor\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.7, label_y = c(0.5,0.55,0.6), compare = my_comparisons_tp)\np2 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"mCAF\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.8, label_y = c(0.6,0.65,0.7), compare = my_comparisons_tp)\np3 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"CAF_col1p\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.3, label_y = c(0.2,0.23,0.26), compare = my_comparisons_tp)\np4 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"Macrophage_HLADRn_CD163n\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.4, label_y = c(0.3,0.33,0.36), compare = my_comparisons_tp)\np5 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"MMT_HLADRn_CD163n\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.2, label_y = c(0.1,0.13,0.16), compare = my_comparisons_tp)\np6 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"CD8T\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.1, label_y = c(0.05,0.07,0.09), compare = my_comparisons_tp)\np7 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"CD4T\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.005, label_y = c(0.0005,0.0006,0.0007), compare = my_comparisons_tp)\np8 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"Monocyte\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 0.03, label_y = c(0.02,0.023,0.026), compare = my_comparisons_tp)\np9 &lt;- boxplot_clinical(df = tp_df, sel_group = \"stype2\", celltype = \"immunecells\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 1, label_y = c(0.8,0.85,0.9), compare = my_comparisons_tp)\n\np &lt;- (p1|p2|p3|p9|plot_spacer())/(p4|p5|p6|p7|p8)\nggsave(glue::glue(\"{res_dir}/figure1sup5a_cellprop_tumor_para.pdf\"), p, width = 6, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1sup5b",
    "href": "figure1.html#figure1sup5b",
    "title": "figure1",
    "section": "figure1sup5b",
    "text": "figure1sup5b\n\n# stages_tme\nstages_tme &lt;- metadata[[\"stages_tme\"]] %&gt;% dplyr::select(patient_id, stage) %&gt;%\n  mutate(patient_id = glue::glue(\"{patient_id}_pdac\")) \nst_df &lt;- metadata[[\"cell_ratio\"]] %&gt;% inner_join(stages_tme, by = c(\"sample_id\" = \"patient_id\"))\n\nmy_comparisons_st &lt;- list(c(\"RPC\", \"BRPC_LAPC\"), c(\"RPC\", \"MPC\"), c(\"BRPC_LAPC\", \"MPC\"))\nst_df$stage &lt;- factor(st_df$stage, levels = c(\"MPC\", \"BRPC_LAPC\", \"RPC\") %&gt;% rev())\nfil_c &lt;- c(\"MPC\" = \"#BC3C29FF\", \"BRPC_LAPC\" = \"#0072B5FF\", \"RPC\" = \"#E18727FF\")\n\np1 &lt;- boxplot_clinical(df = st_df, sel_group = \"stage\", celltype = \"Macrophage_HLADRn_CD163n\", fil_col = fil_c, wd = .4,\n                        axistheme = axistheme2, ylim = 0.5, label_y = c(0.35,0.4,0.45), compare = my_comparisons_st)\np2 &lt;- boxplot_clinical(df = st_df, sel_group = \"stage\", celltype = \"mCAF\", fil_col = fil_c, wd = .4,\n                       axistheme = axistheme2, ylim = 1.0, label_y = c(0.7,0.8,0.9), compare = my_comparisons_st)\n\np &lt;- p1|p2\nggsave(glue::glue(\"{res_dir}/figure1sup5b_cellprop_stages_tme.pdf\"), p, width = 6, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1sup5c",
    "href": "figure1.html#figure1sup5c",
    "title": "figure1",
    "section": "figure1sup5c",
    "text": "figure1sup5c\n\n# mpc_primary_metastasis\nsampleinfo &lt;- sinfo %&gt;% dplyr::select(sample_id, stype2) %&gt;% distinct() %&gt;% \n  dplyr::filter(stype2 %in% c(\"puncture_pdac\", \"puncture_liver\"))\nmpm_df &lt;- metadata[[\"cell_ratio\"]] %&gt;% inner_join(sampleinfo, by = \"sample_id\") %&gt;%\n  dplyr::mutate(stype2 = case_when(stype2 == \"puncture_pdac\" ~ \"Biopsy pancreas\",\n                                   stype2 == \"puncture_liver\" ~ \"Biopsy liver\"))\nmy_comparisons_mpm &lt;- list(c(\"Biopsy pancreas\", \"Biopsy liver\"))\nmpm_df$stype2&lt;- factor(mpm_df$stype2, levels = c(\"Biopsy pancreas\", \"Biopsy liver\") %&gt;% rev())\nfil_c &lt;- c(\"Biopsy pancreas\" = \"#BC3C29FF\", \"Biopsy liver\" = \"#0072B5FF\")\n\np1 &lt;- boxplot_clinical(df = mpm_df, sel_group = \"stype2\", celltype = \"CD8T\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.025, label_y = 0.015, compare = my_comparisons_mpm)\np2 &lt;- boxplot_clinical(df = mpm_df, sel_group = \"stype2\", celltype = \"Macrophage_HLADRn_CD163n\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.6, label_y = 0.5, compare = my_comparisons_mpm)\np3 &lt;- boxplot_clinical(df = mpm_df, sel_group = \"stype2\", celltype = \"mCAF\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.8, label_y = 0.7, compare = my_comparisons_mpm)\n\np &lt;- p1|p2|p3\nggsave(glue::glue(\"{res_dir}/figure1sup5c_cellprop_metastasis.pdf\"), p, width = 3.6, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure1.html#figure1sup5d",
    "href": "figure1.html#figure1sup5d",
    "title": "figure1",
    "section": "figure1sup5d",
    "text": "figure1sup5d\n\nneoadj_vs_direct_surgery1 &lt;- metadata[[\"neoadj_vs_direct_surgery\"]] %&gt;% dplyr::select(patient_id, treatment_type) %&gt;%\n  mutate(patient_id = glue::glue(\"{patient_id}_pdac\"))\nneoadj_vs_direct_surgery2 &lt;- metadata[[\"neoadj_vs_direct_surgery\"]] %&gt;% dplyr::select(patient_id, treatment_type) %&gt;%\n  mutate(patient_id = glue::glue(\"{patient_id}_ca\"))\nneoadj_vs_direct_surgery &lt;- rbind(neoadj_vs_direct_surgery1, neoadj_vs_direct_surgery2) %&gt;%\n  dplyr::mutate(treatment_type = case_when(treatment_type == \"surgery_after_chemo\" ~ \"Surgery after chemo\",\n                                           treatment_type == \"direct_surgery\" ~ \"Upfront surgery\"))\nnds_df &lt;- metadata[[\"cell_ratio\"]] %&gt;% inner_join(neoadj_vs_direct_surgery, by = c(\"sample_id\" = \"patient_id\"))\n\nmy_comparisons_nds &lt;- list(c(\"Upfront surgery\", \"Surgery after chemo\"))\nnds_df$treatment_group&lt;- factor(nds_df$treatment_type, levels = c(\"Upfront surgery\", \"Surgery after chemo\")%&gt;% rev())\nfil_c &lt;- c(\"Upfront surgery\" = \"#BC3C29FF\", \"Surgery after chemo\" = \"#0072B5FF\")\n\np1 &lt;- boxplot_clinical(df = nds_df, sel_group = \"treatment_group\", celltype = \"Epithelial_tumor\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.7, label_y = 0.6, compare = my_comparisons_nds)\np2 &lt;- boxplot_clinical(df = nds_df, sel_group = \"treatment_group\", celltype = \"CAF_col1p\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.5, label_y = 0.4, compare = my_comparisons_nds)\np3 &lt;- boxplot_clinical(df = nds_df, sel_group = \"treatment_group\", celltype = \"MMT_HLADRp\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.4, label_y = 0.3, compare = my_comparisons_nds)\np4 &lt;- boxplot_clinical(df = nds_df, sel_group = \"treatment_group\", celltype = \"CD4T\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.03, label_y = 0.02, compare = my_comparisons_nds)\np5 &lt;- boxplot_clinical(df = nds_df, sel_group = \"treatment_group\", celltype = \"Macrophage_HLADRn_CD163n\", fil_col = fil_c,\n                       axistheme = axistheme2, ylim = 0.4, label_y = 0.3, compare = my_comparisons_nds)\n\np &lt;- p1|p2|p3|p4|p5\nggsave(glue::glue(\"{res_dir}/figure1sup5d_cellprop_chemo.pdf\"), p, width = 6, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>figure1</span>"
    ]
  },
  {
    "objectID": "figure2.html",
    "href": "figure2.html",
    "title": "figure2",
    "section": "",
    "text": "figure2b\n# define cell groups\nepiendo_cells &lt;- c(\"Epithelial tumor cell\", \"Normal epithelial cell\", \"Endothelial cell\")\nimmu_stroma_cells &lt;- c(\"DC\", \"MDSC\", \"Monocyte\", \"B cell\", \"CD8+ T cell\", \"CD4+ T cell\",\n                 \"HLA-DR-CD163- mp\", \"HLA-DR-CD163+ mp\", \"HLA-DR+CD163- mp\",\n                   \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163- MMT\", \"HLA-DR+CD163- MMT\", \n                 \"HLA-DR+CD163+ MMT\", \"PSC\", \"myoCAF\", \"Col1+ CAF\")\nother_cells &lt;- c(\"CCR6+ cell\", \"B7-H4+ cell\", \"Ki67+ cell\", \"Vim+ cell\", \"Unknown\")\n\ngrouping_celltype &lt;- data.frame(cell_type_new = c(epiendo_cells, immu_stroma_cells, other_cells),\n                                meta_celltype = c(rep(\"Epi-endo\", 3), rep(\"Immune-stroma\", 16), rep(\"Others\", 5)))\n\n# calculate fraction data\ncol_frac &lt;- coldat %&gt;% group_by(cluster_names, cell_type_new) %&gt;% dplyr::mutate(cell_clu_count = n()) %&gt;%\n  group_by(cluster_names) %&gt;% dplyr::mutate(all_count = n(), frac = cell_clu_count / all_count) %&gt;%\n  group_by(cell_type_new) %&gt;% dplyr::mutate(all_c_count = n(), frac2 = cell_clu_count / all_c_count)\ncol_frac_s &lt;- col_frac %&gt;% select(cluster_names, cell_type_new, frac2, frac) %&gt;%\n  na.omit() %&gt;% unique() %&gt;% as.data.frame()\ncol_frac_wide &lt;- col_frac_s %&gt;% select(-frac) %&gt;%\n  pivot_wider(names_from = cell_type_new, values_from = frac2, values_fill = 0) %&gt;%\n  as.data.frame() %&gt;% column_to_rownames(var = \"cluster_names\") %&gt;% as.matrix()\n\ncol_frac_wide &lt;- col_frac_wide[, c(epiendo_cells, immu_stroma_cells)]\nht_mat &lt;- scale(t(col_frac_wide))\n\n# grouped scale \nscale_this &lt;- function(x){\n  (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)\n}\nplot_data &lt;- col_frac_s %&gt;%\n  group_by(cluster_names) %&gt;% dplyr::mutate(frac2_scaled = scale_this(frac2)) %&gt;%\n  group_by(cell_type_new) %&gt;% dplyr::mutate(frac_scaled_byrow = scale_this(frac))\nplot_data &lt;- left_join(plot_data, grouping_celltype) %&gt;% ungroup() %&gt;%\n  dplyr::filter(meta_celltype != \"Others\")\n\n# calculate dendrogram\nclust &lt;- hclust(dist(ht_mat))\nv_clust &lt;- hclust(dist(t(ht_mat)))\nddgram_col &lt;- as.dendrogram(v_clust)\nggtree_plot_col &lt;- ggtree(ddgram_col) + layout_dendrogram()\nddgram &lt;- as.dendrogram(clust)\nggtree_plot &lt;- ggtree::ggtree(ddgram)\n\n# set colors and output location\ncol_fun1 = circlize::colorRamp2(c(-1, 0, 1, 2, 3), c(\"#5658A5\", \"#8BCDA3\", \"#FBF4AA\", \"#F16943\", \"#9D1A44\"))\nmeta_colors &lt;- c(\"Epi-endo\" = \"#B61932\", \"Immune-stroma\" = \"#568AC2\", \"Others\" = \"#BEA278\")\nctype_colors &lt;- data.frame(meta_colors, meta_celltype = names(meta_colors))\nplot_data &lt;- left_join(plot_data, ctype_colors, by = \"meta_celltype\")\n\n# main plot\ndotplot3 &lt;- plot_data %&gt;%\n  dplyr::mutate(`Enrichment\\nin cell types` = frac2_scaled) %&gt;%  \n  dplyr::mutate(`Enrichment\\nin clusters` = frac_scaled_byrow) %&gt;%\n  dplyr::mutate(cell_type_new = factor(cell_type_new, levels = clust$labels[clust$order]),\n         cluster = factor(cluster_names, levels = v_clust$labels[v_clust$order])) %&gt;%\n  ggplot(aes(x=cluster, y = cell_type_new, color = `Enrichment\\nin clusters`, size = `Enrichment\\nin cell types`)) +\n  geom_point() +\n  cowplot::theme_cowplot() +\n  theme(axis.line  = element_blank()) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  xlab('') +\n  ylab('') +\n  theme(axis.ticks = element_blank()) +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"cm\")) +\n  scale_color_gradientn(colours = col_fun1(seq(-1, 4, by = 0.2))) +\n  scale_y_discrete(position = \"right\")\n\n# handy function to alter the legend\naddSmallLegend &lt;- function(myPlot, pointSize = 4, textSize = 8) {\n  myPlot +\n    guides(shape = guide_legend(override.aes = list(size = pointSize))) +\n    theme(legend.title = element_text(size = textSize),\n          legend.text  = element_text(size = textSize),\n          legend.position = c(1.1, -0.3), ## legend.justification does not work well\n          legend.direction = \"horizontal\")\n}\ndotplot3_s &lt;- addSmallLegend(dotplot3)\n\n# dendrograms\nggtree_plot &lt;- ggtree_plot + ylim2(dotplot3)\nggtree_plot_col &lt;- ggtree_plot_col + xlim2(dotplot3)\n# row labels of cell metaclusters\nlabels &lt;- ggplot(plot_data %&gt;%\n                   dplyr::mutate(`Cell Categories` = meta_celltype,\n                          cell_type_new = factor(cell_type_new, levels = clust$labels[clust$order])),\n                 aes(y = cell_type_new, x = 3, fill = `Cell Categories`)) +\n  geom_tile() +\n  scale_fill_manual(values = meta_colors) +\n  ylim2(dotplot3)\n\n# legend\nlegend &lt;- plot_grid(ggpubr::get_legend(labels + theme(legend.position = \"bottom\")))\nlabels &lt;- labels + theme_nothing() + theme(legend.position = \"none\")  +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"cm\"))\n# merged plot\nmerged &lt;- plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + ggtree_plot_col +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() +\n  ggtree_plot + plot_spacer() + labels + plot_spacer() + dotplot3_s +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + legend +\n  plot_layout(ncol = 5, widths = c(0.7, -0.3, 0.2, -0.25, 4.2), heights = c(0.9, -0.4, 4, -0.5, 0.9))\n\nggsave(glue::glue(\"{res_dir}/fig2b_dotplot_main.pdf\"), merged, height = 7, width = 9)\nmerged",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>figure2</span>"
    ]
  },
  {
    "objectID": "figure2.html#figure2c",
    "href": "figure2.html#figure2c",
    "title": "figure2",
    "section": "figure2c",
    "text": "figure2c\n\n# use fast_tsne function\nsource(\"/cluster/apps/FIt-SNE/1.2.1/fast_tsne.R\", chdir = T)\n\n# set empty theme\ntheme_no &lt;- function (font_size = 14, font_family = \"\", rel_small = 12/14) {\n  theme_void(base_size = font_size, base_family = font_family) %+replace%\n    theme(line = element_blank(), rect = element_blank(),\n          text = element_text(family = font_family, face = \"plain\",\n                              color = \"black\", size = font_size, lineheight = 0.9,\n                              hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(),\n                              debug = FALSE), axis.line = element_blank(),\n          axis.line.x = NULL, axis.line.y = NULL, axis.text = element_blank(),\n          axis.text.x = NULL, axis.text.x.top = NULL, axis.text.y = NULL,\n          axis.text.y.right = NULL, axis.ticks = element_blank(),\n          axis.ticks.length = unit(0, \"pt\"), axis.title = element_blank(),\n          axis.title.x = NULL, axis.title.x.top = NULL, axis.title.y = NULL,\n          axis.title.y.right = NULL, legend.background = element_blank(),\n          panel.background = element_blank(),\n          panel.border = element_blank(), panel.grid = element_blank(),\n          panel.grid.major = NULL, panel.grid.minor = NULL,\n          panel.spacing = unit(font_size/2, \"pt\"), panel.spacing.x = NULL,\n          panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_blank(),\n          strip.text = element_blank(), strip.text.x = NULL,\n          strip.text.y = NULL, strip.placement = \"inside\",\n          strip.placement.x = NULL, strip.placement.y = NULL,\n          strip.switch.pad.grid = unit(0, \"cm\"), strip.switch.pad.wrap = unit(0, \"cm\"), \n          plot.background = element_blank(), plot.title = element_blank(),\n          plot.subtitle = element_blank(), plot.caption = element_blank(),\n          plot.tag = element_text(face = \"bold\", hjust = 0,\n                                  vjust = 0.7), plot.tag.position = c(0, 1), \n          plot.margin = margin(0,0, 0, 0), complete = TRUE)\n}\n\ndf_com &lt;- distinct(coldat[, c(\"cluster_names\", \"community_name\", \"meta_cluster\")]) \n\n# Option 3 fast_tsne & cell interaction data. for details of m_list, see\n# ~/projects/hyperion/code/community/data_generation/1_community_clusters_generation.R\nm_list &lt;- readr::read_rds(glue::glue(\"{dat_dir}/m_list_0.rds\"))\nm &lt;- do.call(rbind, unname(m_list)) %&gt;% as.matrix()\nm &lt;- m[!endsWith(rownames(m), \"_NA\"), ]\nres_tsne &lt;- fftRtsne(m)\n\ntsne_result3 &lt;- data.frame(community_name = rownames(m),\n                           tsne_1 = res_tsne[, 1],\n                           tsne_2 = res_tsne[, 2])\n\ntsne_result3 &lt;- left_join(tsne_result3,\n                          df_com, by = \"community_name\")\n\n# plot and output\ntsne_plot_3 &lt;- ggplot(tsne_result3,\n                      aes(x = tsne_1,\n                          y = tsne_2,\n                          color = meta_cluster,\n                          fill = meta_cluster)) +\n  geom_point(size = 0.001, alpha = 0.5) +\n  scale_color_manual(values = meta_cols) +\n  scale_fill_manual(values = meta_cols) +\n  theme_no() +\n  labs(color = \"Meta Clusters\") +\n  theme(legend.position = \"none\") \n  #guides(color = guide_legend(override.aes = list(size = 2, alpha = 1)))\nggsave(glue::glue(\"{res_dir}/fig2c_tsne_community_meta_clusters.pdf\"),\n       tsne_plot_3, dpi=300, width = 6, height = 7, units = \"cm\")\ntsne_plot_3",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>figure2</span>"
    ]
  },
  {
    "objectID": "figure2.html#figure2d",
    "href": "figure2.html#figure2d",
    "title": "figure2",
    "section": "figure2d",
    "text": "figure2d\n\n# circular stacked barplot of community and meta cluster fraction\n## get the fraction data of both community and meta levels\ndt &lt;- coldat[, c(\"cell_id\",\"cell_type_new\", \"cluster_names\", \"community_name\", \"meta_cluster\")] %&gt;%\n  na.omit()\n\ndt &lt;- dt %&gt;% group_by(cluster_names) %&gt;% mutate(comm_count = length(unique(community_name))) %&gt;%\n  dplyr::mutate(all_clu_cell_count = n()) %&gt;% group_by(cluster_names, cell_type_new) %&gt;%\n  dplyr::mutate(cell_allcount = n(), frac_cells_clu = cell_allcount / all_clu_cell_count)\n\ndt &lt;- dt %&gt;% group_by(meta_cluster) %&gt;% dplyr::mutate(comm_count_meta = length(unique(community_name))) %&gt;%\n  dplyr::mutate(all_meta_cell_count = n()) %&gt;% group_by(meta_cluster, cell_type_new) %&gt;%\n  dplyr::mutate(cell_allcount_meta = n(), frac_cells_meta = cell_allcount_meta / all_meta_cell_count)\n\ndt$count_avg_meta &lt;- dt$cell_allcount_meta / dt$comm_count_meta\ndt$count_avg &lt;- dt$cell_allcount / dt$comm_count\n\ndt$cell_type_new &lt;- factor(dt$cell_type_new, levels = names(ctype10_cols))\n\ncommu_data &lt;- unique(dt[, c(\"cell_type_new\", \"cluster_names\",\n                            \"count_avg\", \"comm_count\", \"frac_cells_clu\")])\nmeta_data &lt;- unique(dt[, c(\"cell_type_new\", \"meta_cluster\",\n                           \"count_avg_meta\", \"comm_count_meta\", \"frac_cells_meta\")])\n\ncommu_dt &lt;- commu_data[, c(1, 2, 5)] %&gt;% gather(key = 'observation', value = 'value', -c(1, 2))\nmeta_dt &lt;- meta_data[, c(1, 2, 5)] %&gt;% gather(key = 'observation', value = 'value', -c(1, 2))\ncommu_dt &lt;- commu_dt[, -3]\nmeta_dt &lt;- meta_dt[, -3]\n## convert the long matrix to wide matrix, with '0' filled in the missing cell\nmtx_commu_dt &lt;- commu_dt %&gt;% ungroup() %&gt;%\n  pivot_wider(id_cols = \"cell_type_new\", names_from = \"cluster_names\",\n              values_from = \"value\", values_fill = 0)\nmtx_meta_dt &lt;- meta_dt %&gt;% ungroup() %&gt;%\n  pivot_wider(id_cols = \"cell_type_new\", names_from = \"meta_cluster\",\n              values_from = \"value\", values_fill = 0)\n\n## convert the wide matrices to the long ones\nlong_mtx_commu_dt &lt;- mtx_commu_dt %&gt;% pivot_longer(cols = NL1:DC2, names_to = \"names\", values_to = \"value\")\nlevels(long_mtx_commu_dt$names) &lt;- c(\n  \"TM1\", \"TB2\", \"TB1\", \"ST_MP2\", \"ST_MP1\", \"ST_mCAF2\",\n  \"ST_mCAF1\", \"ST_CAF3\", \"ST_CAF2\", \"ST_CAF1\", \"C2_MP2\",\n  \"C2_MP1\", \"C1_MP2\", \"C1_MP1\", \"IM_M\", \"IM_e2\", \"IM_e1\",\n  \"DC2\", \"DC1\", \"NL3\", \"NL2\", \"NL1\"\n)\nlong_mtx_commu_dt$group &lt;- 'cluster'\n\nlong_mtx_meta_dt &lt;- mtx_meta_dt %&gt;% pivot_longer(cols = \"MC-normal\":\"MC-tumor-core\", names_to = \"names\", values_to = \"value\")\nlevels(long_mtx_meta_dt$names) &lt;-\n  rev(c(\n    \"MC-tumor-core\",\n    \"MC-tumor-frontline\",\n    \"MC-stroma-macro\",\n    \"MC-stroma-mCAF\",\n    \"MC-stroma-CAF\",\n    \"MC-macro-c2\",\n    \"MC-macro-c1\",\n    \"MC-immune-myeloid\",\n    \"MC-immune-enriched\",\n    \"MC-DC\",\n    \"MC-normal\"\n  ))\nlong_mtx_meta_dt$group &lt;- 'metacluster'\n\n## combine the 2 matrices\ndata &lt;- rbind(long_mtx_commu_dt, long_mtx_meta_dt)\n\n## set the empty area\nempty_bar &lt;- 2\nnObsType &lt;- nlevels(as.factor(data$cell_type_new))\nto_add &lt;-\n  data.frame(matrix(\n    data = NA,\n    nrow = empty_bar * nlevels(as.factor(data$group)) * nObsType,\n    ncol(data)\n  ))\ncolnames(to_add) &lt;- colnames(data)\nto_add$group &lt;-\n  rep(unique(data$group), each = empty_bar)\ndata &lt;- rbind(data, to_add)\ndata &lt;- data %&gt;% arrange(group, names)\ndata$id &lt;-\n  rep(seq(1, nrow(data) / nObsType) , each = nObsType)\n\n## set the label data\nlabel_data &lt;-\n  data %&gt;% group_by(id, names) %&gt;% summarize(tot = sum(value))\nnumber_of_bar &lt;- nrow(label_data)\nangle &lt;-\n  90 - 360 * (label_data$id - 0.5) / number_of_bar\n# I substract 0.5 because the letter must have the angle of the center of the bars.\n# Not extreme right(1) or extreme left (0)\nlabel_data$hjust &lt;- ifelse(angle &lt;= -90, 1, 0)\nlabel_data$angle &lt;- ifelse(angle &lt;= -90, angle + 180, angle)\n\n# prepare a data frame for base lines\nbase_data &lt;- data %&gt;%\n  group_by(group) %&gt;%\n  summarize(start = min(id), end = max(id) - empty_bar) %&gt;%\n  rowwise() %&gt;%\n  mutate(title = mean(c(start, end)))\n\n# prepare a data frame for grid (scales)\ngrid_data &lt;- base_data\ngrid_data$end &lt;-\n  grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + .5\ngrid_data$start &lt;- grid_data$start - .5\ngrid_data &lt;- grid_data[-1,]\n\np &lt;- ggplot(data) +\n  # Add the stacked bar\n  geom_bar(\n    aes(x = as.factor(id), y = value, fill = cell_type_new),\n    stat = \"identity\",\n    position = 'fill',\n    alpha = 1\n  ) +\n  scale_fill_manual(values = ctype10_cols) +\n  # Add a val=1/.75/.50/.25/0 lines. I do it at the beginning to make sur barplots are OVER it.\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 0,\n      xend = start,\n      yend = 0\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 0.25,\n      xend = start,\n      yend = .25\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = .5,\n      xend = start,\n      yend = .5\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = .75,\n      xend = start,\n      yend = .75\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  )  +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 1,\n      xend = start,\n      yend = 1\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  )  +\n  # Add text showing the value of each 1.00/.75/.50/.25/0 lines\n  ggplot2::annotate(\n    \"text\",\n    x = rep(max(data$id), 5),\n    y = c(0, .25, .5, .75, 1),\n    label = c(\"0\", '0.25', '0.5', '0.75', '1.0') ,\n    color = \"darkgray\",\n    size = 3 ,\n    angle = 0,\n    fontface = \"bold\",\n    hjust = 1\n  ) +\n  ylim(-.3, max(label_data$tot, na.rm = T) + .5) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(rep(-1, 4), \"cm\")\n  ) +\n  coord_polar() +\n  # Add labels on top of each bar\n  geom_text(\n    data = label_data,\n    aes(\n      x = id,\n      y = tot + .04,\n      label = names,\n      hjust = hjust\n    ),\n    color = \"black\",\n    fontface = \"bold\",\n    alpha = 1,\n    size = 2.5,\n    angle = label_data$angle,\n    inherit.aes = FALSE\n  )\nggsave(glue::glue(\"{res_dir}/fig2d_cell_type_prop_in_MCs_barplot_circle.pdf\"), p, height = 7, width = 7)\np",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>figure2</span>"
    ]
  },
  {
    "objectID": "figure2.html#figure2e",
    "href": "figure2.html#figure2e",
    "title": "figure2",
    "section": "figure2e",
    "text": "figure2e\n\n# read in and alter the data\nci_weighted &lt;- readr::read_rds(glue::glue(\"{dat_dir}/ci_weighted_list.rds\"))\nci_data &lt;- data.table::rbindlist(ci_weighted)\ndim(ci_data)\n\n[1] 56905    10\n\n# rename\nclu_new &lt;- meta_clu$cluster_names %&gt;% `names&lt;-`(meta_clu$old_cluster_name)\nci_data$from_cluster &lt;- clu_new[ci_data$from_cluster]\nci_data$to_cluster &lt;- clu_new[ci_data$to_cluster]\n\nmeta_new &lt;- meta_clu$meta_short_new %&gt;% `names&lt;-`(meta_clu$cluster_names)\nci_data$from_meta &lt;- meta_new[ci_data$from_cluster]\nci_data$to_meta &lt;- meta_new[ci_data$to_cluster]\n\n# meta-cluster interaction with self-interaction\nci_matrix3 &lt;- ci_data %&gt;% group_by(from_meta, to_meta) %&gt;% summarise(count = n()) %&gt;%\n  pivot_wider(names_from = from_meta, values_from = count, values_fill = 0) %&gt;%\n  as.data.frame() %&gt;% column_to_rownames(var = \"to_meta\") %&gt;% as.matrix()\n\n# cluster interaction without self-interaction\nci_matrix4 &lt;- ci_matrix3\nfor (i in 1:nrow(ci_matrix4)) {\n  x &lt;- rownames(ci_matrix4)[i]\n  ci_matrix4[x, x] &lt;- 0\n}\n\n\nci_matrix4 &lt;- ci_matrix4[c(\"MC-tumor-core\",\n                           \"MC-tumor-frontline\",\n                           \"MC-stroma-macro\",\n                           \"MC-stroma-mCAF\",\n                           \"MC-stroma-CAF\",\n                           \"MC-macro-c2\",\n                           \"MC-macro-c1\",\n                           \"MC-immune-myeloid\",\n                           \"MC-immune-enriched\",\n                           \"MC-DC\",\n                           \"MC-normal\"),\n                         c(\"MC-tumor-core\",\n                           \"MC-tumor-frontline\",\n                           \"MC-stroma-macro\",\n                           \"MC-stroma-mCAF\",\n                           \"MC-stroma-CAF\",\n                           \"MC-macro-c2\",\n                           \"MC-macro-c1\",\n                           \"MC-immune-myeloid\",\n                           \"MC-immune-enriched\",\n                           \"MC-DC\",\n                           \"MC-normal\")]\n\n# rotate labels\n#pdf(glue::glue(\"{res_dir}/fig2e_metacluster_interaction_circ_noself_rotate.pdf\"), width = 10, height = 10)\nchordDiagram(ci_matrix4, grid.col = meta_cols, annotationTrack = c(\"grid\", \"axis\"),\n             preAllocateTracks = list(track.height = max(strwidth(unlist(dimnames(ci_matrix4))))))\ncircos.track(track.index = 1, panel.fun = function(x, y) {\n  circos.text(CELL_META$xcenter, CELL_META$ylim[1], CELL_META$sector.index, cex = 0.7,\n              facing = \"clockwise\", niceFacing = TRUE, adj = c(-0.2, 0))\n}, bg.border = NA)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>figure2</span>"
    ]
  },
  {
    "objectID": "figure3.html",
    "href": "figure3.html",
    "title": "figure3",
    "section": "",
    "text": "figure3a\nlevels(metadata[[\"differentiation_degree\"]]$diff_degree) = c(\"low\", \"middle\", \"high\")\nlevels(metadata[[\"stages_tme\"]]$stage) = c(\"MPC\", \"BRPC_LAPC\", \"RPC\")\n\nkeycols_list &lt;- c(list(\"stage\"), list(\"treatment_type\"), list(\"os_group_24\"))\ncompare_groups &lt;- c(\"stages_tme\", \"neoadj_vs_direct_surgery\", \"os_analysis\")\nnames(keycols_list) &lt;- compare_groups\n\nmeta_cluster_names &lt;- rev(c(\"MC-macro-c2\", \"MC-macro-c1\", \"MC-immune-myeloid\",\n                            \"MC-immune-enriched\", \"MC-stroma-CAF\", \"MC-stroma-macro\",\n                            \"MC-stroma-mCAF\", \"MC-tumor-frontline\", \"MC-tumor-core\"))\n\ntotal_group &lt;- coldat %&gt;%\n  dplyr::select(c(sample_id, sample_tiff_id, patient_id, cell_id, \n                  stype2, cluster_names, meta_cluster)) %&gt;%\n  na.omit() %&gt;% dplyr::filter(meta_cluster %in% meta_cluster_names)\n\nplist &lt;- list()\n\ntotal_group_pro &lt;- total_group %&gt;% group_by(meta_cluster, sample_tiff_id) %&gt;% \n  summarise(pro = n()/nrow(total_group)) %&gt;% group_by(meta_cluster) %&gt;% dplyr::mutate(pro_total = sum(pro))\n\ntotal_group_pro$meta_cluster &lt;- fct_relevel(total_group_pro$meta_cluster, meta_cluster_names)\np1 &lt;- ggplot(distinct(total_group_pro[,c(\"meta_cluster\", \"pro_total\")]),\n             aes(x = pro_total, y = meta_cluster, fill = meta_cluster)) +\n  geom_bar(stat='identity', linewidth = 0.8) +\n  theme_classic() +\n  scale_fill_manual(values = meta_cols,\n                    labels = vars(meta_cluster)) +\n  theme(strip.placement  = \"outside\",\n        panel.spacing    = unit(3, \"points\"),\n        strip.background = element_blank(),\n        strip.text       = element_text(face = \"bold\", size = 5),\n        axis.text.x = element_text(size = 10, colour=\"black\"),\n        axis.text.y = element_text(size = 10, colour=\"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"none\")\nplist[[\"total\"]] &lt;- p1\nggsave(glue::glue(\"{res_dir}/fig3a_community_total_metacluster.pdf\"), p1, width = 3, height = 4)\np1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>figure3</span>"
    ]
  },
  {
    "objectID": "figure3.html#figure3bcd",
    "href": "figure3.html#figure3bcd",
    "title": "figure3",
    "section": "figure3bcd",
    "text": "figure3bcd\n\nall_total &lt;- total_group_pro %&gt;% dplyr::select(meta_cluster, pro_total) %&gt;% distinct() %&gt;% ungroup()\nfactor_list &lt;- list(\"stages_tme\" = c(\"MPC\", \"BRPC_LAPC\", \"RPC\"),\n                    \"neoadj_vs_direct_surgery\" = c(\"direct_surgery\", \"surgery_after_chemo\"),\n                    \"os_analysis\" = c(\"short\", \"long\"))\n\nfor(compare_group in compare_groups){\n  #cli::cli_h1(compare_group)\n  groups &lt;- metadata[[compare_group]]\n  gp_key &lt;- keycols_list[[compare_group]]\n  cli::cli_alert_info(gp_key)\n  groups &lt;- groups %&gt;% drop_na(all_of(gp_key))\n\n  dt_groups &lt;- total_group %&gt;% dplyr::filter(patient_id %in% groups$patient_id)\n  if (compare_group == \"chemo_outcome_before\") {\n    dt_groups &lt;- dt_groups %&gt;% dplyr::filter(stype2 %in% c(\"before_chemo\",\"puncture_pdac\"))\n  } else {\n    dt_groups &lt;- dt_groups %&gt;% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n  dat_plot &lt;- dt_groups %&gt;%\n    group_by(meta_cluster, sample_tiff_id) %&gt;%\n    summarise(nc = n()) %&gt;%\n    group_by(sample_tiff_id) %&gt;%\n    dplyr::mutate(nt = sum(nc)) %&gt;%\n    dplyr::mutate(pro = nc/nt) %&gt;% ungroup()\n  dat_plot$meta_cluster &lt;- factor(dat_plot$meta_cluster, levels = meta_cluster_names)\n  \n  metainfo &lt;- coldat[, c(\"sample_tiff_id\", \"patient_id\")] %&gt;% distinct()\n  dat_plot &lt;- inner_join(dat_plot, metainfo, by = \"sample_tiff_id\") %&gt;%\n    inner_join(groups, by = \"patient_id\") %&gt;% distinct()\n\n  dat_plot[[gp_key]] &lt;- factor(dat_plot[[gp_key]], levels = factor_list[[compare_group]])\n  dat_plot$meta_cluster &lt;- fct_relevel(dat_plot$meta_cluster, meta_cluster_names)\n  p &lt;- ggboxplot(dat_plot, x = \"meta_cluster\", y = \"pro\", fill = gp_key, outlier.shape = NA,\n                 palette = pal_nejm(\"default\")(3), xlab = NULL,size = 0.2) + theme_classic() +\n    theme(strip.placement  = \"outside\",\n          panel.spacing    = unit(3, \"points\"),\n          strip.background = element_blank(),\n          strip.text       = element_text(face = \"bold\", size = 5),\n          axis.text.x = element_text(size = 10, colour=\"black\"),\n          axis.text.y = element_blank(),\n          axis.line.x = element_line(size = 0.4),\n          axis.line.y = element_line(size = 0.4),\n          legend.position=\"right\") +\n    labs(x= NULL, y = NULL)\n  exp1 &lt;- expr(pro ~ !!ensym(gp_key))\n  stat_test &lt;- dat_plot %&gt;%\n    group_by(meta_cluster) %&gt;% rstatix::wilcox_test(eval(exp1), p.adjust.method = \"BH\")\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                            p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                            p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                            p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                            p &lt; 0.0001 ~ \"****\",\n                                                            TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    add_xy_position(x = \"meta_cluster\", dodge = 0.8)\n  p1 &lt;- p +\n    stat_pvalue_manual(\n      stat_test, tip.length = 0.01, hide.ns = T, label = \"p.adj.signif\",\n      coord.flip = TRUE\n    ) + coord_flip() +\n    guides(fill = guide_legend(reverse = TRUE))\n  plist[[compare_group]] &lt;- p1\n  #write_rds(p1, glue::glue(\"{compare_group}_boxplot_wilct_sams.rds\"))\n}\npc &lt;- (plist[[1]]|plist[[2]]|plist[[3]]|plist[[4]]) + plot_layout(guides = 'collect', widths = c(2, 2.5, 2.5, 2.5))\nggsave(glue::glue(\"{res_dir}/fig3abcd_wilct.pdf\"), pc, width = 10, height = 4)\npc",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>figure3</span>"
    ]
  },
  {
    "objectID": "figure3.html#figure3efg",
    "href": "figure3.html#figure3efg",
    "title": "figure3",
    "section": "figure3efg",
    "text": "figure3efg\n\nfactor_list &lt;- list(\"stages_tme\" = c(\"RPC\", \"BRPC_LAPC\", \"MPC\"),\n                    \"neoadj_vs_direct_surgery\" = c(\"surgery_after_chemo\", \"direct_surgery\"),\n                    \"os_analysis\" = c(\"long\", \"short\"))\n\n# clinical metadata\nkeycols_list &lt;- c(list(\"stage\"), list(\"treatment_type\"),\n                 list(\"os_group_24\"))\n\nnames(keycols_list) &lt;- c(\"stages_tme\", \"neoadj_vs_direct_surgery\", \"os_analysis\")\n\ndt_list &lt;- list()\nfor (i in 1:length(keycols_list)) {\n  dt_list[[i]] &lt;- metadata[[names(keycols_list[i])]][c(\"patient_id\", keycols_list[[i]])]\n  dt_list[[i]] &lt;- coldat %&gt;% dplyr::filter(patient_id %in% dt_list[[i]]$patient_id) %&gt;%\n    dplyr::select(sample_id, stype2, patient_id) %&gt;% unique() %&gt;% left_join(dt_list[[i]], by = \"patient_id\")\n  \n  if (names(keycols_list)[i] == \"chemo_outcome_before\") {\n    dt_list[[i]] &lt;- dt_list[[i]] %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_all\"]])\n  } else {\n    dt_list[[i]] &lt;- dt_list[[i]] %&gt;% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] &lt;- left_join(dt_list[[i]] %&gt;% dplyr::select(-patient_id), \n                            distinct(coldat[,c(\"sample_id\", \"sample_tiff_id\")]), by = \"sample_id\")\n  dt_list[[i]] &lt;- left_join(dt_list[[i]], do.call(\"rbind\", ci), by = \"sample_tiff_id\") %&gt;% \n    dplyr::select(-c(from, to))\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] &lt;- dt_list[[i]] %&gt;% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %&gt;%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[keycols_list[[i]]]] &lt;- factor(dt_list[[i]][[keycols_list[[i]]]], \n                                              levels = factor_list[[names(keycols_list)[i]]])\n}\n\np_list &lt;- list()\nfor (i in 1:length(dt_list)) {\n  for (j in 1:length(keycols_list[[i]])) {\n    group1 &lt;- str_c(names(keycols_list)[i],keycols_list[[i]][j], sep= \"_\")\n    p_list[[group1]] &lt;- interaction_plot(dt_list[[i]] %&gt;% \n                                           dplyr::select(sample_id, keycols_list[[i]][j], \n                                                         sample_tiff_id, from_cluster, \n                                                         to_cluster, from_meta, to_meta) %&gt;% \n                                           na.omit(), colors = meta_cols,\n                                          conditionCol = keycols_list[[i]][j], group = group1)\n  }\n}\n\np_mian &lt;- p_list[[1]][[1]] + p_list[[1]][[2]] + p_list[[1]][[3]] +\n  p_list[[2]][[1]] + p_list[[2]][[2]] + p_list[[3]][[1]] + p_list[[3]][[2]] +\n  plot_layout(design = \"123#\\n4567\", guides='collect')\nggsave(glue::glue(\"{res_dir}/fig3efg.pdf\"), p_mian, width = 15, height = 6.75)\np_mian",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>figure3</span>"
    ]
  },
  {
    "objectID": "figure4.html",
    "href": "figure4.html",
    "title": "figure4",
    "section": "",
    "text": "figure4a\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new)) %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster))\n\ncell_types &lt;- c(\"Epithelial tumor cell\", \"Col1+ CAF\", \"myoCAF\", \"HLA-DR-CD163- MMT\",\n                \"HLA-DR+CD163- MMT\", \"HLA-DR+CD163+ MMT\", \"HLA-DR-CD163- mp\",\n                \"HLA-DR-CD163+ mp\", \"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\",\n                \"Monocyte\", \"MDSC\", \"B cell\", \"CD4+ T cell\", \"CD8+ T cell\",\n                \"CCR6+ cell\", \"Vim+ cell\", \"Ki67+ cell\", \"B7-H4+ cell\", \"DC\",\n                \"Normal epithelial cell\", \"PSC\", \"Endothelial cell\", \"Unknown\")\n\nout_inter &lt;- readr::read_csv(glue::glue(\"{dat_dir}/nochemoall_sce_neib_nbhood_dmax4_classic_testInteractions_bymetamerge.csv\"))\n\n#format results\nout_inter_sig &lt;- out_inter %&gt;% dplyr::filter(from_label != \"Unknown\" & to_label != \"Unknown\") %&gt;%\n  dplyr::mutate(inter_sig = case_when(sigval &lt; 0 ~ p_gt * sigval,\n                                      sigval &gt; 0 ~ p_lt * sigval,\n                                      sigval == 0 & p_gt &gt;= p_lt ~ -(1-p_gt),\n                                      sigval == 0 & p_gt &lt; p_lt ~ (1-p_lt)),\n                logp = -log10(p)) %&gt;%\n  dplyr::select(group_by, from_label, to_label, inter_sig, logp)\n\n# pearson correlation of cell type proportions\ndt_cell_roi &lt;- coldat %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  dplyr::select(cell_type_new, meta_merge, sample_tiff_id) %&gt;%\n  dplyr::rename(cell_type = cell_type_new) %&gt;%\n  group_by(sample_tiff_id, meta_merge, cell_type) %&gt;%\n  dplyr::mutate(n_cell = n()) %&gt;% ungroup() %&gt;%\n  distinct() %&gt;% group_by(sample_tiff_id, meta_merge) %&gt;%\n  dplyr::mutate(n_total = sum(n_cell)) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(prop = n_cell/n_total)\ndt_cell_roi$cell_type &lt;- factor(dt_cell_roi$cell_type, levels = cell_types)\ndt_cell_roi &lt;- dt_cell_roi %&gt;%\n  group_by(meta_merge, sample_tiff_id) %&gt;%\n  complete(cell_type, fill = list(prop = 0)) %&gt;% ungroup()\n\nmetas &lt;- unique(dt_cell_roi$meta_merge)\ndt_cell_roi_ls &lt;- list()\ndf_cor &lt;- list()\nfor (i in metas) {\n  dt_cell_roi_ls[[i]] &lt;- dt_cell_roi %&gt;%\n    dplyr::filter(meta_merge == i) %&gt;%\n    dplyr::select(cell_type, sample_tiff_id, prop) %&gt;%\n    pivot_wider(names_from = cell_type, values_from = prop, values_fill = 0)\n  mat_df &lt;- dt_cell_roi_ls[[i]] %&gt;% as.data.frame() %&gt;% `rownames&lt;-`(.$sample_tiff_id) %&gt;% .[,-1] %&gt;% as.matrix()\n  df_cor[[i]] &lt;- cor(mat_df)\n}\n\npl &lt;- list()\nfor (i in c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\")) {\n  dt_tb &lt;- as_tibble(df_cor[[i]], rownames = \"from_label\") %&gt;%\n    pivot_longer(!(\"from_label\"), names_to = \"to_label\", values_to = \"cor\")\n\n  # plot\n  pt_tb &lt;- out_inter_sig %&gt;% dplyr::filter(group_by == i) %&gt;%\n    left_join(dt_tb, by = c(\"from_label\",\"to_label\")) %&gt;%\n    dplyr::filter(from_label  %notin% c(\"Endothelial cell\", \"DC\", \"B7-H4+ cell\") &\n                    to_label  %notin% c(\"Endothelial cell\", \"DC\", \"B7-H4+ cell\"))\n\n  cell_cur &lt;- cell_types[cell_types %in% unique(pt_tb$from_label)]\n  pt_tb$from_label &lt;- factor(pt_tb$from_label, levels = cell_cur)\n  pt_tb$to_label &lt;- factor(pt_tb$to_label, levels = cell_cur)\n\n  pl[[i]] &lt;- ggplot(pt_tb, aes(from_label, to_label)) +\n    geom_tile(aes(fill = cor)) +\n    geom_point(aes(color = inter_sig, size = logp)) +\n    scale_size(range = c(0.05, 2.5), name = \"-log10P about\\nInteraction/Avoidance\") +\n    scale_fill_gradientn(colours = c(\"#404F8C\",\"#7882B4\",\"#FAFAFA\",\"#A05050\",\"#892A32\"),\n                         breaks = c(-1,-0.5,0,0.5,1), limit = c(-1,1), name=\"Coorelation of Cell\\nPercentage Per ROIs\") +\n    scale_color_gradientn(colours = c(\"#404F8C\",\"#7882B4\",\"#939BC3\",\"#AEB4D2\",\"#FAFAFA\",\"#C69696\",\"#B37373\",\"#A05050\",\"#892A32\"),\n                          breaks = c(-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1), limit = c(-1,1),\n                          name=\"Sig of Interaction/Avoidance\\nBased on Permutation Test\") +\n    theme_classic() + ggtitle(i) +\n    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 5), axis.text.y = element_text(size = 5),\n          legend.key.height = unit(0.2, \"cm\"), legend.key.width = unit(0.2, \"cm\"), legend.text = element_text(size = 4),\n          legend.title = element_text(size = 5), axis.title = element_text(size = 5),\n          title = element_text(size = 5))\n\n  ggsave(glue::glue(\"{res_dir}/fig4a_{i}_interaction_heatmap.pdf\"), pl[[i]], height = 4, width = 5.2)\n}\n\np1 &lt;- pl[[\"MC-tumor-frontline\"]] + theme(legend.position = \"none\")\np2 &lt;- pl[[\"MC-stroma-macro\"]] + theme(legend.position = \"none\")\np3 &lt;- pl[[\"MC-others\"]]\n\np &lt;- p1 | p2 | p3 + plot_layout(guides = 'collect')\n#ggsave(glue::glue(\"{res_dir}/fig4a_heatmap.pdf\"), p, width = 12.5, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure4.html#figure4b",
    "href": "figure4.html#figure4b",
    "title": "figure4",
    "section": "figure4b",
    "text": "figure4b\n\n#summary cell type prop\ncell_type_meta3_total &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% summarise(nt = n()) %&gt;% ungroup()\n\ncell_type_meta3 &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, cell_type_new, meta_merge) %&gt;% summarise(nc = n()) %&gt;% ungroup()\n\ncell_type_meta3$cell_type_new &lt;- factor(cell_type_meta3$cell_type_new)\ncell_type_meta3 &lt;- cell_type_meta3 %&gt;%\n  group_by(sample_id, meta_merge) %&gt;%\n  tidyr::complete(cell_type_new, fill = list(nc = 0)) %&gt;% ungroup()\ncell_type_meta3 &lt;- left_join(cell_type_meta3_total, cell_type_meta3, by = c(\"sample_id\", \"meta_merge\")) %&gt;%\n  dplyr::mutate(prop = nc/nt) %&gt;% dplyr::select(-c(nt, nc)) %&gt;% distinct()\n\n#add os info\ncell_type_meta3 &lt;- left_join(cell_type_meta3, sinfo, by = \"sample_id\") %&gt;%\n  dplyr::select(sample_id, cell_type_new, meta_merge, prop, pfs_state, pfs_month, os_state, os_month)\n\ncell_type_meta3_tb &lt;- cell_type_meta3 %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(meta_merge == \"MC-tumor-frontline\") %&gt;%\n  dplyr::mutate(group_mean = case_when(prop &gt;= mean(prop) ~ \"high\", prop &lt; mean(prop) ~ \"low\"))\n\ncell_type_meta3_tb_os &lt;- cell_type_meta3_tb %&gt;% dplyr::select(sample_id, os_state, os_month, group_mean) %&gt;% na.omit()\n\n#mean group\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_mean, data = cell_type_meta3_tb_os), palette = ggsci::pal_nejm(\"default\")(2),\n                     legend.labs = levels(droplevels(as.factor(unlist(cell_type_meta3_tb_os[, \"group_mean\"])))),\n                     pval=T, risk.table = F, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/fig4b_DNmac_Tumor_boundary_os_mean.pdf\"),\n       plot = psurvx$plot, width = 7, height = 7)\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure4.html#figure4c",
    "href": "figure4.html#figure4c",
    "title": "figure4",
    "section": "figure4c",
    "text": "figure4c\n\nmy_comparisons &lt;- list(c(\"MC-stroma-macro\", \"MC-tumor-frontline\"), c(\"MC-stroma-macro\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\nMacrophage_Dn_total &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% summarise(nt = n()) %&gt;% ungroup()\n\ni = \"PD_L1_pos_Macrophage\"\n\nMacrophage_Dn_pos &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  dplyr::filter(cell_id %in% pos_cells10[[i]]) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% summarise(np = n()) %&gt;% ungroup()\nMacrophage_Dn_pos &lt;- left_join(Macrophage_Dn_total, Macrophage_Dn_pos, by = c(\"sample_id\", \"meta_merge\")) %&gt;%\n  replace_na(list(np = 0)) %&gt;% dplyr::mutate(prop = np/nt) %&gt;%\n  ungroup() %&gt;% dplyr::select(-c(nt, np)) %&gt;%\n  dplyr::filter(meta_merge != \"MC-tumor-core\") %&gt;%\n  group_by(meta_merge) %&gt;% dplyr::mutate(gn = n()) %&gt;% ungroup\n\nMacrophage_Dn_pos$meta_merge &lt;- factor(Macrophage_Dn_pos$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\nyname &lt;- str_replace_all(i, c(\"_pos_\" = \"+ \", \"Macrophage\" = \"Mp\", \"_\" = \"-\"))\n\n\np &lt;- ggplot(Macrophage_Dn_pos, aes(x = meta_merge, y = prop, fill = meta_merge, color = meta_merge)) +\n  introdataviz::geom_flat_violin(aes(color = meta_merge), position = position_nudge(x = .25), bounds = c(0, 0.5)) +\n  geom_jitter(aes(color = meta_merge), width = 0.1, size = 0.25) +\n  geom_boxplot(width = .1, position = position_nudge(x = .25), fill = \"white\", linewidth = 0.25, outlier.shape = NA) +\n  scale_fill_manual(values = meta_merge_cols) +  scale_color_manual(values = meta_merge_cols) +\n  scale_y_continuous(limits=c(0, 0.6), oob = scales::rescale_none) +\n  stat_compare_means(aes(label = \"p.signif\"), hide.ns = F, tip.length = 0.02, bracket.size = 0.1,\n                     comparisons = my_comparisons, method = \"wilcox.test\",\n                     size = 2, label.y = c(0.51,0.52,0.53)) +\n  directlabels::geom_dl(aes(label = gn),\n                        method = list(\"last.points\", cex = .5)) +\n  ylab(glue::glue(\"Proportion of {yname}\")) + theme_bmbdc() +\n  theme(axis.title.y = element_text(size = 8),\n    axis.text.y = element_text(size = 6),\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 8, angle = 20, hjust = 1),\n    legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/fig4c_pdl1_mac_sample_meta3_compare.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure4.html#figure4d",
    "href": "figure4.html#figure4d",
    "title": "figure4",
    "section": "figure4d",
    "text": "figure4d\n\nmy_comparisons &lt;- list(c(\"MC-stroma-macro\", \"MC-tumor-frontline\"), c(\"MC-stroma-macro\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\n# CD8T to DN_Macrophage ----------------------------\ndf_closecell_distance_SM &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-stroma-macro\")\ndf_closecell_distance_TB &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-tumor-frontline\")\ndf_closecell_distance_others &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-others\")\n\ndf_closecell_distance &lt;- rbind(df_closecell_distance_SM, df_closecell_distance_TB, df_closecell_distance_others) %&gt;% as_tibble()\ndf_closecell_distance &lt;- df_closecell_distance %&gt;%\n  left_join(coldat[, c(\"sample_id\", \"cell_id\", \"meta_merge\")] %&gt;%\n              dplyr::rename(from_cell = cell_id), by = c(\"from_cell\", \"meta_merge\")) %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  dplyr::filter(meta_merge != \"MC-tumor-core\")\n\ndf_closecell_distance$meta_merge &lt;- factor(df_closecell_distance$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\") %&gt;% rev())\n\np &lt;- ggdensity(df_closecell_distance, x = \"distance\",\n               add = \"mean\",\n               color = \"meta_merge\",\n               palette = meta_merge_cols) +\n  scale_x_continuous(limits=c(0,200), oob = scales::rescale_none) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/fig4d_CD8T_to_Macrophage_Dn_minDis_meta3_compare_density.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure4.html#figure4f",
    "href": "figure4.html#figure4f",
    "title": "figure4",
    "section": "figure4f",
    "text": "figure4f\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\nmac_colors &lt;- c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\")\n\ndf_dnmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\ndf_othmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\n\ndf_mac &lt;- rbind(df_dnmac, df_othmac) %&gt;% as_tibble()\ndf_mac &lt;- df_mac %&gt;%\n  inner_join(coldat, by = c(\"to_cell\" = \"cell_id\")) %&gt;%\n  dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                 sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                  TRUE ~ \"Upfront surgery\"))\n#sample\ndf_mac_mean &lt;- df_mac %&gt;% group_by(sample_id, cell_type11, chemo) %&gt;%\n  dplyr::summarise(mean_dis = mean(distance)) %&gt;%\n  group_by(sample_id, chemo) %&gt;% dplyr::mutate(nc = n()) %&gt;%\n  ungroup() %&gt;% dplyr::filter(nc &gt; 1)\n\ndf_mac_mean$cell_type11 &lt;- factor(df_mac_mean$cell_type11, levels = c(\"DN-mp\", \"Other-mp\"))\ndf_mac_mean$chemo &lt;- factor(df_mac_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\n\nstat_test &lt;- df_mac_mean %&gt;%\n  group_by(chemo) %&gt;% rstatix::wilcox_test(mean_dis ~ cell_type11, paired = T)\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"chemo\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- 12\n\ndf_mac_mean &lt;- df_mac_mean %&gt;% group_by(cell_type11, chemo) %&gt;% dplyr::mutate(nc = n())\n\np1 &lt;- ggplot(df_mac_mean,\n             aes(x = chemo, y = log2(mean_dis))) +\n  introdataviz::geom_split_violin(aes(x = chemo, y = log2(mean_dis), color = cell_type11),\n                                  trim = FALSE, linewidth = .3) +\n  geom_boxplot(aes(fill = cell_type11), width = .1, show.legend = FALSE,\n               outlier.size = .2, linewidth = .2, color = \"black\") +\n  scale_fill_manual(values = mac_colors, name = \"MC-tumor-frontline\") +\n  scale_colour_manual(values = mac_colors, name = \"MC-tumor-frontline\") +\n  labs(y = \"Log2(Mean distance) of CD8T to Mp\") +\n  directlabels::geom_dl(aes(label = nc),\n                        method = list(\"top.points\", cex = .4)) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm')) +\n  stat_pvalue_manual(stat_test, x = \"chemo\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5)\nggsave(glue::glue(\"{res_dir}/fig4f_CD8T_to_mac_dis_3metas_cacb_persam_paired.pdf\"), p1, width = 3, height = 3)\np1",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure4.html#figure4g",
    "href": "figure4.html#figure4g",
    "title": "figure4",
    "section": "figure4g",
    "text": "figure4g\n\n#distance plot function\ndist_to_DNmac_compare_meta3_func &lt;- function(datadir, k, query_cell, target_cell, my_comparisons, cld, colors){\n  TB_dist &lt;- read_rds(glue::glue(\"{datadir}/distance_rds/TB_list_closecell_dist_k{k}_{query_cell}_to_{target_cell}.rds\")) %&gt;%\n    do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(group = \"MC-tumor-frontline\")\n\n  SM_dist &lt;- read_rds(glue::glue(\"{datadir}/distance_rds/SM_list_closecell_dist_k{k}_{query_cell}_to_{target_cell}.rds\")) %&gt;%\n    do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(group = \"MC-stroma-macro\")\n\n  Other_dist &lt;- read_rds(glue::glue(\"{datadir}/distance_rds/OthersnoBT_list_closecell_dist_k{k}_{query_cell}_to_{target_cell}.rds\")) %&gt;%\n    do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(group = \"MC-others\")\n  \n  df_dist &lt;- rbind(TB_dist, SM_dist, Other_dist) %&gt;%\n    dplyr::filter(to_cell %in% (cld %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;% .$cell_id)) %&gt;%\n    dplyr::select(from_cell, distance, group) %&gt;%\n    dplyr::filter(from_cell %in% (cld %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;% .$cell_id))\n                                                               \n\n  plist &lt;- list()\n  #density\n  plist[[1]] &lt;- ggdensity(df_dist, x = \"distance\",\n                          add = \"mean\",\n                          color = \"group\",\n                          palette = colors) +\n    scale_x_continuous(limits=c(0,200), oob = scales::rescale_none) +\n    theme(axis.title.y = element_blank(),\n          axis.text.y = element_text(size = 6),\n          axis.title.x = element_text(size = 6),\n          axis.text.x = element_text(size = 6),\n          legend.position = \"none\")\n\n  #boxplot\n  df_dist[[\"group\"]] &lt;- factor(df_dist[[\"group\"]], levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\n  stat_test &lt;- df_dist %&gt;% rstatix::wilcox_test(distance ~ group, comparisons = my_comparisons)\n  stat_test$y.position &lt;- c(8.8,9.3,9.8)\n\n  plist[[2]] &lt;- ggplot(df_dist,\n              aes(x = group, y = log2(distance))) +\n    geom_boxplot(aes(fill = group), width = .2, show.legend = FALSE,\n                 outlier.shape = NA, linewidth = .2, color = \"black\") +\n    scale_y_continuous(limits=c(2,10), oob = scales::rescale_none) +\n    labs(y = glue::glue(\"Log2(Distance) of {query_cell} to DN-mp\")) +\n    scale_fill_manual(values = colors) +\n    stat_pvalue_manual(stat_test, tip.length = .03, bracket.size = 0.2, label = \"p.adj.signif\", size = 2) +\n    #directlabels::geom_dl(aes(label = ng), method = list(\"top.points\", cex = .4)) +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"none\")\n\n  # stat_test &lt;- df_dist %&gt;%\n  #   rstatix::wilcox_test(distance ~ group, p.adjust.method = \"BH\")\n  # mean_distance &lt;- df_dist %&gt;% group_by(group) %&gt;%\n  #   dplyr::summarise(mean_dis = mean(distance), median_dis = median(distance))\n  # list(\"mean_distance\" = mean_distance, \"stat_test\" = stat_test) %&gt;% list2excel(glue::glue(\"{query_cell}_DNmac_distance_summary.xlsx\"))\n\n  return(plist)\n}\n\nmy_comparisons &lt;- list(c(\"MC-tumor-frontline\", \"MC-stroma-macro\"), c(\"MC-stroma-macro\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\n#a\nquery_cell &lt;- \"LAG_3_pos_CD8T\"\ntarget_cell &lt;- \"Macrophage_HLADRn_CD163n\"\n\np1 &lt;- dist_to_DNmac_compare_meta3_func(datadir = dat_dir, k = 1, query_cell = query_cell, \n                                       target_cell = target_cell, my_comparisons = my_comparisons, \n                                       cld = coldat, colors = meta_merge_cols)\nggsave(glue::glue(\"{res_dir}/fig4g_LAG3CD8T_to_DN_mac_dist_density.pdf\"), p1[[1]], width = 4, height = 4)\n\n#b\nquery_cell &lt;- \"PD1_pos_CD8T\"\ntarget_cell &lt;- \"Macrophage_HLADRn_CD163n\"\n\np2 &lt;- dist_to_DNmac_compare_meta3_func(datadir = dat_dir, k = 1, query_cell = query_cell, \n                                       target_cell = target_cell, my_comparisons = my_comparisons, \n                                       cld = coldat, colors = meta_merge_cols)\nggsave(glue::glue(\"{res_dir}/fig4g_PD1CD8T_to_DN_mac_dist_density.pdf\"), p2[[1]], width = 4, height = 4)\n\n#c\nquery_cell &lt;- \"Vista_pos_CD8T\"\ntarget_cell &lt;- \"Macrophage_HLADRn_CD163n\"\n\np3 &lt;- dist_to_DNmac_compare_meta3_func(datadir = dat_dir, k = 1, query_cell = query_cell, \n                                       target_cell = target_cell, my_comparisons = my_comparisons, \n                                       cld = coldat, colors = meta_merge_cols)\nggsave(glue::glue(\"{res_dir}/fig4g_VISTACD8T_to_DN_mac_dist_density.pdf\"), p3[[1]], width = 4, height = 4)\n\np &lt;- p1[[1]] | p2[[1]] | p3[[1]]\nggsave(glue::glue(\"{res_dir}/fig4g_posCD8T_to_DN_mac_dist_density.pdf\"), p, width = 12, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>figure4</span>"
    ]
  },
  {
    "objectID": "figure5.html",
    "href": "figure5.html",
    "title": "figure5",
    "section": "",
    "text": "figure5a\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster))\n\ntumor_nochemo &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_all\"]]) %&gt;%\n  dplyr::filter(cell_type_new %in% \"Epithelial tumor cell\") %&gt;%\n  dplyr::mutate(pos = case_when(cell_id %in% pos_cells10[[\"PD_L1_pos_Epithelial_tumor\"]] ~ \"PD-L1+ tumor\",\n                                TRUE ~ \"none\"))\n\npdl1_tumor &lt;- tumor_nochemo %&gt;%\n  dplyr::filter(pos %in% \"PD-L1+ tumor\") %&gt;%\n  dplyr::select(sample_id, sample_tiff_id, meta_merge, pos, cell_id) %&gt;%\n  distinct() %&gt;% group_by(sample_id, sample_tiff_id, meta_merge) %&gt;%\n  dplyr::summarise(nc = n()) %&gt;% group_by(sample_id, sample_tiff_id) %&gt;%\n  dplyr::mutate(nt = sum(nc), prop = nc/nt) %&gt;%\n  dplyr::filter(meta_merge %notin% \"MC-tumor-core\")\n\npdl1_tumor$meta_merge &lt;- factor(pdl1_tumor$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\n\npdl1_tumor_fil &lt;- pdl1_tumor %&gt;% dplyr::mutate(n = n()) %&gt;% dplyr::filter(n &gt; 1) %&gt;% ungroup()\n\nstat_test &lt;- pdl1_tumor_fil %&gt;%\n  rstatix::wilcox_test(prop ~ meta_merge, comparisons = list(c(\"MC-tumor-frontline\", \"MC-stroma-macro\"),\n                                                                  c(\"MC-tumor-frontline\", \"MC-others\")),\n                                                                  p.adjust.method = \"none\")\n\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"meta_merge\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- c(.99, 1)\n\np &lt;- ggplot(pdl1_tumor_fil, aes(x = meta_merge, y = prop)) +\n  PupillometryR::geom_flat_violin(aes(fill = meta_merge, color = meta_merge), position = position_nudge(x = .25)) +\n  geom_jitter(aes(color = meta_merge), width = 0.1, size = 0.25) +\n  geom_boxplot(width = .1, position = position_nudge(x = .25), fill = \"white\", linewidth = 0.25, outlier.shape = NA) +\n  scale_fill_manual(values = meta_merge_cols) +  scale_color_manual(values = meta_merge_cols) +\n  stat_pvalue_manual(stat_test, tip.length = 0, bracket.size = 0.1, hide.ns = F, label = \"p.adj.signif\", size = 1.5) +\n  ylab(glue::glue(\"Ratio of regional PD-L1+ tumor\")) + theme_bmbdc() +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\n\nggsave(glue::glue(\"{res_dir}/fig5b_pdl1_tumor_ratio_sample_meta3_compare.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>figure5</span>"
    ]
  },
  {
    "objectID": "figure5.html#figure5b",
    "href": "figure5.html#figure5b",
    "title": "figure5",
    "section": "figure5b",
    "text": "figure5b\n\ntumor_nochemo &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_all\"]]) %&gt;%\n  dplyr::filter(cell_type_new %in% \"Epithelial tumor cell\")\n\npdl1_tumor &lt;- tumor_nochemo %&gt;%\n  dplyr::filter(meta_merge %notin% \"MC-tumor-core\") %&gt;%\n  dplyr::select(sample_id, sample_tiff_id, meta_merge, cell_id) %&gt;%\n  distinct()\n\npdl1_tumor_intens &lt;- assay_cc[\"PD_L1\", ] %&gt;%\n  as_tibble(rownames = \"cell_id\") %&gt;% left_join(pdl1_tumor, ., by = \"cell_id\")\n\npdl1_tumor_intens_mean &lt;- pdl1_tumor_intens %&gt;% group_by(sample_id, meta_merge) %&gt;%\n  dplyr::summarise(mean_pdl1 = mean(value)) %&gt;% ungroup()\n\ncompr_ls &lt;- list(\"TS\" = c(\"MC-tumor-frontline\", \"MC-stroma-macro\"),\n                 \"TO\" = c(\"MC-tumor-frontline\", \"MC-others\"))\n\nstat_test &lt;- compr_ls %&gt;% map(function(x){pdl1_tumor_intens_mean %&gt;% dplyr::filter(meta_merge %in% x) %&gt;%\n    group_by(sample_id) %&gt;% dplyr::mutate(n = n()) %&gt;% dplyr::filter(n &gt; 1) %&gt;% ungroup() %&gt;%\n    rstatix::wilcox_test(mean_pdl1 ~ meta_merge, paired = T)}) %&gt;% list_rbind()\n\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test$y.position &lt;- c(1.04, 1.02)\n\npdl1_tumor_intens_mean$meta_merge &lt;- factor(pdl1_tumor_intens_mean$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\n\np &lt;- ggplot(pdl1_tumor_intens_mean, aes(x = meta_merge, y = mean_pdl1)) +\n  PupillometryR::geom_flat_violin(aes(fill = meta_merge, color = meta_merge), position = position_nudge(x = .25)) +\n  geom_jitter(aes(color = meta_merge), width = 0.1, size = 0.25) +\n  geom_boxplot(width = .1, position = position_nudge(x = .25), fill = \"white\", linewidth = 0.25, outlier.shape = NA) +\n  scale_fill_manual(values = meta_merge_cols) +  scale_color_manual(values = meta_merge_cols) +\n  #scale_y_continuous(limits=c(0.2, 0.8), oob = scales::rescale_none) +\n  stat_pvalue_manual(stat_test, tip.length = 0, bracket.size = 0.1, label = \"p.adj.signif\", size = 1.5) +\n  ylab(glue::glue(\"mean PD-L1 intentisy of tumor\")) + theme_bmbdc() +\n  theme(axis.title.y = element_text(size = 8),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        axis.text.x = element_text(size = 8, angle = 10),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/fig5f_tumor_meta3_paired_compare_PDL1_mean_intensity_paired.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>figure5</span>"
    ]
  },
  {
    "objectID": "figure5.html#figure5d",
    "href": "figure5.html#figure5d",
    "title": "figure5",
    "section": "figure5d",
    "text": "figure5d\n\nmy_comparisons &lt;- list(c(\"MC-stroma-Mp\", \"MC-tumor-frontline\"), c(\"MC-stroma-Mp\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\n# Tumor to DN_Macrophage ----------------------------\ndf_closecell_distance_SM &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-stroma-macro\")\ndf_closecell_distance_TB &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-tumor-frontline\")\ndf_closecell_distance_othersnoBT &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-others\")\n\ndf_closecell_distance &lt;- rbind(df_closecell_distance_SM, df_closecell_distance_TB, df_closecell_distance_othersnoBT) %&gt;% as_tibble()\ndf_closecell_distance &lt;- df_closecell_distance %&gt;%\n  inner_join(coldat[,c(\"cell_id\", \"sample_id\")], by = c(\"from_cell\" = \"cell_id\")) %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all)\n\ndf_closecell_distance$meta_merge &lt;- factor(df_closecell_distance$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\") %&gt;% rev())\n\np &lt;- ggdensity(df_closecell_distance, x = \"distance\",\n               add = \"mean\",\n               color = \"meta_merge\",\n               palette = meta_merge_cols) +\n  scale_x_continuous(limits=c(0,200), oob = scales::rescale_none) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/fig5d_tumor_to_Macrophage_Dn_minDis_meta3_compare_density.pdf\"), p, width = 3.5, height = 2.9)\np",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>figure5</span>"
    ]
  },
  {
    "objectID": "figure5.html#figure5e",
    "href": "figure5.html#figure5e",
    "title": "figure5",
    "section": "figure5e",
    "text": "figure5e\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\nmac_colors &lt;- c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\")\n\ndf_dnmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\ndf_othmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\n\ndf_mac &lt;- rbind(df_dnmac, df_othmac) %&gt;% as_tibble()\ndf_mac &lt;- df_mac %&gt;%\n  inner_join(coldat, by = c(\"to_cell\" = \"cell_id\")) %&gt;%\n  dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                 sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                  TRUE ~ \"Upfront surgery\"))\n\n#sample\ndf_mac_mean &lt;- df_mac %&gt;% group_by(sample_id, cell_type11, chemo) %&gt;%\n  dplyr::summarise(mean_dis = mean(distance)) %&gt;%\n  group_by(sample_id, chemo) %&gt;% dplyr::mutate(nc = n()) %&gt;%\n  ungroup() %&gt;% dplyr::filter(nc &gt; 1)\n\ndf_mac_mean$cell_type11 &lt;- factor(df_mac_mean$cell_type11, levels = c(\"DN-mp\", \"Other-mp\"))\ndf_mac_mean$chemo &lt;- factor(df_mac_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\nstat_test &lt;- df_mac_mean %&gt;%\n  group_by(chemo) %&gt;% rstatix::wilcox_test(mean_dis ~ cell_type11, paired = T)\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"chemo\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- 12\n\ndf_mac_mean &lt;- df_mac_mean %&gt;% group_by(cell_type11, chemo) %&gt;% dplyr::mutate(nc = n())\n\np &lt;- ggplot(df_mac_mean,\n             aes(x = chemo, y = log2(mean_dis))) +\n  introdataviz::geom_split_violin(aes(x = chemo, y = log2(mean_dis), colour = cell_type11),\n                                  trim = FALSE, linewidth = .3) +\n  geom_boxplot(aes(fill = cell_type11), width = .1, show.legend = FALSE,\n               outlier.size = .2, linewidth = .2, color = \"black\") +\n  # stat_summary(fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n  #              position = position_dodge(.12), size = .025, color = \"black\") +\n  scale_fill_manual(values = mac_colors, name = \"MC-tumor-frontline\") +\n  scale_colour_manual(values = mac_colors, name = \"MC-tumor-frontline\") +\n  directlabels::geom_dl(aes(label = nc),\n                        method = list(\"top.points\", cex = .4)) +\n  labs(y = \"Log2(mean distance) of tumor to Mp\") +\n  stat_pvalue_manual(stat_test, x = \"chemo\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 8),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 8),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 8, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/fig5e_tb_tumor_to_mac_dis_3metas_cacb_persam_paired.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>figure5</span>"
    ]
  },
  {
    "objectID": "figure5.html#figure5f",
    "href": "figure5.html#figure5f",
    "title": "figure5",
    "section": "figure5f",
    "text": "figure5f\n\nids &lt;- pos_cells10[[\"PD_L1_pos_Epithelial_tumor\"]]\ncld_nochemo &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_all\"]])\n\npl &lt;- list()\nfor (mr in c(\"TB_\",\"SM_\", \"OthersnoBT_\")) {\n  dis_ls &lt;- list()\n  for (j in c(\"Macrophage_HLADRn_CD163n\", \"Macrophage_other\")) {\n    list_closecell_distance &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/{mr}list_closecell_dist_k1_{j}_to_Epithelial_tumor.rds\"))\n    df_closecell_distance &lt;- do.call(\"rbind\", list_closecell_distance) %&gt;% as_tibble()\n\n    df_tumor_distance &lt;- inner_join(df_closecell_distance, cld_nochemo, by = c(\"to_cell\" = \"cell_id\")) %&gt;%\n      dplyr::select(from_cell, to_cell, distance, sample_id, sample_tiff_id) %&gt;%\n      dplyr::mutate(group = case_when(distance &lt; median(distance) ~ \"near\",\n                                      TRUE ~ \"far\"),\n                    pos = case_when(to_cell %in% ids ~ \"PD-L1+ tumor\",\n                                    TRUE ~ \"tumor\"))\n    dis_group &lt;- df_tumor_distance %&gt;% group_by(to_cell) %&gt;%\n      dplyr::summarise(group_all = paste(group, collapse = \";\")) %&gt;%\n      dplyr::mutate(group_new = case_when(str_detect(group_all, \"near\") ~ \"near\",\n                                          TRUE ~ \"far\")) %&gt;%\n      dplyr::select(-group_all) %&gt;% left_join(distinct(df_tumor_distance[, c(2,4,5,7)]), by = \"to_cell\")\n\n    dis_group_prop &lt;- dis_group %&gt;%\n      group_by(sample_id, sample_tiff_id, group_new, pos) %&gt;%\n      dplyr::summarise(nc = n()) %&gt;%\n      group_by(sample_id, sample_tiff_id, group_new) %&gt;%\n      dplyr::mutate(nt = sum(nc),\n                    prop = nc/nt)\n\n    dis_group_prop$pos &lt;- as.factor(dis_group_prop$pos)\n    dis_group_prop &lt;- dis_group_prop %&gt;%\n      tidyr::complete(pos, fill = list(prop = 0)) %&gt;% ungroup()\n    dis_group_prop$group_new &lt;- factor(dis_group_prop$group_new, levels = c(\"near\", \"far\"))\n\n    #paired\n    dis_ls[[j]] &lt;- dis_group_prop[dis_group_prop$pos == \"PD-L1+ tumor\",] %&gt;%\n      group_by(sample_id, sample_tiff_id) %&gt;% dplyr::mutate(n = n(), mac = j) %&gt;%\n      dplyr::filter(n &gt; 1) %&gt;% ungroup()\n  }\n\n  dis_group_prop_paired &lt;- list_rbind(dis_ls) %&gt;%\n    dplyr::mutate(mac = case_match(mac, \"Macrophage_HLADRn_CD163n\" ~ \"DN-mp\",\n                                   \"Macrophage_other\" ~ \"Other-mp\"))\n  dis_group_prop_paired$group_new &lt;- factor(dis_group_prop_paired$group_new, levels = c(\"near\", \"far\"))\n  dis_group_prop_paired$mac &lt;- factor(dis_group_prop_paired$mac, levels = c(\"DN-mp\", \"Other-mp\"))\n\n  stat_test &lt;- dis_group_prop_paired %&gt;%\n    group_by(mac) %&gt;% rstatix::wilcox_test(prop ~ group_new, p.adjust.method = \"none\", paired = T)\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                             p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                             p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                             p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                             p &lt; 0.0001 ~ \"****\",\n                                                             TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    rstatix::add_xy_position(x = \"mac\", dodge = 0.9, fun = \"median_iqr\")\n  stat_test$y.position &lt;- 0.4\n\n\n  dis_group_prop_paired &lt;- dis_group_prop_paired %&gt;% group_by(group_new, mac) %&gt;% dplyr::mutate(nc = n()) %&gt;% ungroup()\n\n  col_d &lt;- c(\"near\" = \"#BC3C29FF\", \"far\" = \"#0072B5FF\")\n\n  pl[[mr]] &lt;- ggplot(dis_group_prop_paired,\n              aes(x = mac, y = prop)) +\n    geom_boxplot(aes(fill = group_new), width = .5, show.legend = FALSE,\n                 outlier.shape = NA, linewidth = .2, color = \"black\") +\n    stat_summary(aes(fill = group_new, color = group_new), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n                 position = position_dodge(.5), fatten = .5, size = .5, stroke = .5, linewidth = .5, color = \"black\") +\n    scale_colour_manual(values = col_d) +\n    scale_fill_manual(values = col_d) +\n    labs(y = \"Proportion of PD-L1+ tumors\") +\n    scale_y_continuous(limits=c(0,0.4), oob = scales::rescale_none) +\n    stat_pvalue_manual(stat_test, x = \"mac\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5) +\n    directlabels::geom_dl(aes(label = nc),\n                          method = list(\"smart.grid\", cex = .4)) +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\"),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"top\",\n          legend.text = element_text(size = 4),\n          legend.title = element_text(size = 4),\n          legend.key.size = unit(0.1, 'cm'))\n\n  ggsave(glue::glue(\"{res_dir}/fig5f_{mr}mac_nearest_PDL1_tumor_prop_compare_newgroup_paired.pdf\"), pl[[mr]], width = 3, height = 3)\n}\n\np &lt;- pl[[\"TB_\"]] | pl[[\"SM_\"]] | pl[[\"OthersnoBT_\"]]\nggsave(glue::glue(\"{res_dir}/fig5f_mac_nearest_PDL1_tumor_prop_compare_newgroup_paired.pdf\"), p, width = 12, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>figure5</span>"
    ]
  },
  {
    "objectID": "figure6.html",
    "href": "figure6.html",
    "title": "figure6",
    "section": "",
    "text": "figure6a\np &lt;- DimPlot(sce_mac, reduction = \"tsne\", group.by = \"cell_types2\", pt.size = .001,\n             label = F, cols = c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\"), combine = F)\np &lt;- p[[1]] +\n  guides(color = guide_legend(keywidth = unit(0, \"cm\"),\n                              keyheight = unit(0, \"cm\")),\n         nrow = 2, byrow = T) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        plot.margin = margin(0,0,0,0),\n        legend.position = c(.05,.9),\n        legend.text = element_text(size = 6))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6b",
    "href": "figure6.html#figure6b",
    "title": "figure6",
    "section": "figure6b",
    "text": "figure6b\n\np1 &lt;- FeaturePlot(sce_mac, reduction = \"tsne\", features = \"CD163\",\n                 order = T, pt.size = .001, combine = F)\np1 &lt;- p1[[1]] +\n  guides(color = guide_colourbar(barwidth = unit(.1, \"cm\"),\n                                 barheight = unit(.6, \"cm\"),\n                                 title = \"CD163\",\n                                 title.position = \"top\")) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        panel.border = element_rect(fill = NA, colour = NA),\n        plot.background = element_rect(fill = NA, colour = NA),\n        plot.margin = margin(0,0,0,0),\n        legend.position = c(0,.8),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size = 6),\n        legend.text = element_text(size = 6))\n\np2 &lt;- FeaturePlot(sce_mac, reduction = \"tsne\", features = \"HLA-DRB5\",\n                 order = T, pt.size = .001, combine = F)\np2 &lt;- p2[[1]] +\n  guides(color = guide_colourbar(barwidth = unit(.1, \"cm\"),\n                                 barheight = unit(.6, \"cm\"),\n                                 title = \"HLA-DRB5\",\n                                 title.position = \"top\")) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        panel.border = element_rect(fill = NA, colour = NA),\n        plot.background = element_rect(fill = NA, colour = NA),\n        plot.margin = margin(0,0,0,0),\n        legend.position = c(0,.8),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size = 6),\n        legend.text = element_text(size = 6))\n\np &lt;- p1|p2\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6c",
    "href": "figure6.html#figure6c",
    "title": "figure6",
    "section": "figure6c",
    "text": "figure6c\n\np &lt;- DotPlot(sce_mac, features = c('PTPRC', 'CD68', 'HLA-DRA', 'HLA-DRB1', 'HLA-DRB5', 'CD163'), scale = F,\n             dot.scale = 4.5) + RotatedAxis() + theme_bmbdc() +\n  scale_colour_gradientn(colours = c(\"grey\", \"#ffe5e5\", \"#ff7f7f\", \"#ff6666\", \"#ff0000\"),\n                         guide = guide_legend(keywidth = unit(100, \"mm\")),\n                         values = scales::rescale(x = c(0, 1, 2, 3, 4), from = c(0, 4))) +\n  guides(size = guide_legend(title = \"Percent Expressed\", keywidth = unit(1, \"cm\"),\n                             keyheight = unit(.2, \"cm\"), nrow = 2, byrow = T)) +\n  guides(color = guide_colorbar(title = \"Expression\", barwidth = unit(1, \"cm\"), barheight = unit(.2, \"cm\"))) +\n  theme(axis.text = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        legend.key.size = unit(.2, 'cm'),\n        axis.text.x = element_text(angle = 30),\n        axis.text.y = element_text(angle = 50),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size=6),\n        legend.text = element_text(size=6),\n        legend.position = \"top\")\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6d",
    "href": "figure6.html#figure6d",
    "title": "figure6",
    "section": "figure6d",
    "text": "figure6d\n\nde_df &lt;- read_csv(glue::glue(\"{dat_dir}/pdac_DNvsOth_de_markers.csv\")) %&gt;% dplyr::filter(pct.1 &gt; 0.1)\n\nkeyvals &lt;- ifelse(\n  de_df$avg_log2FC &lt; -0.5 & de_df$p_val_adj &lt; 10e-10, \"#0072B5FF\",\n  ifelse(de_df$avg_log2FC &gt; 0.5 & de_df$p_val_adj &lt; 10e-10, \"#BC3C29FF\",\n         \"#c7c1c1\"))\n\nkeyvals[is.na(keyvals)] &lt;- \"#c7c1c1\"\nnames(keyvals)[keyvals == \"#0072B5FF\"] &lt;- \"Other-mp\"\nnames(keyvals)[keyvals == \"#c7c1c1\"] &lt;- \"NS\"\nnames(keyvals)[keyvals == \"#BC3C29FF\"] &lt;- \"DN-mp\"\n\np &lt;- EnhancedVolcano(de_df,\n                     lab = de_df$gene,\n                     x = 'avg_log2FC',\n                     y = 'p_val_adj',\n                     pCutoff = 10e-10,\n                     FCcutoff = 0.5,\n                     pointSize = 1.5,\n                     labSize = 1.5,\n                     caption = \"\",\n                     legendLabSize = 2.5,\n                     legendIconSize = 1.5,\n                     colAlpha = 0.8,\n                     colCustom = keyvals) +\n  theme_bmbdc() +\n  theme(plot.title = element_blank(),\n        plot.subtitle = element_blank(),\n        text = element_text(size = 6),\n        axis.text = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.title.y = element_text(size = 6, vjust = -10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.key.size = unit(.2, 'cm'),\n        legend.title = element_blank(),\n        legend.text = element_text(size=4),\n        legend.position = c(.75,.9)) +\n  guides(colour = guide_legend(ncol = 1))\nggsave(glue::glue(\"{res_dir}/fig6d_DNmac_pdac_deg_volcano.pdf\"), p, width = 3, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6e",
    "href": "figure6.html#figure6e",
    "title": "figure6",
    "section": "figure6e",
    "text": "figure6e\n\ngsea_df &lt;- read_csv(glue::glue(\"{dat_dir}/goall_gsea_avg_mac.csv\"))\n\np &lt;- ggplot(data = gsea_df, aes(y = NES, x = gs_exact_source)) +\n  geom_col(fill = \"#BC3C29FF\") +\n  geom_text(aes(label = Description,\n                y = 0.1), size = 2, vjust = 0.5, hjust = 0) +\n  theme_bmbdc() +\n  theme(plot.title = element_blank(),\n        plot.subtitle = element_blank(),\n        text = element_text(size = 6),\n        axis.text = element_text(size = 6),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(size = 6),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.key.size = unit(.2, 'cm'),\n        legend.title = element_blank(),\n        legend.text = element_text(size=4),\n        legend.position = \"top\") +\n  coord_flip()\nggsave(glue::glue(\"{res_dir}/fig6e_DNmac_go_enrich.pdf\"), p, height = 3, width = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6f",
    "href": "figure6.html#figure6f",
    "title": "figure6",
    "section": "figure6f",
    "text": "figure6f\n\np &lt;- FeaturePlot(sce_mac, reduction = \"tsne\", features = \"S100A9\",\n                 order = T, pt.size = .001, combine = F)\np &lt;- p[[1]] +\n  guides(color = guide_colourbar(barwidth = unit(.1, \"cm\"),\n                                 barheight = unit(.6, \"cm\"),\n                                 title = \"S100A9\",\n                                 title.position = \"top\")) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        panel.border = element_rect(fill = NA, colour = NA),\n        plot.background = element_rect(fill = NA, colour = NA),\n        plot.margin = margin(0,0,0,0),\n        legend.position = c(0,.8),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size = 6),\n        legend.text = element_text(size = 6))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6g",
    "href": "figure6.html#figure6g",
    "title": "figure6",
    "section": "figure6g",
    "text": "figure6g\n\n#function\nplot_deconv_pie &lt;- function(rctd, deconv,\n                            title = NULL,\n                            my_pal = NULL,\n                            size=0.35) {\n\n  my_table = rctd@spatialRNA@coords %&gt;% as_tibble(rownames = \"barcodes\") %&gt;%\n    dplyr::mutate(y1= y,\n                  y = max(x) - x,\n                  x = y1) %&gt;% dplyr::select(-y1)\n  plot_val &lt;- deconv %&gt;% as_tibble(rownames = \"barcodes\")\n  my_table &lt;- left_join(my_table, plot_val, by = \"barcodes\")\n\n  plot &lt;- ggplot2::ggplot() +\n    scatterpie::geom_scatterpie(ggplot2::aes(x = x, y = y), data = my_table, pie_scale = size, col = NA,\n                                cols = colnames(deconv)) +\n    coord_equal() + scale_fill_manual(values = my_pal) +\n    ggplot2::theme_classic() #+ coord_flip()\n  if(!is.null(title))\n    plot &lt;- plot + ggplot2::ggtitle(title)\n  return(plot)\n}\n\n\n# images\np1 &lt;- SpatialPlot(spatial_ls[[\"HTA12_25_5\"]], alpha = c(0,0), combine = F)\np1 &lt;- p1[[1]] +\n  coord_fixed() + theme_bmbdc() + theme(title = element_text(size = 6),\n                                        axis.text = element_text(size = 6, colour = \"black\"),\n                                        axis.title = element_blank(),\n                                        axis.ticks = element_line(colour = \"black\"),\n                                        plot.margin = margin(0.2,0.2,0.2,0.2),\n                                        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/fig6g_image.pdf\"), p1, width = 3.5, height = 3)\n\n# deconv plot\nrctd_ss &lt;- read_rds(glue::glue(\"{dat_dir}/HTA12_25_5_RCTD.rds\"))\ndf_decov_norm &lt;- read_rds(glue::glue(\"{dat_dir}/df_decov_norm_HTA12_25_5.rds\"))\n\np2 &lt;- plot_deconv_pie(rctd = rctd_ss,\n                  my_pal = rctd_cols,\n                  deconv = df_decov_norm,\n                  title = \"HTA12_25_5\") +\n    theme(title = element_text(size = 6),\n          axis.text = element_text(size = 6, colour = \"black\"),\n          axis.title = element_blank(),\n          axis.ticks = element_line(colour = \"black\"),\n          plot.margin = margin(0.2,0.2,0.2,0.2),\n          legend.margin = margin(0.1,0.1,0.1,0.1),\n          legend.text=element_text(size = 4),\n          legend.key.size = unit(.1, \"cm\"))\n  \n# pdf(glue::glue(\"{res_dir}/fig6g_spatial_deconv_pie.pdf\"), width = 4, height = 3)\n#   print(p2)\n# dev.off()\n  \np1|p2",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6h",
    "href": "figure6.html#figure6h",
    "title": "figure6",
    "section": "figure6h",
    "text": "figure6h\n\nseu_sub &lt;- read_rds(glue::glue(\"{dat_dir}/spatial_maconly_seu_obj.rds\"))\n\np &lt;- DotPlot(seu_sub, features = c('CD68', 'HLA-DRA', 'HLA-DRB1', 'HLA-DRB5', 'CD163'), scale = F,\n             dot.scale = 4.5, group.by = \"DN_any\") +\n  RotatedAxis() +\n  scale_colour_gradientn(colours = c(\"grey\", \"#ffe5e5\", \"#ff7f7f\", \"#ff6666\", \"#ff0000\"),\n                         values = scales::rescale(x = c(0, 0.5, 1, 1.5, 2), from = c(0, 2))) +\n  guides(size = guide_legend(title = \"Percent Expressed\", keywidth = unit(.2, \"cm\"),\n                             keyheight = unit(.2, \"cm\"), nrow = 2, byrow = T)) +\n  guides(color = guide_colorbar(title = \"Expression\", barwidth = unit(1, \"cm\"), barheight = unit(.2, \"cm\"))) +\n  theme(plot.title = element_text(size = 6, face = \"plain\"),\n        axis.text = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        legend.key.size = unit(.2, 'cm'),\n        axis.text.x = element_text(angle = 30),\n        axis.text.y = element_text(angle = 50),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size=4),\n        legend.text = element_text(size=4),\n        legend.position = \"top\")\np\n\n\n\n\n\n\n\n# pdf(file = glue::glue(\"{res_dir}/fig6h_seu_maconly_DNmacANY_markers_exp_noscale.pdf\"),width = 4, height = 2)\n# print(p)\n# dev.off()",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure6.html#figure6i",
    "href": "figure6.html#figure6i",
    "title": "figure6",
    "section": "figure6i",
    "text": "figure6i\n\nde_markers &lt;- read_csv(glue::glue(\"{dat_dir}/DN_any_sub_macDEGs.csv\"))\n\nkeyvals &lt;- ifelse(\n  de_markers$avg_log2FC &lt; -1 & de_markers$p_val_adj &lt; 10e-10, \"#0072B5FF\",\n  ifelse(de_markers$avg_log2FC &gt; 1 & de_markers$p_val_adj &lt; 10e-10, \"#BC3C29FF\",\n         \"#c7c1c1\"))\n\nkeyvals[is.na(keyvals)] &lt;- \"#c7c1c1\"\nnames(keyvals)[keyvals == \"#0072B5FF\"] &lt;- \"Highly expressed in other-mac & tumor enriched spots\"\nnames(keyvals)[keyvals == \"#c7c1c1\"] &lt;- \"Not significant\"\nnames(keyvals)[keyvals == \"#BC3C29FF\"] &lt;- \"Highly expressed in DN-mac & tumor enriched spots\"\n\np &lt;- EnhancedVolcano(de_markers,\n                     lab = de_markers$gene,\n                     x = 'avg_log2FC',\n                     y = 'p_val_adj',\n                     pCutoff = 10e-10,\n                     FCcutoff = 1,\n                     pointSize = 1.5,\n                     labSize = 1.5,\n                     caption = \"\",\n                     legendLabSize = 2.5,\n                     legendIconSize = 1.5,\n                     #legendPosition = \"top\",\n                     colAlpha = 0.8,\n                     colCustom = keyvals) +\n  theme_bmbdc() +\n  theme(plot.title = element_blank(),\n        plot.subtitle = element_blank(),\n        text = element_text(size = 6),\n        axis.text = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.title.y = element_text(size = 6),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.key.size = unit(.2, 'cm'),\n        legend.title = element_blank(),\n        legend.text = element_text(size=6),\n        legend.position = \"top\") +\n  guides(colour = guide_legend(nrow = 3))\nggsave(glue::glue(\"{res_dir}/fig6i_DNmac_visium_deg_volcano.pdf\"), p, width = 3, height = 4)\np",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>figure6</span>"
    ]
  },
  {
    "objectID": "figure7.html",
    "href": "figure7.html",
    "title": "figure7",
    "section": "",
    "text": "figure7d\n#hyperion size\nhyperion_comsize_su &lt;- coldat %&gt;% dplyr::filter(stype2 %in% c(\"tumor\", \"after_chemo\")) %&gt;%\n  na.omit() %&gt;% group_by(community_name) %&gt;%\n  summarise(n = n())\n\n#polaris size\ndt_cl &lt;- readr::read_csv(glue::glue(\"{dat_dir}/cell_community_neighbors32res12.csv\"))\n#plot of community size compare\ncomsize_su_com &lt;- rbind(dt_cl %&gt;% drop_na(community) %&gt;% dplyr::select(community_id, n) %&gt;% \n                          distinct() %&gt;% dplyr::mutate(group = \"polaris\"),\n                        hyperion_comsize_su %&gt;% dplyr::rename(community_id = community_name) %&gt;% \n                          dplyr::mutate(group = \"hyperion\"))\n\np1 &lt;- ggdensity(comsize_su_com, x = \"n\", xlab = \"community size\",\n                add = \"mean\", rug = F,\n                color = \"group\", fill = \"group\",\n                palette = ggsci::pal_nejm(\"default\")(2)) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position = c(.7, .7),\n        legend.text = element_text(size = 6),\n        legend.title = element_blank(),\n        legend.key.size = unit(0.2, 'cm'))\nggsave(glue::glue(\"{res_dir}/fig7d_hyperion_polaris231031_community_size_compare_neighbors32res12.pdf\"), p1, height = 3, width = 3)\np1",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>figure7</span>"
    ]
  },
  {
    "objectID": "figure7.html#figure7e",
    "href": "figure7.html#figure7e",
    "title": "figure7",
    "section": "figure7e",
    "text": "figure7e\n\nmac_markers &lt;- ph_df_markers_norm %&gt;% dplyr::filter(phenotype %in% c(\"DN_macrophage\", \"Other_macrophage\"))\n\nmac_mean &lt;- mac_markers %&gt;% group_by(roi_id, phenotype) %&gt;%\n  dplyr::summarise(across(Pan_CK:CD163, ~ mean(.x))) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(phenotype = case_match(phenotype,\n                                       \"DN_macrophage\" ~ \"DN-Mp\",\n                                       \"Other_macrophage\" ~ \"Other-Mp\"))\nmac_mean_df &lt;- mac_mean %&gt;% pivot_longer(cols = Pan_CK:CD163, names_to = \"markers\", values_to = \"intensity\")\n\nmac_mean_df$phenotype &lt;- factor(mac_mean_df$phenotype, levels = c(\"DN-Mp\", \"Other-Mp\"))\nmac_mean_df$markers &lt;- factor(mac_mean_df$markers, levels = c(\"Pan_CK\", \"a_SMA\", \"CD68\", \"HLA_DR\", \"CD163\", \"S100A9\"))\n\nstat_test &lt;- mac_mean_df %&gt;%\n  group_by(markers) %&gt;% rstatix::wilcox_test(intensity ~ phenotype, paired = F)\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"markers\", dodge = 0.9, fun = \"median_iqr\")\n\nstat_test$y.position &lt;- 1\n\np &lt;- ggplot(mac_mean_df,\n            aes(x = markers, y = intensity)) +\n  geom_boxplot(aes(fill = phenotype), width = .5, show.legend = FALSE,\n               outlier.shape = NA, linewidth = .2, color = \"black\") +\n  stat_summary(aes(fill = phenotype, color = phenotype), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n               position = position_dodge(.5), fatten = .2, size = .2, stroke = .5, linewidth = .2, color = \"black\") +\n  scale_fill_manual(values = c(\"DN-Mp\" = \"#BC3C29FF\", \"Other-Mp\" = \"#0072B5FF\")) +\n  scale_colour_manual(values = c(\"DN-Mp\" = \"#BC3C29FF\", \"Other-Mp\" = \"#0072B5FF\")) +\n  labs(y = glue::glue(\"Mean intensity\")) + ylim(0,1) +\n  stat_pvalue_manual(stat_test, x = \"markers\", tip.length = 0.01, hide.ns = T, label = \"p.adj.signif\", size = 2) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/fig7e_polaris_mac_marker_intensity_boxplot.pdf\"), p, height = 3, width = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>figure7</span>"
    ]
  },
  {
    "objectID": "figure7.html#figure7f",
    "href": "figure7.html#figure7f",
    "title": "figure7",
    "section": "figure7f",
    "text": "figure7f\n\nmac_markers &lt;- ph_df_markers_norm %&gt;% dplyr::filter(phenotype %in% c(\"DN_macrophage\", \"Other_macrophage\"))\n\nmac_mean &lt;- mac_markers %&gt;% group_by(roi_id, phenotype) %&gt;%\n  dplyr::summarise(S100A9 = mean(S100A9)) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(phenotype = case_match(phenotype,\n                                       \"DN_macrophage\" ~ \"DN-Mp\",\n                                       \"Other_macrophage\" ~ \"Other-Mp\"))\nmac_mean_df &lt;- mac_mean %&gt;% group_by(roi_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;% dplyr::filter(n &gt; 1) %&gt;% ungroup()\nmac_mean_df$phenotype &lt;- factor(mac_mean_df$phenotype, levels = c(\"DN-Mp\", \"Other-Mp\"))\n\np &lt;- ggplot(mac_mean_df, aes(phenotype, S100A9)) +\n  geom_violin(aes(color = phenotype), trim = F,\n              linewidth = .3) +#, bounds = c(0,0.3)) +\n  geom_boxplot(aes(fill = phenotype), width = .1, show.legend = FALSE,\n               outlier.shape = NA, linewidth = .2, color = \"black\") +\n  stat_summary(fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n               position = position_dodge(.12), size = .025, color = \"black\") +\n  scale_fill_manual(values = c(\"DN-Mp\" = \"#BC3C29FF\", \"Other-Mp\" = \"#0072B5FF\")) +\n  scale_color_manual(values = c(\"DN-Mp\" = \"#BC3C29FF\", \"Other-Mp\" = \"#0072B5FF\")) + #ylim(0, 0.35) +\n  ylab(glue::glue(\"Mean intensity of S100A9\")) +\n  stat_compare_means(aes(label = after_stat(p.signif)),\n                     method = \"wilcox.test\", label.x.npc = \"center\",\n                     size = 1.5, label.y = 0.9,\n                     tip.length = 0, bracket.size = 0.1) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"none\")\nggsave(glue::glue(\"{res_dir}/fig7f_polaris_mac_S100A9_intensity_boxplot.pdf\"), p, height = 3, width = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>figure7</span>"
    ]
  },
  {
    "objectID": "figure7.html#figure7g",
    "href": "figure7.html#figure7g",
    "title": "figure7",
    "section": "figure7g",
    "text": "figure7g\n\ns100a9_mac_group &lt;- readr::read_csv(glue::glue(\"{dat_dir}/polaris_s100a9_mac_meta.csv\"))\nos_df &lt;- readr::read_csv(glue::glue(\"{dat_dir}/polaris_os_info.csv\"))\n\n#TB\nmac_prop &lt;- s100a9_mac_group %&gt;% group_by(sample_name, core_id, s100a9_group, meta_cl) %&gt;%\n  dplyr::summarise(nc = n()) %&gt;% group_by(sample_name, core_id, meta_cl) %&gt;%\n  dplyr::mutate(nt = sum(nc), prop = nc/nt, s100a9_group = as.factor(s100a9_group)) %&gt;%\n  tidyr::complete(s100a9_group, fill = list(prop = 0)) %&gt;% ungroup()\n\ns100a9_mac_prop &lt;- mac_prop %&gt;% dplyr::filter(s100a9_group %in% \"S100A9+ DN-Mp\" & meta_cl %in% \"TB\") %&gt;%\n  left_join(os_df, by = c(\"sample_name\", \"core_id\" = \"core\"))\n\ns100a9_mac_os &lt;- s100a9_mac_prop %&gt;% dplyr::filter(neo_chemo == 0) %&gt;%\n  dplyr::mutate(group_43 = case_when(prop &gt;= quantile(prop, probs = 0.75) ~ \"High S100A9+ DN-Mp (n = 28)\",\n                                     prop &lt; quantile(prop, probs = 0.75) ~ \"Low S100A9+ DN-Mp (n = 85)\"))\n\ngrid.draw.ggsurvplot &lt;- function(x){\n  survminer:::print.ggsurvplot(x, newpage = FALSE)\n}\n\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_43, data = s100a9_mac_os),\n                     palette = c(\"High S100A9+ DN-Mp (n = 28)\" = \"#BC3C29FF\", \"Low S100A9+ DN-Mp (n = 85)\" = \"#0072B5FF\"),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75),\n                     legend.labs = levels(droplevels(as.factor(unlist(s100a9_mac_os[, \"group_43\"])))))\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"MC-tumor-frontline\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\n\nggsave(glue::glue(\"{res_dir}/fig7g_polaris_S100A9_DNmac_propDNmac_os_nochemo_g43_TB.pdf\"),\n       plot = psurvx, width = 3, height = 3)\n\n\n#Total\nmac_prop &lt;- s100a9_mac_group %&gt;% group_by(sample_name, core_id, s100a9_group) %&gt;%\n  dplyr::summarise(nc = n()) %&gt;% group_by(sample_name, core_id) %&gt;%\n  dplyr::mutate(nt = sum(nc), prop = nc/nt, s100a9_group = as.factor(s100a9_group)) %&gt;%\n  tidyr::complete(s100a9_group, fill = list(prop = 0)) %&gt;% ungroup()\n\ns100a9_mac_prop &lt;- mac_prop %&gt;% dplyr::filter(s100a9_group %in% \"S100A9+ DN-Mp\") %&gt;%\n  left_join(os_df, by = c(\"sample_name\", \"core_id\" = \"core\"))\n\ns100a9_mac_os &lt;- s100a9_mac_prop %&gt;% dplyr::filter(neo_chemo == 0) %&gt;%\n  dplyr::mutate(group_43 = case_when(prop &gt;= quantile(prop, probs = 0.75) ~ \"High S100A9+ DN-Mp (n = 32)\",\n                                     prop &lt; quantile(prop, probs = 0.75) ~ \"Low S100A9+ DN-Mp (n = 91)\"))\n\npsurvy &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_43, data = s100a9_mac_os),\n                     palette = c(\"High S100A9+ DN-Mp (n = 32)\" = \"#BC3C29FF\", \"Low S100A9+ DN-Mp (n = 91)\" = \"#0072B5FF\"),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75),\n                     legend.labs = levels(droplevels(as.factor(unlist(s100a9_mac_os[, \"group_43\"])))))\npsurvy$plot &lt;- psurvy$plot +\n  guides(color=guide_legend(title=\"Total ROI\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/fig7g_polaris_S100A9_DNmac_propDNmac_os_nochemo_g43_Total.pdf\"),\n       plot = psurvy, width = 3, height = 3)\n\npsurvx$plot | psurvy$plot",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>figure7</span>"
    ]
  },
  {
    "objectID": "sup_figure7.html",
    "href": "sup_figure7.html",
    "title": "sup_figure7",
    "section": "",
    "text": "sup_figure7a\nkeycols_list &lt;- c(list(\"nerve_invasion\"), list(\"vascular_invasion\"),\n                  list(\"lymph_metastasis_status\"), list(\"size_alteration\"),\n                  list(\"size_alteration\"), list(\"pfs_group\"))\ncompare_groups &lt;-c(\"nerve_invasion\", \"vascular_invasion\", \"lymph_metastasis\",\n                   \"chemo_outcome_before\", \"chemo_outcome_after\", \"pfs_analysis\")\nnames(keycols_list) &lt;- compare_groups\n\nmeta_cluster_names &lt;- rev(c(\"MC-macro-c2\", \"MC-macro-c1\", \"MC-immune-myeloid\",\n                            \"MC-immune-enriched\", \"MC-stroma-CAF\", \"MC-stroma-macro\",\n                            \"MC-stroma-mCAF\", \"MC-tumor-frontline\", \"MC-tumor-core\"))\n\ntotal_group &lt;- coldat %&gt;%\n  dplyr::select(c(sample_id, sample_tiff_id, patient_id, cell_id, stype2, \n                  cluster_names, meta_cluster)) %&gt;%\n  na.omit() %&gt;% dplyr::filter(meta_cluster %in% meta_cluster_names)\n\nfactor_list &lt;- list(\"nerve_invasion\" = c(\"1\", \"0\"),\n                    \"vascular_invasion\" = c(\"1\", \"0\"),\n                    \"lymph_metastasis\" = c(\"1\", \"0\"),\n                    \"chemo_outcome_before\" = c(\"increase\", \"decrease\"),\n                    \"chemo_outcome_after\" = c(\"increase\", \"decrease\"),\n                    \"pfs_analysis\" = c(\"short\",\"long\"))\n\nplist &lt;- list()\nfor(compare_group in compare_groups){\n  #cli::cli_h1(compare_group)\n  groups &lt;- metadata[[compare_group]]\n  gp_key &lt;- keycols_list[[compare_group]]\n  cli::cli_alert_info(gp_key)\n  groups &lt;- groups %&gt;% drop_na(all_of(gp_key))\n\n  dt_groups &lt;- total_group %&gt;% dplyr::filter(patient_id %in% groups$patient_id)\n  if (compare_group == \"chemo_outcome_before\") {\n    dt_groups &lt;- dt_groups %&gt;% dplyr::filter(stype2 %in% c(\"before_chemo\",\"puncture_pdac\"))\n  } else if (compare_group %notin% c(\"paired_after_neoadj\", \"mpc_primary_metastasis\", \"tumor_para\")) {\n    dt_groups &lt;- dt_groups %&gt;% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n\n  dat_plot &lt;- dt_groups %&gt;%\n    group_by(meta_cluster, sample_tiff_id) %&gt;%\n    summarise(nc = n()) %&gt;%\n    group_by(sample_tiff_id) %&gt;%\n    dplyr::mutate(nt = sum(nc)) %&gt;%\n    dplyr::mutate(pro = nc/nt) %&gt;% ungroup()\n  dat_plot$meta_cluster &lt;- factor(dat_plot$meta_cluster, levels = meta_cluster_names)\n  \n  metainfo &lt;- coldat[, c(\"sample_tiff_id\", \"patient_id\")] %&gt;% distinct()\n  dat_plot &lt;- inner_join(dat_plot, metainfo, by = \"sample_tiff_id\") %&gt;%\n    inner_join(groups, by = \"patient_id\") %&gt;% distinct()\n\n  dat_plot[[gp_key]] &lt;- factor(dat_plot[[gp_key]], levels = factor_list[[compare_group]])\n  dat_plot$meta_cluster &lt;- fct_relevel(dat_plot$meta_cluster, meta_cluster_names)\n\n  p &lt;- ggboxplot(dat_plot, x = \"meta_cluster\", y = \"pro\", fill = gp_key, outlier.shape = NA,\n                 palette = pal_nejm(\"default\")(3), xlab = NULL,size = 0.2) + theme_classic() +\n    theme(strip.placement  = \"outside\",\n          panel.spacing    = unit(3, \"points\"),\n          strip.background = element_blank(),\n          strip.text       = element_text(face = \"bold\", size = 5),\n          axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),\n          axis.line.x = element_line(size = 0.4),\n          axis.line.y = element_line(size = 0.4),\n          legend.position=\"right\") +\n    labs(x= NULL, y = NULL)\n  exp1 &lt;- expr(pro ~ !!ensym(gp_key))\n  stat_test &lt;- dat_plot %&gt;%\n    group_by(meta_cluster) %&gt;% rstatix::wilcox_test(eval(exp1), p.adjust.method = \"none\")\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                            p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                            p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                            p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                            p &lt; 0.0001 ~ \"****\",\n                                                            TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    add_xy_position(x = \"meta_cluster\", dodge = 0.8)\n  p1 &lt;- p +\n    stat_pvalue_manual(\n      stat_test, tip.length = 0.01, hide.ns = T, label = \"p.adj.signif\",\n      coord.flip = TRUE\n    ) + coord_flip() +\n    guides(fill = guide_legend(reverse = TRUE))\n  #ggsave(glue(\"metacluster_{compare_group}.pdf\"), p1, width = 6, height = 6)\n  plist[[compare_group]] &lt;- p1\n}\npc &lt;- (plist[[1]]|plist[[2]]|plist[[3]])/(plist[[4]]|plist[[5]]|plist[[6]]) + \n  plot_layout(guides = 'collect', widths = c(2, 2.5, 2.5, 2.5))\nggsave(glue::glue(\"{res_dir}/sup_figure7a_wilct.pdf\"), pc, width = 10.5, height = 5)\npc",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>sup_figure7</span>"
    ]
  },
  {
    "objectID": "sup_figure7.html#sup_figure7b",
    "href": "sup_figure7.html#sup_figure7b",
    "title": "sup_figure7",
    "section": "sup_figure7b",
    "text": "sup_figure7b\n\n# clinical metadata\n#chemo_outcome_before\ndt_cob &lt;- metadata[[\"chemo_outcome_before\"]][c(\"patient_id\", \"size_alteration\")]\ndt_cob &lt;- coldat %&gt;% dplyr::filter(patient_id %in% dt_cob$patient_id) %&gt;%\n  dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %&gt;% unique() %&gt;%\n  left_join(dt_cob, by = \"patient_id\") %&gt;% \n  dplyr::filter(stype2 %in% c(\"before_chemo\", \"puncture_pdac\"))\n\n#chemo_outcome_after\ndt_coa &lt;- metadata[[\"chemo_outcome_after\"]][c(\"patient_id\", \"size_alteration\")]\ndt_coa &lt;- coldat %&gt;% dplyr::filter(patient_id %in% dt_coa$patient_id) %&gt;%\n  dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %&gt;% unique() %&gt;%\n  left_join(dt_coa, by = \"patient_id\") %&gt;% \n  dplyr::filter(stype2 %in% c(\"after_chemo\", \"tumor\"))\n\ndt_list &lt;- list(dt_cob, dt_coa)\nnames(dt_list) &lt;- c(\"chemo_outcome_before\", \"chemo_outcome_after\")\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] &lt;- left_join(dt_list[[i]], do.call(\"rbind\", ci), \n                            by = \"sample_tiff_id\") %&gt;% dplyr::select(-c(from, to))\n  dt_list[[i]] &lt;- dt_list[[i]] %&gt;% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %&gt;%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[\"size_alteration\"]] &lt;- factor(dt_list[[i]][[\"size_alteration\"]], \n                                              levels = factor_list[[names(dt_list)[i]]])\n}\n\ngroup_list &lt;- list(c(\"chemo_outcome_before\", \"size_alteration\"), \n                   c(\"chemo_outcome_after\", \"size_alteration\"))\n\np1 &lt;- purrr::map2(dt_list, group_list, ~interaction_plot(x = .x, conditionCol = .y[2], \n                                                         group = .y[1], colors = meta_cols))\nnames(p1) &lt;- c(\"chemo_outcome_before\", \"chemo_outcome_after\")\n\n\n#sub keycols\nkeycols_sub &lt;- keycols_list[c(\"nerve_invasion\", \"vascular_invasion\", \"lymph_metastasis\", \"pfs_analysis\")]\n\ndt_list &lt;- list()\nfor (i in 1:length(keycols_sub)) {\n  dt_list[[i]] &lt;- metadata[[names(keycols_sub[i])]][c(\"patient_id\", keycols_sub[[i]])]\n  dt_list[[i]] &lt;- coldat %&gt;% dplyr::filter(patient_id %in% dt_list[[i]]$patient_id) %&gt;%\n    dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %&gt;% unique() %&gt;%\n    left_join(dt_list[[i]], by = \"patient_id\") %&gt;% dplyr::filter(stype2 %in% c(\"after_chemo\", \"tumor\"))\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] &lt;- left_join(dt_list[[i]], do.call(\"rbind\", ci), by = \"sample_tiff_id\") %&gt;% \n    dplyr::select(-c(from, to))\n  dt_list[[i]] &lt;- dt_list[[i]] %&gt;% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %&gt;%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %&gt;%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[keycols_sub[[i]]]] &lt;- factor(dt_list[[i]][[keycols_sub[[i]]]], \n                                             levels = factor_list[[names(keycols_sub)[i]]])\n}\n\np_list &lt;- list()\nfor (i in 1:length(dt_list)) {\n  for (j in 1:length(keycols_sub[[i]])) {\n    group1 &lt;- str_c(names(keycols_sub)[i],keycols_sub[[i]][j], sep= \"_\")\n    p_list[[group1]] &lt;- interaction_plot(dt_list[[i]] %&gt;% \n                                           dplyr::select(sample_id, keycols_sub[[i]][j], sample_tiff_id,\n                                                         from_cluster, to_cluster, from_meta, to_meta) %&gt;% na.omit(),\n                                         conditionCol = keycols_sub[[i]][j], group = group1, colors = meta_cols)\n  }\n}\n\n\np_list &lt;- c(p_list, p1)\n\nlo &lt;- \"\nABC\nDEF\nGHI\nJKL\n\"\n\np2 &lt;- p_list[[\"nerve_invasion_nerve_invasion\"]][[1]] + p_list[[\"vascular_invasion_vascular_invasion\"]][[1]] +\n  p_list[[\"lymph_metastasis_lymph_metastasis_status\"]][[1]] + p_list[[\"nerve_invasion_nerve_invasion\"]][[2]] +\n  p_list[[\"vascular_invasion_vascular_invasion\"]][[2]] + p_list[[\"lymph_metastasis_lymph_metastasis_status\"]][[2]] +\n  p_list[[\"chemo_outcome_before\"]][[1]] + p_list[[\"chemo_outcome_after\"]][[1]] +\n  p_list[[\"pfs_analysis_pfs_group\"]][[1]] + p_list[[\"chemo_outcome_before\"]][[2]] +\n  p_list[[\"chemo_outcome_after\"]][[2]] + p_list[[\"pfs_analysis_pfs_group\"]][[2]] + plot_layout(design = lo, guides='collect')\n\nggsave(glue::glue(\"{res_dir}/sup_figure7b.pdf\"), p2, width = 12, height = 9.5)\np2",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>sup_figure7</span>"
    ]
  },
  {
    "objectID": "sup_figure8.html",
    "href": "sup_figure8.html",
    "title": "sup_figure8",
    "section": "",
    "text": "sup_figure8ab\nsample_to_tiff &lt;- distinct(coldat[, c(\"stype2\", \"patient_id\", \"sample_id\", \"sample_tiff_id\")])\nmeta_os &lt;- as.data.frame(metadata[[\"os_analysis\"]])\nmeta_pfs &lt;- as.data.frame(metadata[[\"pfs_analysis\"]])\n\n# community interaction weight\ndf_inter_weighted &lt;- metadata[[\"community_interaction_weighted\"]] \n\n# allsurgery samples\ndf_inter_weighted_new_allsurgery &lt;- left_join(df_inter_weighted, sample_to_tiff, by = \"sample_tiff_id\") %&gt;%\n  dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]], sample_chemo_type_list[[\"no_chemo_no_punc\"]]))\n\ndf_inter_weighted_new_allsurgery &lt;- df_inter_weighted_new_allsurgery %&gt;%\n  dplyr::mutate(interact_meta_bi = case_when(from_meta &gt; to_meta ~ str_c(from_meta, \"_\", to_meta),\n                                             TRUE ~ str_c(to_meta, \"_\", from_meta)))\n\nmeta_nochemo_df &lt;- df_inter_weighted_new_allsurgery %&gt;%\n  group_by(interact_meta_bi, sample_id, patient_id) %&gt;%\n  dplyr::summarise(mean_weight = mean(weight)) %&gt;% ungroup()\n\nmetas &lt;- names(table((meta_nochemo_df$interact_meta_bi)))[table((meta_nochemo_df$interact_meta_bi)) &gt; 1]\n\nmeta_nochemo_col &lt;- meta_nochemo_df %&gt;% \n  dplyr::filter(interact_meta_bi %in% metas) %&gt;%\n  pivot_wider(id_cols = c(\"sample_id\", \"patient_id\"),\n              names_from = interact_meta_bi,\n              values_from = mean_weight, values_fill = 1)\n\n# MC-tumor-frontline_MC-stroma-macro_vs_MC-tumor-frontline_MC-immune-enriched\n os_df &lt;- meta_nochemo_col %&gt;% dplyr::select(sample_id, patient_id, \n                                              `MC-tumor-frontline_MC-stroma-macro`,\n                                              `MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      dplyr::mutate(weight_ratio = `MC-tumor-frontline_MC-stroma-macro`/`MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      left_join(sinfo, by = c(\"sample_id\", \"patient_id\")) %&gt;%\n      dplyr::mutate(group_median = case_when(weight_ratio &gt;= median(weight_ratio) ~ \"high\", \n                                             weight_ratio &lt; median(weight_ratio) ~ \"low\"))\n \nos_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"os_state\", \"os_month\", \"group_median\"))) %&gt;% drop_na(os_month)\n#os\npsurv1 &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_median, data = os_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(os_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8a_os.pdf\"),\n             plot = psurv1, width = 5, height = 5)\n      \n\npfs_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"pfs_state\", \"pfs_month\", \"group_median\"))) %&gt;% drop_na(pfs_month)\n#pfs\npsurv2 &lt;- ggsurvplot(surv_fit(Surv(pfs_month, pfs_state) ~ group_median, data = pfs_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(pfs_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8a_pfs.pdf\"),\n             plot = psurv2, width = 5, height = 5)\n\n\n# MC-tumor-frontline_MC-stroma-mCAF_vs_MC-tumor-frontline_MC-immune-enriched\n os_df &lt;- meta_nochemo_col %&gt;% dplyr::select(sample_id, patient_id, \n                                              `MC-tumor-frontline_MC-stroma-mCAF`,\n                                              `MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      dplyr::mutate(weight_ratio = `MC-tumor-frontline_MC-stroma-mCAF`/`MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      left_join(sinfo, by = c(\"sample_id\", \"patient_id\")) %&gt;%\n      dplyr::mutate(group_median = case_when(weight_ratio &gt;= median(weight_ratio) ~ \"high\", \n                                             weight_ratio &lt; median(weight_ratio) ~ \"low\"))\n \nos_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"os_state\", \"os_month\", \"group_median\"))) %&gt;% drop_na(os_month)\n#os\npsurv3 &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_median, data = os_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(os_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8b_os.pdf\"),\n             plot = psurv3, width = 5, height = 5)\n      \n\npfs_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"pfs_state\", \"pfs_month\", \"group_median\"))) %&gt;% drop_na(pfs_month)\n#pfs\npsurv4 &lt;- ggsurvplot(surv_fit(Surv(pfs_month, pfs_state) ~ group_median, data = pfs_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(pfs_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8b_pfs.pdf\"),\n             plot = psurv4, width = 5, height = 5)\n\n\n(psurv2$plot | psurv1$plot) / (psurv4$plot | psurv3$plot)",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>sup_figure8</span>"
    ]
  },
  {
    "objectID": "sup_figure8.html#sup_figure8cd",
    "href": "sup_figure8.html#sup_figure8cd",
    "title": "sup_figure8",
    "section": "sup_figure8cd",
    "text": "sup_figure8cd\n\n# no_chemo_no_punc\ndf_inter_weighted_new_nochemo &lt;- left_join(df_inter_weighted, sample_to_tiff, by = \"sample_tiff_id\") %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_no_punc\"]])\n\ndf_inter_weighted_new_nochemo &lt;- df_inter_weighted_new_nochemo %&gt;%\n  dplyr::mutate(interact_meta_bi = case_when(from_meta &gt; to_meta ~ str_c(from_meta, \"_\", to_meta),\n                                             TRUE ~ str_c(to_meta, \"_\", from_meta)))\n\nmeta_nochemo_df &lt;- df_inter_weighted_new_nochemo %&gt;%\n  group_by(interact_meta_bi, sample_id, patient_id) %&gt;%\n  dplyr::summarise(mean_weight = mean(weight)) %&gt;% ungroup()\n\nmetas &lt;- names(table((meta_nochemo_df$interact_meta_bi)))[table((meta_nochemo_df$interact_meta_bi)) &gt; 1]\n\nmeta_nochemo_col &lt;- meta_nochemo_df %&gt;% \n  dplyr::filter(interact_meta_bi %in% metas) %&gt;%\n  pivot_wider(id_cols = c(\"sample_id\", \"patient_id\"),\n              names_from = interact_meta_bi,\n              values_from = mean_weight, values_fill = 1)\n\n# MC-tumor-frontline_MC-stroma-macro_vs_MC-tumor-frontline_MC-immune-enriched\n os_df &lt;- meta_nochemo_col %&gt;% dplyr::select(sample_id, patient_id, \n                                              `MC-tumor-frontline_MC-stroma-macro`,\n                                              `MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      dplyr::mutate(weight_ratio = `MC-tumor-frontline_MC-stroma-macro`/`MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      left_join(sinfo, by = c(\"sample_id\", \"patient_id\")) %&gt;%\n      dplyr::mutate(group_median = case_when(weight_ratio &gt;= median(weight_ratio) ~ \"high\", \n                                             weight_ratio &lt; median(weight_ratio) ~ \"low\"))\n \nos_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"os_state\", \"os_month\", \"group_median\"))) %&gt;% drop_na(os_month)\n#os\npsurv1 &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_median, data = os_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(os_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8c_os.pdf\"),\n             plot = psurv1, width = 5, height = 5)\n      \n\npfs_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"pfs_state\", \"pfs_month\", \"group_median\"))) %&gt;% drop_na(pfs_month)\n#pfs\npsurv2 &lt;- ggsurvplot(surv_fit(Surv(pfs_month, pfs_state) ~ group_median, data = pfs_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(pfs_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8c_pfs.pdf\"),\n             plot = psurv2, width = 5, height = 5)\n\n\n# MC-tumor-frontline_MC-stroma-mCAF_vs_MC-tumor-frontline_MC-immune-enriched\n os_df &lt;- meta_nochemo_col %&gt;% dplyr::select(sample_id, patient_id, \n                                              `MC-tumor-frontline_MC-stroma-mCAF`,\n                                              `MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      dplyr::mutate(weight_ratio = `MC-tumor-frontline_MC-stroma-mCAF`/`MC-tumor-frontline_MC-immune-enriched`) %&gt;%\n      left_join(sinfo, by = c(\"sample_id\", \"patient_id\")) %&gt;%\n      dplyr::mutate(group_median = case_when(weight_ratio &gt;= median(weight_ratio) ~ \"high\", \n                                             weight_ratio &lt; median(weight_ratio) ~ \"low\"))\n \nos_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"os_state\", \"os_month\", \"group_median\"))) %&gt;% drop_na(os_month)\n#os\npsurv3 &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_median, data = os_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(os_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8d_os.pdf\"),\n             plot = psurv3, width = 5, height = 5)\n      \n\npfs_tmp &lt;- os_df %&gt;% dplyr::select(all_of(c(\"sample_id\", \"pfs_state\", \"pfs_month\", \"group_median\"))) %&gt;% drop_na(pfs_month)\n#pfs\npsurv4 &lt;- ggsurvplot(surv_fit(Surv(pfs_month, pfs_state) ~ group_median, data = pfs_tmp),\n                           palette = c(\"high\"=\"#BC3C29FF\", \"low\"=\"#0072B5FF\"),\n                           legend.labs = levels(droplevels(as.factor(unlist(pfs_tmp[, \"group_median\"])))),\n                           pval=T, risk.table = T)#, xlim = c(0,75))\nggsave(glue::glue(\"{res_dir}/sup_figure8d_pfs.pdf\"),\n             plot = psurv4, width = 5, height = 5)\n\n(psurv2$plot | psurv1$plot) / (psurv4$plot | psurv3$plot)",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>sup_figure8</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html",
    "href": "sup_figure9.html",
    "title": "sup_figure9",
    "section": "",
    "text": "sup_figure9a1\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster))\n\n#summary cell type prop\ncell_type_meta3_total &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% summarise(nt = n()) %&gt;% ungroup()\n\ncell_type_meta3 &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, cell_type_new, meta_merge) %&gt;% summarise(nc = n()) %&gt;% ungroup()\n\ncell_type_meta3$cell_type_new &lt;- factor(cell_type_meta3$cell_type_new)\ncell_type_meta3 &lt;- cell_type_meta3 %&gt;%\n  group_by(sample_id, meta_merge) %&gt;%\n  tidyr::complete(cell_type_new, fill = list(nc = 0)) %&gt;% ungroup()\ncell_type_meta3 &lt;- left_join(cell_type_meta3_total, cell_type_meta3, by = c(\"sample_id\", \"meta_merge\")) %&gt;%\n  dplyr::mutate(prop = nc/nt) %&gt;% dplyr::select(-c(nt, nc)) %&gt;% distinct()\n\n#add os info\ncell_type_meta3 &lt;- left_join(cell_type_meta3, sinfo, by = \"sample_id\") %&gt;%\n  dplyr::select(sample_id, cell_type_new, meta_merge, prop, pfs_state, pfs_month, os_state, os_month)\n\n#MC-stroma-macro\ncell_type_meta3_sm &lt;- cell_type_meta3 %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(meta_merge == \"MC-stroma-macro\") %&gt;%\n  dplyr::mutate(group_mean = case_when(prop &gt;= mean(prop) ~ \"High DN-Mp (n = 54)\", prop &lt; mean(prop) ~ \"Low DN-Mp (n = 60)\"))\n\ncell_type_meta3_sm_os &lt;- cell_type_meta3_sm %&gt;% dplyr::select(sample_id, os_state, os_month, group_mean) %&gt;% drop_na(os_month)\ncols &lt;- c(\"High DN-Mp (n = 54)\" = \"#BC3C29FF\", \"Low DN-Mp (n = 60)\" = \"#0072B5FF\")\n\n#mean group\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_mean, data = cell_type_meta3_sm_os), palette = cols,\n                     legend.labs = levels(droplevels(as.factor(unlist(cell_type_meta3_sm_os[, \"group_mean\"])))),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75))\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"MC-stroma-Mp\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sup_figure9a1_DNmac_Stroma_Macro_os_mean.pdf\"),\n       plot = psurvx, width = 7, height = 7)\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9a2",
    "href": "sup_figure9.html#sup_figure9a2",
    "title": "sup_figure9",
    "section": "sup_figure9a2",
    "text": "sup_figure9a2\n\n#Other_metas\ncell_type_meta3_oth &lt;- cell_type_meta3 %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(meta_merge == \"MC-others\") %&gt;%\n  dplyr::mutate(group_mean = case_when(prop &gt;= mean(prop) ~ \"High DN-Mp (n = 49)\", \n                                       prop &lt; mean(prop) ~ \"Low DN-Mp (n = 96)\"))\n\ncell_type_meta3_oth_os &lt;- cell_type_meta3_oth %&gt;% \n  dplyr::select(sample_id, os_state, os_month, group_mean) %&gt;% drop_na(os_month)\ncols &lt;- c(\"High DN-Mp (n = 49)\" = \"#BC3C29FF\", \"Low DN-Mp (n = 96)\" = \"#0072B5FF\")\n\n#mean group\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_mean, data = cell_type_meta3_oth_os), palette = cols,\n                     legend.labs = levels(droplevels(as.factor(unlist(cell_type_meta3_oth_os[, \"group_mean\"])))),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75))\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"MC-others\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sup_figure9a2_DNmac_Other_metas_os_mean.pdf\"),\n       plot = psurvx, width = 7, height = 7)\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9b",
    "href": "sup_figure9.html#sup_figure9b",
    "title": "sup_figure9",
    "section": "sup_figure9b",
    "text": "sup_figure9b\n\n#summary cell type prop\ncell_type_total &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, cell_type_new) %&gt;% summarise(nc = n()) %&gt;%\n  group_by(sample_id) %&gt;% dplyr::mutate(nt = sum(nc)) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(prop = nc/nt)\n\ncell_type_total$cell_type_new &lt;- factor(cell_type_total$cell_type_new)\ncell_type_total &lt;- cell_type_total %&gt;%\n  group_by(sample_id) %&gt;%\n  tidyr::complete(cell_type_new, fill = list(prop = 0)) %&gt;% ungroup()\n\ncell_type_dnmac &lt;- cell_type_total %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\")\n\ncell_type_dnmac &lt;- left_join(cell_type_dnmac, sinfo, by = \"sample_id\") %&gt;%\n  dplyr::select(sample_id, prop, os_state, os_month)\n\ncell_type_dnmac &lt;- cell_type_dnmac %&gt;%\n  dplyr::mutate(group_mean = case_when(prop &gt;= mean(prop) ~ \"High DN-Mp (n = 57)\", \n                                       prop &lt; mean(prop) ~ \"Low DN-Mp (n = 89)\")) %&gt;% \n  drop_na(os_month)\n\ncols &lt;- c(\"High DN-Mp (n = 57)\" = \"#BC3C29FF\", \"Low DN-Mp (n = 89)\" = \"#0072B5FF\")\n\n#mean group\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_mean, data = cell_type_dnmac), palette = cols,\n                     legend.labs = levels(droplevels(as.factor(unlist(cell_type_dnmac[, \"group_mean\"])))),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75))\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"Total ROI\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sup_figure9b_DNmac_total_region_os_mean.pdf\"),\n       plot = psurvx, width = 7, height = 7)\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9c",
    "href": "sup_figure9.html#sup_figure9c",
    "title": "sup_figure9",
    "section": "sup_figure9c",
    "text": "sup_figure9c\n\n#CD8T in TB prop OS\nCD8T_meta3_tb &lt;- cell_type_meta3 %&gt;% dplyr::filter(cell_type_new == \"CD8+ T cell\") %&gt;%\n  dplyr::filter(meta_merge == \"MC-tumor-frontline\") %&gt;%\n  dplyr::mutate(group_mean = case_when(prop &gt;= mean(prop) ~ \"High CD8+ T cell (n = 39)\", \n                                       prop &lt; mean(prop) ~ \"Low CD8+ T cell (n = 92)\"))\n\nCD8T_meta3_tb_os &lt;- CD8T_meta3_tb %&gt;% dplyr::select(sample_id, os_state, os_month, group_mean) %&gt;% drop_na(os_month)\ncols &lt;- c(\"High CD8+ T cell (n = 39)\" = \"#BC3C29FF\", \"Low CD8+ T cell (n = 92)\" = \"#0072B5FF\")\n\n#mean group\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group_mean, data = CD8T_meta3_tb_os), palette = cols,\n                     legend.labs = levels(droplevels(as.factor(unlist(CD8T_meta3_tb_os[, \"group_mean\"])))),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     pval = T, risk.table = F, xlim = c(0,75))\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"MC-tumor-frontline\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sup_figure9c_CD8T_Tumor_boundary_os_mean.pdf\"),\n       plot = psurvx, width = 7, height = 7)\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9d",
    "href": "sup_figure9.html#sup_figure9d",
    "title": "sup_figure9",
    "section": "sup_figure9d",
    "text": "sup_figure9d\n\nctype_prop_3metas &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all & \n                                                meta_merge != \"MC-tumor-core\") %&gt;%\n  dplyr::select(sample_id, cell_type_new, meta_merge) %&gt;% group_by(sample_id, cell_type_new, meta_merge) %&gt;%\n  dplyr::mutate(nc = n()) %&gt;% ungroup() %&gt;% distinct() %&gt;%\n  group_by(sample_id, meta_merge) %&gt;%\n  dplyr::mutate(nt = sum(nc),\n                prop = nc/nt) %&gt;% ungroup()\n\nctype_prop_3metas$meta_merge &lt;- factor(ctype_prop_3metas$meta_merge, \n                                       levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\nctype_prop_3metas$cell_type_new &lt;- factor(ctype_prop_3metas$cell_type_new)\nctype_prop_3metas &lt;- ctype_prop_3metas %&gt;%\n  group_by(sample_id, meta_merge) %&gt;%\n  complete(cell_type_new, fill = list(prop = 0, nc = 0)) %&gt;%\n  tidyr::fill(nt, .direction = \"downup\") %&gt;% ungroup()\n\n\n#DNmac prop in 3 metas\ndat_plot &lt;- ctype_prop_3metas %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\")\n#quantile(dat_plot$prop, prob = 0.9) %&gt;% as.numeric()\ndat_plot$meta_merge &lt;- as.character(dat_plot$meta_merge)\n\ndat_plot$meta_merge &lt;- factor(dat_plot$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\nmy_comparisons &lt;- list(c(\"MC-tumor-frontline\", \"MC-stroma-macro\"), c(\"MC-stroma-macro\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\nstat_test &lt;- dat_plot %&gt;% rstatix::wilcox_test(prop ~ meta_merge, comparisons = my_comparisons)\nstat_test$y.position &lt;- c(0.45,0.43,0.41)\n\ndat_plot$prop[dat_plot$prop &gt; quantile(dat_plot$prop, prob = 0.95)] &lt;- quantile(dat_plot$prop, prob = 0.95)\ndat_plot &lt;- dat_plot %&gt;% group_by(meta_merge, cell_type_new) %&gt;% dplyr::mutate(ng = n()) %&gt;% ungroup\n\np &lt;- ggplot(dat_plot,\n            aes(x = meta_merge, y = prop)) +\n  geom_boxplot(aes(fill = meta_merge), width = .3, show.legend = FALSE,\n               outlier.shape = NA, linewidth = .2, color = \"black\") +\n  stat_summary(aes(fill = meta_merge, color = meta_merge), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n               position = position_dodge(.5), fatten = .5, size = .5, stroke = .5, linewidth = .5, color = \"black\") +\n  #scale_y_continuous(limits=c(0,0.4), oob = scales::rescale_none) +\n  ylim(0,0.45) + ylab(glue::glue(\"Proportion of DN-Mp\")) +\n  scale_fill_manual(values = meta_merge_cols) +\n  stat_pvalue_manual(stat_test, tip.length = .03, bracket.size = 0.2, label = \"p.adj.signif\", size = 2) +\n  directlabels::geom_dl(aes(label = ng), method = list(\"top.points\", cex = .4)) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"none\")\nggsave(glue::glue(\"{res_dir}/sup_figure9d_DNmac_prop_3metas_only.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9e",
    "href": "sup_figure9.html#sup_figure9e",
    "title": "sup_figure9",
    "section": "sup_figure9e",
    "text": "sup_figure9e\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\nDNmac_TB_prop &lt;- coldat %&gt;%\n  group_by(sample_tiff_id, meta_merge, cell_type11) %&gt;%\n  dplyr::summarise(nc = n()) %&gt;% group_by(sample_tiff_id, meta_merge) %&gt;%\n  dplyr::mutate(nt = sum(nc)) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(prop = nc/nt) %&gt;%\n  dplyr::filter(meta_merge == \"MC-tumor-frontline\")\nDNmac_TB_prop$cell_type11 &lt;- factor(DNmac_TB_prop$cell_type11)\nDNmac_TB_prop &lt;- DNmac_TB_prop %&gt;% group_by(sample_tiff_id) %&gt;%\n  tidyr::complete(cell_type11, fill = list(prop = 0)) %&gt;% ungroup() %&gt;%\n  distinct() %&gt;% dplyr::filter(cell_type11 == \"DN-mp\")\n\n#tiffs have TB and SM\nTB_SM_tiffs &lt;- coldat[, c(\"sample_tiff_id\", \"meta_cluster\")] %&gt;% distinct() %&gt;%\n  drop_na(meta_cluster) %&gt;% dplyr::mutate(exist = 1) %&gt;%\n  pivot_wider(names_from = meta_cluster, values_from = exist, values_fill = 0) %&gt;%\n  dplyr::filter(`MC-tumor-frontline` != 0 & `MC-stroma-macro` != 0) %&gt;% .$sample_tiff_id %&gt;% unique()\n\ndf_inter_weighted &lt;- metadata[[\"community_interaction_weighted\"]] %&gt;%\n  dplyr::filter(from_meta != to_meta) %&gt;%\n  dplyr::mutate(inter_pair =\n                  case_when(from_meta == \"MC-tumor-frontline\" & to_meta == \"MC-stroma-macro\" ~ \"TB_SM\",\n                            from_meta == \"MC-stroma-macro\" & to_meta == \"MC-tumor-frontline\" ~ \"TB_SM\",\n                            from_meta == \"MC-tumor-frontline\" & to_meta != \"MC-stroma-macro\" ~ \"TB_Others\",\n                            from_meta != \"MC-stroma-macro\" & to_meta == \"MC-tumor-frontline\" ~ \"TB_Others\",\n                            TRUE ~ \"Others\")) %&gt;%\n  dplyr::filter(inter_pair != \"Others\") %&gt;%\n  dplyr::filter(sample_tiff_id %in% TB_SM_tiffs)\n\ndf_inter_weighted_mean &lt;- df_inter_weighted %&gt;%\n  group_by(sample_tiff_id, inter_pair) %&gt;%\n  summarise(mean_wt = mean(weight)) %&gt;% ungroup()\ndf_inter_weighted_mean &lt;- df_inter_weighted_mean %&gt;%\n  tidyr::complete(sample_tiff_id, inter_pair, fill = list(mean_wt = 0))\n\ndata_df &lt;- left_join(df_inter_weighted_mean[df_inter_weighted_mean$inter_pair == \"TB_SM\",],\n                     DNmac_TB_prop,\n                     by = \"sample_tiff_id\")\n\ncor_res &lt;- data.frame(\"cor\" = cor.test(formula = ~ mean_wt + prop,\n                                       data = data_df)$estimate,\n                      \"pval\" = cor.test(formula = ~ mean_wt + prop,\n                                        data = data_df)$p.value)\n\np &lt;- ggscatter(data_df, x = \"mean_wt\", y = \"prop\",\n               palette = \"#BC3C29FF\", size = .01,\n               add = \"reg.line\", conf.int = TRUE, star.plot.lwd = .1,\n               cor.coef.size = .01) + xlim(0,1) +\n  scale_x_continuous(limits=c(0,20), oob = scales::rescale_none) +\n  xlab(glue::glue(\"Mean weight of interaction\")) + ylab(glue::glue(\"Proportion of DN-Mp\")) +\n  stat_cor(aes(color = \"#BC3C29FF\"), label.x = 11, size = 3) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sup_figure9e_correlation_TBSMinteractionWT_DNmacpropTB.pdf\"), p, width = 5, height = 5)\np",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure9.html#sup_figure9f",
    "href": "sup_figure9.html#sup_figure9f",
    "title": "sup_figure9",
    "section": "sup_figure9f",
    "text": "sup_figure9f\n\nDNmac_TB_prop &lt;- coldat %&gt;%\n  group_by(sample_tiff_id, meta_merge, cell_type11) %&gt;%\n  dplyr::summarise(nc = n()) %&gt;% group_by(sample_tiff_id, meta_merge) %&gt;%\n  dplyr::mutate(nt = sum(nc)) %&gt;% ungroup() %&gt;%\n  dplyr::mutate(prop = nc/nt) %&gt;%\n  dplyr::filter(meta_merge == \"MC-tumor-frontline\")\nDNmac_TB_prop$cell_type11 &lt;- factor(DNmac_TB_prop$cell_type11)\nDNmac_TB_prop &lt;- DNmac_TB_prop %&gt;% group_by(sample_tiff_id) %&gt;%\n  tidyr::complete(cell_type11, fill = list(prop = 0)) %&gt;% ungroup() %&gt;%\n  distinct() %&gt;% dplyr::filter(cell_type11 == \"DN-mp\")\n\n#tiffs have TB and SM\nTB_SM_tiffs &lt;- coldat[, c(\"sample_tiff_id\", \"meta_cluster\")] %&gt;% distinct() %&gt;%\n  drop_na(meta_cluster) %&gt;% dplyr::mutate(exist = 1) %&gt;%\n  pivot_wider(names_from = meta_cluster, values_from = exist, values_fill = 0) %&gt;%\n  dplyr::filter(`MC-tumor-frontline` != 0 & `MC-stroma-macro` != 0) %&gt;% .$sample_tiff_id %&gt;% unique()\n\ndf_inter_weighted &lt;- metadata[[\"community_interaction_weighted\"]] %&gt;%\n  dplyr::filter(from_meta != to_meta) %&gt;%\n  dplyr::mutate(inter_pair =\n                  case_when(from_meta == \"MC-tumor-frontline\" & to_meta == \"MC-stroma-macro\" ~ \"TB_SM\",\n                            from_meta == \"MC-stroma-macro\" & to_meta == \"MC-tumor-frontline\" ~ \"TB_SM\",\n                            from_meta == \"MC-tumor-frontline\" & to_meta != \"MC-stroma-macro\" ~ \"TB_Others\",\n                            from_meta != \"MC-stroma-macro\" & to_meta == \"MC-tumor-frontline\" ~ \"TB_Others\",\n                            TRUE ~ \"Others\")) %&gt;%\n  dplyr::filter(inter_pair != \"Others\") %&gt;%\n  dplyr::filter(sample_tiff_id %in% TB_SM_tiffs)\n\ndf_inter_weighted_mean &lt;- df_inter_weighted %&gt;%\n  group_by(sample_tiff_id, inter_pair) %&gt;%\n  summarise(mean_wt = mean(weight)) %&gt;% ungroup()\ndf_inter_weighted_mean &lt;- df_inter_weighted_mean %&gt;%\n  tidyr::complete(sample_tiff_id, inter_pair, fill = list(mean_wt = 0))\n\ndata_df &lt;- left_join(df_inter_weighted_mean[df_inter_weighted_mean$inter_pair == \"TB_SM\",],\n                     DNmac_TB_prop,\n                     by = \"sample_tiff_id\")\n\ndata_df &lt;- data_df %&gt;% dplyr::select(sample_tiff_id, mean_wt, prop) %&gt;%\n  dplyr::mutate(group_md = case_when(mean_wt &gt;= median(mean_wt) ~ \"high_weight\", mean_wt &lt; median(mean_wt) ~ \"low_weight\"))\n\ncol_d &lt;- c(\"high_weight\" = \"#BC3C29FF\", \"low_weight\" = \"#0072B5FF\")\n\np &lt;- ggplot(data_df,\n              aes(x = group_md, y = prop)) +\n    geom_boxplot(aes(fill = group_md), width = .5, show.legend = FALSE,\n                 outlier.shape = NA, linewidth = .2, color = \"black\") +\n    stat_summary(aes(fill = group_md, color = group_md), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n                 position = position_dodge(.5), fatten = .5, size = .5, stroke = .5, linewidth = .5, color = \"black\") +\n    scale_colour_manual(values = col_d) +\n    scale_fill_manual(values = col_d) +\n    labs(y = \"Proportion of DN-mp in TB\") +\n    stat_compare_means(aes(label = after_stat(p.signif)), label.y = 0.48,\n                       tip.length = 0, label.x.npc = \"center\",\n                       method = \"wilcox.test\", size = 1) +\n    scale_y_continuous(limits=c(0,0.5), oob = scales::rescale_none) +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"top\",\n          legend.text = element_text(size = 4),\n          legend.title = element_text(size = 4),\n          legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sup_figure9f_TB_SM_DNmac_prop_group_md.pdf\"), p, height = 3, width = 1.5)\np",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>sup_figure9</span>"
    ]
  },
  {
    "objectID": "sup_figure10.html",
    "href": "sup_figure10.html",
    "title": "sup_figure10",
    "section": "",
    "text": "sup_figure10a\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster))\n\nmy_comparisons &lt;- list(c(\"MC-stroma-macro\", \"MC-tumor-frontline\"), c(\"MC-stroma-macro\", \"MC-others\"), c(\"MC-tumor-frontline\", \"MC-others\"))\n\n\n#a\nMacrophage_Dn_total &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% summarise(nt = n()) %&gt;% ungroup()\n\npl &lt;- list()\nfor (i in c(\"Arginase_1_pos_Macrophage\", \"EGFR_pos_Macrophage\")) {\n  Macrophage_Dn_pos &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"HLA-DR-CD163- mp\") %&gt;%\n    dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n    dplyr::filter(cell_id %in% pos_cells10[[i]]) %&gt;%\n    group_by(sample_id, meta_merge) %&gt;% summarise(np = n()) %&gt;% ungroup()\n  Macrophage_Dn_pos &lt;- left_join(Macrophage_Dn_total, Macrophage_Dn_pos, by = c(\"sample_id\", \"meta_merge\")) %&gt;%\n    replace_na(list(np = 0)) %&gt;% dplyr::mutate(prop = np/nt) %&gt;%\n    ungroup() %&gt;% dplyr::select(-c(nt, np)) %&gt;%\n    dplyr::filter(meta_merge != \"MC-tumor-core\") %&gt;%\n    group_by(meta_merge) %&gt;% dplyr::mutate(gn = n()) %&gt;% ungroup\n  \n  Macrophage_Dn_pos$meta_merge &lt;- factor(Macrophage_Dn_pos$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\n  yname &lt;- str_replace_all(i, c(\"_pos_\" = \"+ \", \"Macrophage\" = \"Mp\", \"_\" = \"-\"))\n\n  pl[[i]] &lt;- ggplot(Macrophage_Dn_pos, aes(x = meta_merge, y = prop, fill = meta_merge, color = meta_merge)) +\n    introdataviz::geom_flat_violin(aes(color = meta_merge), position = position_nudge(x = .25), bounds = c(0, 0.5)) +\n    geom_jitter(aes(color = meta_merge), width = 0.1, size = 0.25) +\n    geom_boxplot(width = .1, position = position_nudge(x = .25), fill = \"white\", linewidth = 0.25, outlier.shape = NA) +\n    scale_fill_manual(values = meta_merge_cols) +  scale_color_manual(values = meta_merge_cols) +\n    scale_y_continuous(limits=c(0, 0.6), oob = scales::rescale_none) +\n    stat_compare_means(aes(label = \"p.signif\"), hide.ns = F, tip.length = 0.02, bracket.size = 0.1,\n                       comparisons = my_comparisons, method = \"wilcox.test\",\n                       size = 2, label.y = c(0.51,0.52,0.53)) +\n    directlabels::geom_dl(aes(label = gn),\n                          method = list(\"last.points\", cex = .5)) +\n    ylab(glue::glue(\"Proportion of {yname}\")) + theme_bmbdc() +\n    theme(axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6),\n          legend.position = \"none\")\n\n  ggsave(glue::glue(\"{res_dir}/sfig10a_{i}_sample_meta3_compare_vlnplot1.pdf\"), pl[[i]], width = 3, height = 3)\n}\n  \npl[[\"Arginase_1_pos_Macrophage\"]] | pl[[\"EGFR_pos_Macrophage\"]]",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>sup_figure10</span>"
    ]
  },
  {
    "objectID": "sup_figure10.html#sup_figure10b",
    "href": "sup_figure10.html#sup_figure10b",
    "title": "sup_figure10",
    "section": "sup_figure10b",
    "text": "sup_figure10b\n\npos_mac &lt;- c(\"Arginase_1_pos_Macrophage\", \"PD_L1_pos_Macrophage\", \"CCR6_pos_Macrophage\",\n             \"EGFR_pos_Macrophage\", \"E_Cadherin_pos_Macrophage\", \"Vimentin_pos_Macrophage\")\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\ncld_mac &lt;- coldat %&gt;% dplyr::filter(cell_type11 %in% c(\"DN-mp\", \"Other-mp\")) %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_no_punc\"]] &\n                  meta_merge %notin% \"MC-tumor-core\") \n\nmac_colors &lt;- c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\")\npl &lt;- list()\nfor (i in pos_mac) {\n  cld_mac_pos &lt;- cld_mac %&gt;%\n    dplyr::mutate(pos_pheno = case_when(cell_id %in% pos_cells10[[i]] ~ i,\n                                        TRUE ~ cell_type11))\n  pos_prop_meta &lt;- cld_mac_pos %&gt;% group_by(sample_id, meta_merge, cell_type11, pos_pheno) %&gt;%\n    dplyr::summarise(nc = n()) %&gt;% group_by(sample_id, meta_merge, cell_type11) %&gt;%\n    dplyr::mutate(nt = sum(nc), prop = nc/nt) %&gt;% ungroup()\n\n  pos_prop_meta$pos_pheno &lt;- factor(pos_prop_meta$pos_pheno)\n  pos_prop_meta &lt;- pos_prop_meta %&gt;% group_by(sample_id, meta_merge, cell_type11) %&gt;%\n    tidyr::complete(pos_pheno, fill = list(prop = 0)) %&gt;%\n    ungroup() %&gt;% dplyr::filter(pos_pheno %in% i) %&gt;%\n    group_by(sample_id,meta_merge) %&gt;%\n    dplyr::mutate(n = n(),\n                  pos_pheno = str_replace_all(pos_pheno, c(\"_pos_\" = \"+ \", \"Macrophage\" = \"Mp\", \"_\" = \"-\"))) %&gt;%\n    dplyr::filter(n == 2) %&gt;% ungroup()\n\n  pos_prop_meta$meta_merge &lt;- factor(pos_prop_meta$meta_merge, levels = c(\"MC-tumor-frontline\",\"MC-stroma-macro\",\"MC-others\"))\n  pos_prop_meta$cell_type11 &lt;- factor(pos_prop_meta$cell_type11, levels = c(\"DN-mp\", \"Other-mp\"))\n  stat_test &lt;- pos_prop_meta %&gt;%\n    group_by(meta_merge) %&gt;% rstatix::wilcox_test(prop ~ cell_type11, paired = T)\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                             p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                             p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                             p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                             p &lt; 0.0001 ~ \"****\",\n                                                             TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    rstatix::add_xy_position(x = \"meta_merge\", dodge = 0.9, fun = \"median_iqr\")\n\n  pos_prop_meta &lt;- pos_prop_meta %&gt;%\n    dplyr::mutate(prop = case_when(prop &gt; quantile(prop, prob = .98) ~ quantile(prop, prob = .98),\n                                   TRUE ~ prop))\n  stat_test$y.position &lt;- 0.4\n\n  pl[[i]] &lt;- ggplot(pos_prop_meta,\n              aes(x = meta_merge, y = prop)) +\n    # introdataviz::geom_split_violin(aes(x = meta_merge, y = prop, fill = cell_type11),\n    #                                 alpha = .6, trim = FALSE, linewidth = .2, color = \"black\") +\n    geom_boxplot(aes(fill = cell_type11), width = .5, show.legend = FALSE,\n                 outlier.shape = NA, linewidth = .2, color = \"black\") +\n    stat_summary(aes(fill = cell_type11, color = cell_type11), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n                 position = position_dodge(.5), fatten = .2, size = .2, stroke = .5, linewidth = .2, color = \"black\") +\n    scale_fill_manual(values = mac_colors) +\n    scale_colour_manual(values = mac_colors) +\n    labs(y = glue::glue(\"Proportion of {unique(pos_prop_meta$pos_pheno)}\")) +\n    scale_y_continuous(limits=c(0, 0.4), oob = scales::rescale_none) +\n    stat_pvalue_manual(stat_test, x = \"meta_merge\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 2) +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\", angle = 20),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"top\",\n          legend.text = element_text(size = 4),\n          legend.title = element_text(size = 4),\n          legend.key.size = unit(0.1, 'cm'))\n    ggsave(glue::glue(\"{res_dir}/sfig10b_mac_persample_paired_{i}_mac_prop_boxplot.pdf\"), pl[[i]], width = 3, height = 3)\n}\n\n(pl[[\"Arginase_1_pos_Macrophage\"]] | pl[[\"PD_L1_pos_Macrophage\"]])/\n  (pl[[\"CCR6_pos_Macrophage\"]] | pl[[\"EGFR_pos_Macrophage\"]])/\n  (pl[[\"E_Cadherin_pos_Macrophage\"]] | pl[[\"Vimentin_pos_Macrophage\"]])",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>sup_figure10</span>"
    ]
  },
  {
    "objectID": "sup_figure10.html#sup_figure10c",
    "href": "sup_figure10.html#sup_figure10c",
    "title": "sup_figure10",
    "section": "sup_figure10c",
    "text": "sup_figure10c\n\n# CD8T to Macrophage_other ----------------------------\ndf_closecell_distance_SM &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-stroma-macro\")\ndf_closecell_distance_TB &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-tumor-frontline\")\ndf_closecell_distance_othersnoBT &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-others\")\n\ndf_closecell_distance &lt;- rbind(df_closecell_distance_SM, df_closecell_distance_TB, df_closecell_distance_othersnoBT) %&gt;% as_tibble()\ndf_dist_meta3 &lt;- df_closecell_distance %&gt;%\n  dplyr::filter(from_cell %in% (coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;% .$cell_id))\n\np &lt;- ggdensity(df_dist_meta3, x = \"distance\",\n                        add = \"mean\",\n                        color = \"meta_merge\",\n                        palette = meta_merge_cols) +\n  scale_x_continuous(limits=c(0,200), oob = scales::rescale_none) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sup_figure10c_CD8T_dist_to_OthMac_3metas_density.pdf\"), p, width = 3.5, height = 2.9)\np",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>sup_figure10</span>"
    ]
  },
  {
    "objectID": "sup_figure10.html#sup_figure10d",
    "href": "sup_figure10.html#sup_figure10d",
    "title": "sup_figure10",
    "section": "sup_figure10d",
    "text": "sup_figure10d\n\nmac_colors &lt;- c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\")\nmeta_names &lt;- c(\"TB_\" = \"MC-tumor-frontline\", \"SM_\" = \"MC-stroma-macro\", \"OthersnoBT_\" = \"MC-others\")\n\npl &lt;- list()\nfor (r in c(\"SM_\", \"OthersnoBT_\")) {\ndf_dnmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/{r}list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\ndf_othmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/{r}list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\")) %&gt;%\n  do.call(\"rbind\", .) %&gt;% as_tibble()\n\ndf_mac &lt;- rbind(df_dnmac, df_othmac) %&gt;% as_tibble()\ndf_mac &lt;- df_mac %&gt;%\n  inner_join(coldat, by = c(\"to_cell\" = \"cell_id\")) %&gt;%\n  dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                 sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                  TRUE ~ \"Upfront surgery\"))\n\n#sample\ndf_mac_mean &lt;- df_mac %&gt;% group_by(sample_id, cell_type11, chemo) %&gt;%\n  dplyr::summarise(mean_dis = mean(distance)) %&gt;%\n  group_by(sample_id, chemo) %&gt;% dplyr::mutate(nc = n()) %&gt;%\n  ungroup() %&gt;% dplyr::filter(nc &gt; 1)\n\ndf_mac_mean$cell_type11 &lt;- factor(df_mac_mean$cell_type11, levels = c(\"DN-mp\", \"Other-mp\"))\ndf_mac_mean$chemo &lt;- factor(df_mac_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\n\nstat_test &lt;- df_mac_mean %&gt;%\n  group_by(chemo) %&gt;% rstatix::wilcox_test(mean_dis ~ cell_type11, paired = T)\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"chemo\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- 12\n\npl[[r]] &lt;- ggplot(df_mac_mean,\n             aes(x = chemo, y = log2(mean_dis))) +\n  introdataviz::geom_split_violin(aes(x = chemo, y = log2(mean_dis), color = cell_type11),\n                                  trim = FALSE, linewidth = .3) +\n  geom_boxplot(aes(fill = cell_type11), width = .15, show.legend = FALSE,\n               outlier.size = .2, linewidth = .2, color = \"black\") +\n  scale_fill_manual(values = mac_colors, name = glue::glue(\"{meta_names[r]}\")) +\n  scale_colour_manual(values = mac_colors, name = glue::glue(\"{meta_names[r]}\")) +\n  labs(y = \"Log2(mean distance) of CD8T to Mp\") +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm')) +\n  stat_pvalue_manual(stat_test, x = \"chemo\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5)\nggsave(glue::glue(\"{res_dir}/sfig10d_CD8T_to_mac_dis_{r}cacb_persam_paired.pdf\"), pl[[r]], width = 3, height = 3)\n}\npl[[\"SM_\"]] | pl[[\"OthersnoBT_\"]]",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>sup_figure10</span>"
    ]
  },
  {
    "objectID": "sup_figure10.html#sup_figure10e",
    "href": "sup_figure10.html#sup_figure10e",
    "title": "sup_figure10",
    "section": "sup_figure10e",
    "text": "sup_figure10e\n\ncld_cacb &lt;- coldat %&gt;% dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                                   sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                  TRUE ~ \"Upfront surgery\")) %&gt;%\n  dplyr::select(sample_id, cell_id, cell_type11, chemo, meta_merge)\n\n#MC-tumor-frontline\nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nTB_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\n#MC-stroma-macro\nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nSM_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\n#MC-others  \nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_CD8T_to_Macrophage_oth.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nOthenoBT_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\ndf_dist &lt;- rbind(TB_dist, SM_dist, OthenoBT_dist) \n\n#per sample\ndf_dist_mean &lt;- df_dist %&gt;% group_by(sample_id, cell_type11, chemo, meta_merge) %&gt;%\n  dplyr::summarise(dis_mean = mean(distance)) %&gt;% ungroup()\n\ndf_dist_mean$meta_merge &lt;- factor(df_dist_mean$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\ndf_dist_mean$chemo &lt;- factor(df_dist_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\ncols &lt;- c(\"Upfront surgery\" = \"#BC3C29FF\", \"Surgery after chemo\" = \"#0072B5FF\")\n\npl &lt;- list()\nfor (i in c(\"DN-mp\", \"Other-mp\")) {\n  dat &lt;- df_dist_mean %&gt;% dplyr::filter(cell_type11 %in% i)\nstat_test &lt;- dat %&gt;%\n  group_by(meta_merge) %&gt;% rstatix::wilcox_test(dis_mean ~ chemo, p.adjust.method = \"none\")\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"meta_merge\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- 12\n\npl[[i]] &lt;- ggplot(dat, aes(x = meta_merge, y = log2(dis_mean))) +\n  introdataviz::geom_split_violin(aes(x = meta_merge, y = log2(dis_mean), color = chemo),\n                                  trim = FALSE, linewidth = .3) +\n  geom_boxplot(aes(fill = chemo), width = .2, show.legend = FALSE, linetype = 2,\n               outlier.size = .2, linewidth = .2, color = \"black\") +\n  scale_fill_manual(values = cols) +\n  scale_colour_manual(values = cols) +\n  labs(y = glue::glue(\"Log2(mean distance) of CD8T to {i}\")) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_blank(),\n        legend.key.size = unit(0.1, 'cm')) +\n  stat_pvalue_manual(stat_test, x = \"meta_merge\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5)\nggsave(glue::glue(\"{res_dir}/sup_figure10e_CD8T_to_{i}_dis_3metas_chemo_persam.pdf\"), pl[[i]], width = 3, height = 3)\n}\n\npl[[\"DN-mp\"]] | pl[[\"Other-mp\"]]",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>sup_figure10</span>"
    ]
  },
  {
    "objectID": "sup_figure11.html",
    "href": "sup_figure11.html",
    "title": "sup_figure11",
    "section": "",
    "text": "sup_figure11abc\n#correlation plot function\nDNmac_posOther_correlation_func &lt;- function(cld, cell_pairs2, big_type, meta_colors){\n  cld_nochemo_dn_noBT &lt;- cld %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n    dplyr::filter(meta_cluster != \"MC-tumor-core\") %&gt;%\n    dplyr::filter(cell_type11 == \"DN-mp\") %&gt;%\n    group_by(meta_merge, sample_id) %&gt;% summarise(np = n())\n  cld_nochemo_total1_noBT &lt;- cld %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n    dplyr::filter(meta_cluster != \"MC-tumor-core\") %&gt;%\n    dplyr::filter(cell_type11 %in% c(\"Other-mp\", \"DN-mp\")) %&gt;%\n    group_by(meta_merge, sample_id) %&gt;% summarise(nt = n())\n  cld_nochemo_dn_noBT &lt;- left_join(cld_nochemo_total1_noBT, cld_nochemo_dn_noBT, by = c(\"meta_merge\", \"sample_id\")) %&gt;%\n    replace_na(list(np = 0)) %&gt;% dplyr::mutate(prop = np/nt) %&gt;% dplyr::select(-c(nt, np)) %&gt;% ungroup()\n\n  cld_nochemo_pos2_noBT &lt;- cld %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n    dplyr::filter(meta_cluster != \"MC-tumor-core\") %&gt;%\n    dplyr::filter(cell_id %in% pos_cells10[[cell_pairs2]]) %&gt;%\n    group_by(meta_merge, sample_id) %&gt;% summarise(np = n())\n  cld_nochemo_total2_noBT &lt;- cld %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n    dplyr::filter(meta_cluster != \"MC-tumor-core\") %&gt;%\n    dplyr::filter(cell_type11 %in% big_type) %&gt;%\n    group_by(meta_merge, sample_id) %&gt;% summarise(nt = n())\n  cld_nochemo_pos2_noBT &lt;- left_join(cld_nochemo_total2_noBT, cld_nochemo_pos2_noBT, by = c(\"meta_merge\", \"sample_id\")) %&gt;%\n    replace_na(list(np = 0)) %&gt;% dplyr::mutate(prop = np/nt) %&gt;% dplyr::select(-c(nt, np)) %&gt;% ungroup()\n\n  cld_nochemo_com &lt;- inner_join(cld_nochemo_dn_noBT, cld_nochemo_pos2_noBT, by = c(\"meta_merge\", \"sample_id\"))\n  cld_nochemo_com$meta_merge &lt;- factor(cld_nochemo_com$meta_merge, levels = c(c(\"MC-others\", \"MC-stroma-macro\", \"MC-tumor-frontline\")))\n\n  p &lt;- ggscatter(cld_nochemo_com, x = \"prop.x\", y = \"prop.y\",\n                 color = \"meta_merge\", palette = meta_colors, size = .4,\n                 add = \"reg.line\", conf.int = TRUE, star.plot.lwd = .1,\n                 cor.coef.size = .01) + xlim(0,1) +\n    ylim(0,1) + xlab(glue::glue(\"DN-Mp\")) + ylab(cell_pairs2) +\n    stat_cor(aes(color = meta_merge), label.x = 0.15, label.y = c(0.46,0.48,0.5), size = 2) +\n    theme(axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6),\n          axis.title.x = element_text(size = 6),\n          axis.text.x = element_text(size = 6),\n          legend.text = element_text(size = 2),\n          legend.title = element_text(size = 2),\n          legend.key.size = unit(0.1, 'cm'))\n  return(p)\n}\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster)) %&gt;% \n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\nbig_type &lt;- \"CD8+ T cell\"\n\n#a\ncp2 &lt;- \"LAG_3_pos_CD8T\"\npa &lt;- DNmac_posOther_correlation_func(cld = coldat, cell_pairs2 = cp2, \n                                      big_type = big_type, meta_colors = meta_merge_cols)\npa &lt;- pa + scale_y_continuous(limits=c(0,0.5), oob = scales::rescale_none) + \n  theme(legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sfig11a_DN_mac_cor_with_LAG3CD8T.pdf\"), pa, width = 4, height = 4)\n\n#b\ncp2 &lt;- \"PD1_pos_CD8T\"\npb &lt;- DNmac_posOther_correlation_func(cld = coldat, cell_pairs2 = cp2, \n                                      big_type = big_type, meta_colors = meta_merge_cols)\npb &lt;- pb + scale_y_continuous(limits=c(0,0.5), oob = scales::rescale_none) + \n  theme(legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sfig11b_DN_mac_cor_with_PD1CD8T.pdf\"), pb, width = 4, height = 4)\n\n#c\ncp2 &lt;- \"Vista_pos_CD8T\"\npc &lt;- DNmac_posOther_correlation_func(cld = coldat, cell_pairs2 = cp2, \n                                      big_type = big_type, meta_colors = meta_merge_cols)\npc &lt;- pc + scale_y_continuous(limits=c(0,0.5), oob = scales::rescale_none) + \n  theme(legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sfig11c_DN_mac_cor_with_VistaCD8T.pdf\"), pc, width = 4, height = 4)\n\npa | pb | pc",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>sup_figure11</span>"
    ]
  },
  {
    "objectID": "sup_figure11.html#sup_figure11d",
    "href": "sup_figure11.html#sup_figure11d",
    "title": "sup_figure11",
    "section": "sup_figure11d",
    "text": "sup_figure11d\n\ncomcc_t &lt;- as.data.frame(t(assay_cc))\ncomcc_t$cell_id &lt;- rownames(comcc_t)\ncld_df &lt;- left_join(coldat, comcc_t, by = \"cell_id\") %&gt;% \n  dplyr::select(sample_id, cell_id, a_smooth:CD25)\n\nlist_closecell_distance &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_CD8T_to_Macrophage_DN.rds\"))\n\ndf_closecell_distance &lt;- do.call(\"rbind\", list_closecell_distance)\ndf_closecell_distance &lt;- left_join(df_closecell_distance, cld_df, by = c(\"from_cell\" = \"cell_id\")) %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all)\n\ndf_closecell_distance &lt;- df_closecell_distance %&gt;% dplyr::mutate(group = case_when(distance &lt; median(distance) ~ \"near\",\n                                                                                   TRUE ~ \"far\"))\n\ndf_new_group &lt;- df_closecell_distance %&gt;% group_by(to_cell) %&gt;%\n  dplyr::summarise(group_all = paste(group, collapse = \";\")) %&gt;%\n  dplyr::mutate(group_new = case_when(str_detect(group_all, \"near\") ~ \"near\",\n                                      TRUE ~ \"far\")) %&gt;% dplyr::select(-group_all)\n\ndf_closecell_distance &lt;- df_closecell_distance %&gt;% left_join(df_new_group, by = \"to_cell\")\ndf_closecell_distance$group_new &lt;- factor(df_closecell_distance$group_new, levels = c(\"near\", \"far\"))\n\npl &lt;- list()\nfor (i in c(\"LAG_3\", \"PD1\", \"Vista\", \"Granzyme_B\")) {\n  pl[[i]] &lt;- ggboxplot(df_closecell_distance, x = \"group_new\", y = i, fill = \"group_new\", outlier.shape = NA,\n               palette = pal_nejm(\"default\")(2), xlab = NULL,size = 0.2, width = .2) + theme_classic() +\n  scale_y_continuous(limits=c(0,1), oob = scales::rescale_none) +\n  stat_summary(fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n               position = position_dodge(.12), size = .025, color = \"black\") +\n  theme(strip.placement  = \"outside\",\n        panel.spacing    = unit(3, \"points\"),\n        strip.background = element_blank(),\n        strip.text       = element_text(face = \"bold\", size = 5),\n        axis.text.x = element_text(size = 6, colour = \"black\"),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.line.x = element_line(size = 0.4, colour = \"black\"),\n        axis.line.y = element_line(size = 0.4, colour = \"black\"),\n        axis.ticks = element_line(colour = \"black\"),\n        legend.position=\"none\") + ylab(glue::glue(\"{i} intensity of CD8+ T\")) +\n  stat_compare_means(aes(label = ..p.signif..), label.x.npc = \"center\", size = 1,\n                     label.y.npc = \"top\", show.legend = T) \nggsave(glue::glue(\"{res_dir}/sfig11d_{i}_intensity_of_CD8T_to_DNmac.pdf\"), pl[[i]], width = 2, height = 3)\n}\npl[[\"LAG_3\"]] | pl[[\"PD1\"]] | pl[[\"Vista\"]] | pl[[\"Granzyme_B\"]]",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>sup_figure11</span>"
    ]
  },
  {
    "objectID": "sup_figure11.html#sup_figure11e",
    "href": "sup_figure11.html#sup_figure11e",
    "title": "sup_figure11",
    "section": "sup_figure11e",
    "text": "sup_figure11e\n\ncd8_prop &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"CD8+ T cell\" & meta_merge %notin% \"MC-tumor-core\") %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% dplyr::mutate(nt = n()) %&gt;%\n  ungroup() %&gt;% dplyr::select(sample_id, meta_merge, nt) %&gt;% distinct() %&gt;% \n  dplyr::filter(sample_id %in% c(sample_chemo_type_list$no_chemo_no_punc, sample_chemo_type_list$chemo))\n\ncols &lt;- c(\"Surgery after chemo\" = \"#0072B5FF\", \"Upfront surgery\" = \"#BC3C29FF\")\n\nfor (i in c(\"LAG_3_pos_CD8T\", \"Vista_pos_CD8T\")) {\n  pos_prop &lt;- coldat %&gt;% dplyr::filter(cell_type_new == \"CD8+ T cell\" & meta_merge %notin% \"MC-tumor-core\") %&gt;%\n  dplyr::filter(cell_id %in% pos_cells10[[i]]) %&gt;%\n  group_by(sample_id, meta_merge) %&gt;% dplyr::mutate(np = n()) %&gt;%\n  ungroup() %&gt;% dplyr::select(sample_id, meta_merge, np) %&gt;% distinct()\n\npos_prop &lt;- left_join(cd8_prop, pos_prop, by = c(\"sample_id\", \"meta_merge\")) %&gt;%\n  replace_na(list(np = 0)) %&gt;% dplyr::mutate(prop = np/nt)\n\npos_prop_chemo &lt;- pos_prop %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list$no_chemo_no_punc ~ \"Upfront surgery\",\n                                  sample_id %in% sample_chemo_type_list$chemo ~ \"Surgery after chemo\")) \n\npos_prop_chemo$meta_merge &lt;- factor(pos_prop_chemo$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\npos_prop_chemo$chemo &lt;- factor(pos_prop_chemo$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\n\nstat_test &lt;- pos_prop_chemo %&gt;%\n  group_by(meta_merge) %&gt;% rstatix::wilcox_test(prop ~ chemo, p.adjust.method = \"none\")\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"meta_merge\", dodge = 0.9, fun = \"median_iqr\")\n\nstat_test$y.position &lt;- 0.5\n\npl[[i]] &lt;- ggplot(pos_prop_chemo,\n            aes(x = meta_merge, y = prop)) +\n  geom_boxplot(aes(fill = chemo), width = .5, #show.legend = FALSE,\n               outlier.shape = NA, linewidth = .2, color = \"black\") +\n  stat_summary(aes(fill = chemo, color = chemo), fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n               position = position_dodge(.5), fatten = .2, size = .2, stroke = .5, linewidth = .2, color = \"black\") +\n  scale_fill_manual(values = cols) +\n  scale_colour_manual(values = cols) +\n  ylab(glue::glue(\"proportion of {i}\")) +\n  scale_y_continuous(limits=c(0, 0.55), oob = scales::rescale_none) +\n  stat_pvalue_manual(stat_test, x = \"meta_merge\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 2) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\", angle = 20),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm'))\n\nggsave(glue::glue(\"{res_dir}/sup_figure11e_{i}_prop_chemo_ornot.pdf\"), pl[[i]], width = 4, height = 4)\n}\npl[[\"LAG_3_pos_CD8T\"]] | pl[[\"Vista_pos_CD8T\"]]",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>sup_figure11</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html",
    "href": "sup_figure12.html",
    "title": "sup_figure12",
    "section": "",
    "text": "sup_figure12a\ngrid.draw.ggsurvplot &lt;- function(x){\n  survminer:::print.ggsurvplot(x, newpage = FALSE)\n}\n\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(meta_merge = case_when(meta_cluster %notin% \n                                         c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-tumor-core\") ~ \"MC-others\",\n                                       TRUE ~ meta_cluster))\n\nepi_total &lt;- coldat %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  dplyr::filter(cell_type_new %in% \"Epithelial tumor cell\") %&gt;%\n  group_by(sample_id) %&gt;% summarise(nt = n())\n\nepi_poscells &lt;- \"PD_L1_pos_Epithelial_tumor\"\n\nepi_pos_os &lt;- coldat %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all) %&gt;%\n  dplyr::filter(cell_id %in% pos_cells10[[epi_poscells]]) %&gt;%\n  group_by(sample_id) %&gt;% summarise(nc = n()) %&gt;%\n  left_join(epi_total, by = \"sample_id\") %&gt;%\n  dplyr::mutate(prop = nc/nt) %&gt;%\n  left_join(sinfo, by = \"sample_id\") %&gt;%\n  dplyr::select(sample_id, prop, os_state, os_month) %&gt;%\n  dplyr::mutate(group = case_when(prop &gt;= quantile(prop, probs = 0.75) ~ \"High PD-L1+ tumor (n = 32)\",\n                                     prop &lt; quantile(prop, probs = 0.75) ~ \"Low PD-L1+ tumor (n = 104)\")) %&gt;%\n  drop_na(os_month)\n\n\n\npsurvx &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ group, data = epi_pos_os),\n                     palette = c(\"High PD-L1+ tumor (n = 32)\" = \"#BC3C29FF\",\n                                 \"Low PD-L1+ tumor (n = 104)\" = \"#0072B5FF\"),\n                     size = 0.5, censor.size = 3, pval.size = 2,\n                     legend.labs = levels(droplevels(as.factor(unlist(epi_pos_os[, \"group\"])))),\n                     pval=T, risk.table = F, xlim = c(0,75))\n\npsurvx$plot &lt;- psurvx$plot +\n  guides(color=guide_legend(title=\"Proportion of PD-L1+ tumor\")) +\n  theme(axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.text = element_text(size = 6),\n        legend.title = element_text(size = 6),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position = c(0.7,0.75),\n        legend.key.size = unit(0.1, 'cm'))\n\nggsave(glue::glue(\"{res_dir}/sfig12a_PD_L1_tumor_prop_os_group43.pdf\"),\n       plot = psurvx, width = 4, height = 4)\n\npsurvx",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html#sup_figure12b",
    "href": "sup_figure12.html#sup_figure12b",
    "title": "sup_figure12",
    "section": "sup_figure12b",
    "text": "sup_figure12b\n\ncoldat &lt;- coldat %&gt;%\n  dplyr::mutate(cell_type11 = case_when(cell_type_new %in%\n                                          c(\"HLA-DR+CD163- mp\", \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163+ mp\") ~ \"Other-mp\",\n                                        cell_type_new %in% c(\"HLA-DR-CD163- mp\") ~ \"DN-mp\",\n                                        TRUE ~ cell_type_new))\n\ndf_closecell_distance_SM &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-stroma-macro\")\ndf_closecell_distance_TB &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-tumor-frontline\")\ndf_closecell_distance_othersnoBT &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\")) %&gt;% do.call(\"rbind\", .) %&gt;% as_tibble() %&gt;% dplyr::mutate(meta_merge = \"MC-others\")\n\ndf_closecell_distance &lt;- rbind(df_closecell_distance_SM, df_closecell_distance_TB, df_closecell_distance_othersnoBT) %&gt;% as_tibble()\ndf_closecell_distance &lt;- df_closecell_distance %&gt;%\n  inner_join(coldat, by = c(\"from_cell\" = \"cell_id\", \"meta_merge\" = \"meta_merge\")) %&gt;%\n  dplyr::filter(sample_id %in% sample_chemo_type_list$no_chemo_all)\n\ndf_closecell_distance$meta_merge &lt;- factor(df_closecell_distance$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\") %&gt;% rev())\n\np &lt;- ggdensity(df_closecell_distance, x = \"distance\",\n               add = \"mean\",\n               color = \"meta_merge\",\n               palette = meta_merge_cols) +\n  scale_x_continuous(limits=c(0,200), oob = scales::rescale_none) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 6),\n        axis.title.x = element_text(size = 6),\n        axis.text.x = element_text(size = 6),\n        legend.position = \"none\")\nggsave(glue::glue(\"{res_dir}/sfig12b_tumor_to_Macrophage_other_minDis_meta3_compare_density.pdf\"), p, width = 3.5, height = 2.9)\np",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html#sup_figure12c",
    "href": "sup_figure12.html#sup_figure12c",
    "title": "sup_figure12",
    "section": "sup_figure12c",
    "text": "sup_figure12c\n\nmac_colors &lt;- c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\")\n\nmeta_names &lt;- c(\"TB_\" = \"MC-tumor-frontline\", \"SM_\" = \"MC-stroma-Mp\", \"OthersnoBT_\" = \"MC-others\")\n\npl &lt;- list()\nfor (r in c(\"SM_\", \"OthersnoBT_\")) {\n  df_dnmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/{r}list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\")) %&gt;%\n    do.call(\"rbind\", .) %&gt;% as_tibble()\n  df_othmac &lt;- readr::read_rds(glue::glue(\"{dat_dir}/distance_rds/{r}list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\")) %&gt;%\n    do.call(\"rbind\", .) %&gt;% as_tibble()\n  \n  df_mac &lt;- rbind(df_dnmac, df_othmac) %&gt;% as_tibble()\n  df_mac &lt;- df_mac %&gt;%\n    inner_join(coldat, by = c(\"to_cell\" = \"cell_id\")) %&gt;%\n    dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                   sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n    dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                    TRUE ~ \"Upfront surgery\"))\n  \n  #sample\n  df_mac_mean &lt;- df_mac %&gt;% group_by(sample_id, cell_type11, chemo) %&gt;%\n    dplyr::summarise(mean_dis = mean(distance)) %&gt;%\n    group_by(sample_id, chemo) %&gt;% dplyr::mutate(nc = n()) %&gt;%\n    ungroup() %&gt;% dplyr::filter(nc &gt; 1)\n  \n  df_mac_mean$cell_type11 &lt;- factor(df_mac_mean$cell_type11, levels = c(\"DN-mp\", \"Other-mp\"))\n  df_mac_mean$chemo &lt;- factor(df_mac_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n  \n  \n  stat_test &lt;- df_mac_mean %&gt;%\n    group_by(chemo) %&gt;% rstatix::wilcox_test(mean_dis ~ cell_type11, paired = T)\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                             p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                             p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                             p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                             p &lt; 0.0001 ~ \"****\",\n                                                             TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    rstatix::add_xy_position(x = \"chemo\", dodge = 0.9, fun = \"median_iqr\")\n  stat_test$y.position &lt;- 12\n  \n  pl[[r]] &lt;- ggplot(df_mac_mean,\n               aes(x = chemo, y = log2(mean_dis))) +\n    introdataviz::geom_split_violin(aes(x = chemo, y = log2(mean_dis), color = cell_type11),\n                                    trim = FALSE, linewidth = .3) +\n    geom_boxplot(aes(fill = cell_type11), width = .15, show.legend = FALSE,\n                 outlier.size = .2, linewidth = .2, color = \"black\") +\n    scale_fill_manual(values = mac_colors, name = glue::glue(\"{meta_names[r]}\")) +\n    scale_colour_manual(values = mac_colors, name = glue::glue(\"{meta_names[r]}\")) +\n    labs(y = \"Log2(mean distance) of tumor to Mp\") +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\"),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"top\",\n          legend.text = element_text(size = 4),\n          legend.title = element_text(size = 4),\n          legend.key.size = unit(0.1, 'cm')) +\n    stat_pvalue_manual(stat_test, x = \"chemo\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5)\n  ggsave(glue::glue(\"{res_dir}/sfig12c_tumor_to_mac_dis_{r}cacb_persam_paired.pdf\"), pl[[r]], width = 3, height = 3)\n}\n\npl[[1]] | pl[[2]]",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html#sup_figure12d",
    "href": "sup_figure12.html#sup_figure12d",
    "title": "sup_figure12",
    "section": "sup_figure12d",
    "text": "sup_figure12d\n\ncld_cacb &lt;- coldat %&gt;% dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                                   sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Surgery after chemo\",\n                                  TRUE ~ \"Upfront surgery\")) %&gt;%\n  dplyr::select(sample_id, cell_id, cell_type11, chemo, meta_merge)\n\n#MC-tumor-frontline\nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/TB_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nTB_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\n#MC-stroma-macro\nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/SM_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nSM_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\n#MC-others\nlist_closecell_distance_macDN &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\"))\nlist_closecell_distance_macOth &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/OthersnoBT_list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_other.rds\"))\ndf_closecell_distance &lt;- do.call(\"rbind\", c(list_closecell_distance_macDN, list_closecell_distance_macOth)) %&gt;% as_tibble()\nOthenoBT_dist &lt;- df_closecell_distance %&gt;%\n  inner_join(cld_cacb, by = c(\"to_cell\" = \"cell_id\"))\n\ndf_dist &lt;- rbind(TB_dist, SM_dist, OthenoBT_dist) \n\n#per sample\ndf_dist_mean &lt;- df_dist %&gt;% group_by(sample_id, cell_type11, chemo, meta_merge) %&gt;%\n  dplyr::summarise(dis_mean = mean(distance)) %&gt;% ungroup()\n\ndf_dist_mean$meta_merge &lt;- factor(df_dist_mean$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\ndf_dist_mean$chemo &lt;- factor(df_dist_mean$chemo, levels = c(\"Upfront surgery\", \"Surgery after chemo\"))\n\ncols &lt;- c(\"Upfront surgery\" = \"#BC3C29FF\", \"Surgery after chemo\" = \"#0072B5FF\")\n\npl &lt;- list()\nfor (i in c(\"DN-mp\", \"Other-mp\")) {\n  dat &lt;- df_dist_mean %&gt;% dplyr::filter(cell_type11 %in% i)\n  stat_test &lt;- dat %&gt;%\n    group_by(meta_merge) %&gt;% rstatix::wilcox_test(dis_mean ~ chemo, p.adjust.method = \"none\")\n  stat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                             p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                             p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                             p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                             p &lt; 0.0001 ~ \"****\",\n                                                             TRUE ~ \"ns\"))\n  stat_test &lt;- stat_test %&gt;%\n    rstatix::add_xy_position(x = \"meta_merge\", dodge = 0.9, fun = \"median_iqr\")\n  stat_test$y.position &lt;- 12\n  \n  pl[[i]] &lt;- ggplot(dat, aes(x = meta_merge, y = log2(dis_mean))) +\n    introdataviz::geom_split_violin(aes(x = meta_merge, y = log2(dis_mean), color = chemo),\n                                    trim = FALSE, linewidth = .3) +\n    geom_boxplot(aes(fill = chemo), width = .2, show.legend = FALSE, linetype = 2,\n                 outlier.size = .2, linewidth = .2, color = \"black\") +\n    scale_fill_manual(values = cols) +\n    scale_colour_manual(values = cols) +\n    labs(y = glue::glue(\"Log2(mean distance) of tumor to {i}\")) +\n    theme_bmbdc() +\n    theme(title = element_text(size = 6),\n          axis.ticks = element_line(colour = \"black\"),\n          axis.title.y = element_text(size = 6),\n          axis.text.y = element_text(size = 6, colour = \"black\"),\n          axis.title.x = element_blank(),\n          axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n          axis.line.x = element_line(linewidth = 0.4),\n          axis.line.y = element_line(linewidth = 0.4),\n          legend.position=\"top\",\n          legend.text = element_text(size = 4),\n          legend.title = element_blank(),\n          legend.key.size = unit(0.1, 'cm')) +\n    stat_pvalue_manual(stat_test, x = \"meta_merge\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5)\n  ggsave(glue::glue(\"{res_dir}/sfig12d_tumor_to_{i}_dis_3metas_chemo_persam.pdf\"), pl[[i]], width = 3, height = 3)\n}\n\npl[[1]] | pl[[2]]",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html#sup_figure12e",
    "href": "sup_figure12.html#sup_figure12e",
    "title": "sup_figure12",
    "section": "sup_figure12e",
    "text": "sup_figure12e\n\n#before chemo surgery sample\ncld_nochemo &lt;- coldat %&gt;% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_no_punc\"]])\n\nos_col &lt;- c(\"near\" = \"#BC3C29FF\", \"far\" = \"#0072B5FF\")\nmeta_name &lt;- c(\"TB_\" = \"MC-tumor-frontline\", \"SM_\" = \"MC-stroma-Mp\", \"OthersnoBT_\" = \"MC-others\")\n\npl &lt;- list()\nfor (r in c(\"TB_\", \"SM_\", \"OthersnoBT_\")) {\n  list_closecell_distance &lt;- read_rds(glue::glue(\"{dat_dir}/distance_rds/{r}list_closecell_dist_k1_Epithelial_tumor_to_Macrophage_HLADRn_CD163n.rds\"))\n\n  dnmac_tumor_df &lt;-  do.call(\"rbind\", list_closecell_distance) %&gt;% as_tibble() %&gt;%\n    inner_join(cld_nochemo, by = c(\"from_cell\" = \"cell_id\")) %&gt;%\n    dplyr::select(from_cell, to_cell, distance, sample_id, sample_tiff_id)\n\n  mean_dis_df &lt;- dnmac_tumor_df %&gt;% group_by(sample_id) %&gt;%\n    dplyr::summarise(mean_dis = mean(distance)) %&gt;% ungroup()\n\n  mean_dis_df &lt;- mean_dis_df %&gt;% left_join(sinfo, by = \"sample_id\") %&gt;%\n    dplyr::select(sample_id, mean_dis, pfs_state, pfs_month, os_state, os_month)\n\n  mean_dis_os &lt;- mean_dis_df %&gt;%\n    dplyr::mutate(mean_41 = case_when(mean_dis &gt;= quantile(mean_dis, probs = 0.25) ~ \"far\", \n                                      mean_dis &lt; quantile(mean_dis, probs = 0.25) ~ \"near\"))\n\n  mean_dis_os_tmp &lt;- mean_dis_os %&gt;% dplyr::select(all_of(c(\"sample_id\", \"os_state\", \"os_month\", \"mean_41\"))) %&gt;% \n    drop_na(os_month)\n\n  pl[[r]] &lt;- ggsurvplot(surv_fit(Surv(os_month, os_state) ~ mean_41, data = mean_dis_os_tmp), palette = os_col,\n                         size = 0.5, censor.size = 3, pval.size = 2,\n                         legend.labs = levels(droplevels(as.factor(unlist(mean_dis_os_tmp[, \"mean_41\"])))),\n                         pval=T, risk.table = F, xlim = c(0,75))\n    psurvx$plot &lt;- psurvx$plot +\n      guides(color=guide_legend(title=meta_name[r])) +\n      theme(axis.title.y = element_text(size = 6),\n            axis.text.y = element_text(size = 6),\n            axis.title.x = element_text(size = 6),\n            axis.text.x = element_text(size = 6),\n            legend.text = element_text(size = 6),\n            legend.title = element_text(size = 6),\n            legend.position = c(0.7,0.75),\n            legend.key.size = unit(0.1, 'cm'))\n    ggsave(glue::glue(\"{res_dir}/sfig12e_Tumor_to_DN_macrophage_dis_{r}mean_41_os.pdf\"),\n           plot = pl[[r]], width = 4, height = 4)\n}\npl[[1]]$plot | pl[[2]]$plot | pl[[3]]$plot",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure12.html#sup_figure12f",
    "href": "sup_figure12.html#sup_figure12f",
    "title": "sup_figure12",
    "section": "sup_figure12f",
    "text": "sup_figure12f\n\ncld_tumor &lt;- coldat %&gt;% dplyr::filter(cell_type_new %in% c(\"Epithelial tumor cell\") & meta_merge %notin% \"MC-tumor-core\")\n\ncomcc_t &lt;- as.data.frame(t(assay_cc))\ncomcc_t$cell_id &lt;- rownames(comcc_t)\ncld_tumor &lt;- left_join(cld_tumor, comcc_t, by = \"cell_id\")\n\nchemo_colors &lt;- c(\"Upfront surgery\" = \"#BC3C29FF\", \"Upfront after chemo\" = \"#0072B5FF\")\n\ni = \"PD_L1\"\n\n#before chemo surgery only\ncld_tumor_chemo &lt;- cld_tumor %&gt;% dplyr::filter(sample_id %in% c(sample_chemo_type_list[[\"chemo\"]],\n                                                                sample_chemo_type_list[[\"no_chemo_no_punc\"]])) %&gt;%\n  dplyr::mutate(chemo = case_when(sample_id %in% sample_chemo_type_list[[\"chemo\"]] ~ \"Upfront after chemo\",\n                                  TRUE ~ \"Upfront surgery\")) %&gt;% distinct() %&gt;%\n  dplyr::select(sample_id, cell_id, cell_type_new, meta_merge, chemo, all_of(i))\n\ncld_tumor_ins_meta &lt;- cld_tumor_chemo %&gt;%\n  group_by(sample_id, meta_merge, chemo) %&gt;% dplyr::summarise(mean_ins = mean(.data[[i]])) %&gt;%\n  ungroup() \n\ncld_tumor_ins_meta$chemo &lt;- factor(cld_tumor_ins_meta$chemo, levels = c(\"Upfront surgery\", \"Upfront after chemo\"))\ncld_tumor_ins_meta$meta_merge &lt;- factor(cld_tumor_ins_meta$meta_merge, levels = c(\"MC-tumor-frontline\", \"MC-stroma-macro\", \"MC-others\"))\n\nstat_test &lt;- cld_tumor_ins_meta %&gt;%\n  group_by(meta_merge) %&gt;% rstatix::wilcox_test(mean_ins ~ chemo, paired = F)\nstat_test &lt;- stat_test %&gt;% mutate(p.adj.signif = case_when(p &gt;= 0.05 ~ \"ns\",\n                                                           p &gt;= 0.01 & p &lt; 0.05 ~ \"*\",\n                                                           p &gt;= 0.001 & p &lt; 0.01 ~ \"**\",\n                                                           p &gt;= 0.0001 & p &lt; 0.001 ~ \"***\",\n                                                           p &lt; 0.0001 ~ \"****\",\n                                                           TRUE ~ \"ns\"))\nstat_test &lt;- stat_test %&gt;%\n  rstatix::add_xy_position(x = \"chemo\", dodge = 0.9, fun = \"median_iqr\")\nstat_test$y.position &lt;- 1.1\n\np &lt;- ggplot(cld_tumor_ins_meta,\n            aes(x = meta_merge, y = mean_ins)) +\n  introdataviz::geom_split_violin(aes(x = meta_merge, y = mean_ins, colour = chemo), #fill = chemo,\n                                  trim = F, linewidth = .3) +\n  geom_boxplot(aes(fill = chemo), width = .2, show.legend = FALSE,\n               outlier.size = .01, linewidth = .2, color = \"black\") +\n  # stat_summary(fun.data = \"mean_se\", geom = \"pointrange\", show.legend = F,\n  #              position = position_dodge(.12), size = .025, color = \"black\") +\n  scale_fill_manual(values = chemo_colors) +\n  scale_colour_manual(values = chemo_colors) +\n  labs(y = glue::glue(\"Mean intensity of {i}\")) +\n  stat_pvalue_manual(stat_test, x = \"meta_merge\", tip.length = 0.01, hide.ns = F, label = \"p.adj.signif\", size = 1.5) +\n  theme_bmbdc() +\n  theme(title = element_text(size = 6),\n        axis.ticks = element_line(colour = \"black\"),\n        axis.title.y = element_text(size = 6),\n        axis.text.y = element_text(size = 6, colour = \"black\"),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 6, colour = \"black\", angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"top\",\n        legend.text = element_text(size = 4),\n        legend.title = element_text(size = 4),\n        legend.key.size = unit(0.1, 'cm'))\nggsave(glue::glue(\"{res_dir}/sfig12f_tumor_{i}_intensity_meta3_chemo_surgery.pdf\"), p, width = 3, height = 3)\np",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>sup_figure12</span>"
    ]
  },
  {
    "objectID": "sup_figure13.html",
    "href": "sup_figure13.html",
    "title": "sup_figure13",
    "section": "",
    "text": "sup_figure13a\nset.seed(2024)\nids &lt;- sample(1:dim(sce_all)[2], 10000)\nsesub &lt;- sce_all[,ids]\n\np &lt;- DimPlot(sesub, reduction = \"tsne\", group.by = \"cell_types2\",\n             label = F, cols = scrna_cols, combine = F, pt.size = .001)\np &lt;- p[[1]] +\n  guides(color = guide_legend(keywidth = unit(0, \"cm\"),\n                             keyheight = unit(0, \"cm\"),\n         nrow = 3, byrow = T)) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        plot.margin = margin(0,0,0,0),\n        plot.background = element_blank(),\n        legend.margin = margin(0,0,0,0),\n        legend.box.margin = margin(0,0,0,0),\n        legend.spacing.y = unit(0, \"mm\"),\n        legend.spacing.x = unit(0, \"mm\"),\n        legend.position = \"top\",\n        legend.text = element_text(size = 6, margin = margin(-.5,-5,0,1)))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>sup_figure13</span>"
    ]
  },
  {
    "objectID": "sup_figure13.html#sup_figure13b",
    "href": "sup_figure13.html#sup_figure13b",
    "title": "sup_figure13",
    "section": "sup_figure13b",
    "text": "sup_figure13b\n\nIdents(sce_all) &lt;- \"cell_types2\"\n\np &lt;- DotPlot(sce_all, features = c('EPCAM', 'KRT19', 'CPA1', 'VWF', 'ACTA2','PTPRC',\n                                             'CD3D', 'CD4', 'CD8A', 'CD79A', 'MS4A1','XBP1',\n                                             'CD68', 'HLA-DRA', 'HLA-DRB5', 'CD163', 'CD14',\n                                             'FCGR3A', 'FCGR3B', 'CEACAM3', 'CD1C',\n                                             'BATF3', 'TPSAB1','KIT'), #scale = F,\n             dot.scale = 3) + RotatedAxis() + theme_bmbdc() +\n  scale_colour_gradientn(colours = c(\"grey\", \"#ffe5e5\", \"#ff7f7f\", \"#ff6666\", \"#ff0000\"),\n                         values = scales::rescale(x = c(0, 1, 2, 3, 3.5), from = c(0, 3.5))) +\n  guides(size = guide_legend(title = \"Percent Expressed\", keywidth = unit(1, \"cm\"),\n                             keyheight = unit(.2, \"cm\"), nrow = 2, byrow = T)) +\n  guides(color = guide_colorbar(title = \"Expression\", barwidth = unit(1, \"cm\"), barheight = unit(.2, \"cm\"))) +\n  theme(axis.text = element_text(size = 6),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        plot.margin = margin(0,0,0,0),\n        plot.background = element_blank(),\n        legend.box.margin = margin(0,0,0,0),\n        legend.spacing.y = unit(0, \"mm\"),\n        legend.spacing.x = unit(0, \"mm\"),\n        legend.key.size = unit(.2, 'cm'),\n        axis.text.x = element_text(angle = 25, vjust = 1, hjust = 1),\n        #axis.text.y = element_text(angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.margin = margin(0,0,0,0),\n        legend.title = element_text(size=6, margin = margin(-.5,-5,0,1)),\n        legend.text = element_text(size=6, margin = margin(-.5,-5,0,1)),\n        legend.position = \"top\")\n\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>sup_figure13</span>"
    ]
  },
  {
    "objectID": "sup_figure13.html#sup_figure13c",
    "href": "sup_figure13.html#sup_figure13c",
    "title": "sup_figure13",
    "section": "sup_figure13c",
    "text": "sup_figure13c\n\nsmplec_col &lt;- c(\"#5D9D58\", \"#7E9A51\", \"#a9d169\", \"#BBA082\",\n                         \"#BEA278\", \"#FFA428\", \"#F4C321\", \"#db9721\",\n                         \"#ecd400\", \"#A56F95\", \"#BAA4CB\", \"#BCBDDC\",\n                         \"#DDBE91\", \"#404BA5\", \"#568AC2\", \"#86BBDA\",\n                         \"#B9E0EE\", \"#E6939F\", \"#B61932\", \"#F98354\",\n                         \"#dbdb8d\", \"#74DA00\", \"#49BADB\", \"#d9d9d9\")\n                         \nIdents(sce_mac) &lt;- \"cell_types3\"\nsce_mac$orig.ident &lt;- str_replace_all(sce_mac$orig.ident, \"DAC_TISSUE_\", \"\")\n\np1 &lt;- DimPlot(sce_mac, reduction = \"tsne\", group.by = \"orig.ident\", pt.size = .001,\n             label = F, cols = smplec_col, combine = F)\np1 &lt;- p1[[1]] +\n  guides(color = guide_legend(keywidth = unit(0, \"cm\"),\n                              keyheight = unit(0, \"cm\"),\n                              nrow = 2, byrow = T)) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        plot.background = element_blank(),\n        plot.margin = margin(1,1,1,1),\n        legend.margin = margin(0,0,0,0),\n        legend.box.margin = margin(0,0,0,0),\n        legend.spacing.y = unit(0, \"mm\"),\n        legend.spacing.x = unit(0, \"mm\"),\n        legend.position = \"top\",\n        legend.text = element_text(size = 6, margin = margin(-2,-5,0,1)))\n\n\np2 &lt;- DimPlot(sce_mac, reduction = \"tsne\", group.by = \"cell_types3\", pt.size = .001,\n             label = F, cols = scmac_type, combine = F)\np2 &lt;- p2[[1]] +\n  guides(color = guide_legend(keywidth = unit(0, \"cm\"),\n                              keyheight = unit(0, \"cm\"),\n         nrow = 2, byrow = T)) +\n  theme(plot.title = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_text(size = 8),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.spacing = unit(0, \"mm\"),\n        plot.background = element_blank(),\n        plot.margin = margin(1,1,1,1),\n        legend.margin = margin(0,0,0,0),\n        legend.box.margin = margin(0,0,0,0),\n        legend.spacing.y = unit(0, \"mm\"),\n        legend.spacing.x = unit(0, \"mm\"),\n        legend.position = \"top\",\n        legend.text = element_text(size = 6, margin = margin(-4,-5,0,1)))\np1 | p2",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>sup_figure13</span>"
    ]
  },
  {
    "objectID": "sup_figure13.html#sup_figure13d",
    "href": "sup_figure13.html#sup_figure13d",
    "title": "sup_figure13",
    "section": "sup_figure13d",
    "text": "sup_figure13d\n\npl &lt;- list()\nfor (i in c(\"CD68\", \"SPP1\", \"C1QC\", \"FCN1\", \"CCL18\", \"MT1G\")) {\n  #pdf(glue::glue(\"{res_dir}/sfig13d_sce_mac_{i}_exp_featureplot.pdf\"), width = 2.5, height = 2)\n  pl[[i]] &lt;- FeaturePlot(sce_mac, reduction = \"tsne\", features = i,\n                   order = T, pt.size = .001, combine = F)\n  pl[[i]] &lt;- pl[[i]][[1]] +\n    guides(color = guide_colourbar(barwidth = unit(.1, \"cm\"),\n                                   barheight = unit(.6, \"cm\"),\n                                   title = i,\n                                   title.position = \"top\")) +\n    theme(plot.title = element_blank(),\n          axis.text = element_blank(),\n          axis.title = element_text(size = 8),\n          axis.line = element_blank(),\n          axis.ticks = element_blank(),\n          panel.spacing = unit(0, \"mm\"),\n          panel.border = element_rect(fill = NA, colour = NA),\n          plot.background = element_rect(fill = NA, colour = NA),\n          plot.margin = margin(0,0,0,0),\n          legend.position = c(0,.8),\n          legend.margin = margin(0,0,0,0),\n          legend.title = element_text(size = 6),\n          legend.text = element_text(size = 6))\n  #print(pl[[i]])\n  #dev.off()\n}\n(pl[[1]] | pl[[2]])/(pl[[3]] | pl[[4]])/(pl[[5]] | pl[[6]])",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>sup_figure13</span>"
    ]
  },
  {
    "objectID": "sup_figure13.html#sup_figure13e",
    "href": "sup_figure13.html#sup_figure13e",
    "title": "sup_figure13",
    "section": "sup_figure13e",
    "text": "sup_figure13e\n\n#monocle2\n#pdf(glue::glue(\"{res_dir}/sfig13e1_monocle2.pdf\"),width = 3,height = 3)\np1 &lt;- plot_cell_trajectory(monocle2_obj, color_by=\"Pseudotime\", cell_size=.1,\n                          show_backbone=TRUE, cell_name_size = .5, state_number_size = 1) +\n  theme(axis.text = element_text(size = 6, colour = \"black\"),\n        axis.title = element_text(size = 8, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4, colour = \"black\"),\n        axis.line.y = element_line(linewidth = 0.4, colour = \"black\"),\n        legend.key.height = unit(.2, \"cm\"),\n        legend.key.width = unit(.15, \"cm\"),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n#pdf(glue::glue(\"{res_dir}/sfig13e2_monocle2.pdf\"),width = 3, height = 3)\np2 &lt;- plot_cell_trajectory(monocle2_obj, color_by=\"cell_types3\", cell_size=.1,\n                          show_backbone=TRUE) +\n  scale_color_manual(values = scmac_type) + theme(legend.position = \"right\") +\n  theme(axis.text = element_text(size = 6, colour = \"black\"),\n        axis.title = element_text(size = 8, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4, colour = \"black\"),\n        axis.line.y = element_line(linewidth = 0.4, colour = \"black\"),\n        legend.key.height = unit(.2, \"cm\"),\n        legend.key.width = unit(.15, \"cm\"),\n        legend.position = \"top\",\n        legend.margin = margin(0,0,0,0),\n        legend.box.margin = margin(0,0,0,0),\n        legend.spacing.y = unit(0, \"mm\"),\n        legend.spacing.x = unit(0, \"mm\"),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6, margin = margin(-5,-5,0,1)))\n\n#pdf(glue::glue(\"{res_dir}/sfig13e3_monocle2.pdf\"),width = 8, height = 8)\np3 &lt;- plot_cell_trajectory(monocle2_obj, cell_size=.1, color_by = \"cell_types3\") +\n  facet_wrap(\"~cell_types3\", nrow = 3) +\n  scale_color_manual(values = scmac_type) +\n  theme(axis.text = element_text(size = 6, colour = \"black\"),\n        axis.title = element_text(size = 8, colour = \"black\"),\n        axis.line.x = element_line(linewidth = 0.4, colour = \"black\"),\n        axis.line.y = element_line(linewidth = 0.4, colour = \"black\"),\n        legend.position = \"none\")\n\np &lt;- (p1|p2)/(p3) + plot_layout(heights = c(0.8, 3))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>sup_figure13</span>"
    ]
  },
  {
    "objectID": "sup_figure14.html",
    "href": "sup_figure14.html",
    "title": "sup_figure14",
    "section": "",
    "text": "sup_figure14b\npl &lt;- list()\nfor (i in c(\"S100A9\", \"RPL17\", \"DUSP6\", \"CDC42EP3\")) {\n  pdf(glue::glue(\"{res_dir}/sfig14b_sce_mac_{i}_exp_featureplot.pdf\"), width = 2.5, height = 2)\n  pl[[i]] &lt;- FeaturePlot(sce_mac, reduction = \"tsne\", features = i,\n                   order = F, pt.size = .001, combine = F)\n  pl[[i]] &lt;- pl[[i]][[1]] +\n    guides(color = guide_colourbar(barwidth = unit(.1, \"cm\"),\n                                   barheight = unit(.6, \"cm\"),\n                                   title = i,\n                                   title.position = \"top\")) +\n    theme(plot.title = element_blank(),\n          axis.text = element_blank(),\n          axis.title = element_text(size = 8),\n          axis.line = element_blank(),\n          axis.ticks = element_blank(),\n          panel.spacing = unit(0, \"mm\"),\n          panel.border = element_rect(fill = NA, colour = NA),\n          plot.background = element_rect(fill = NA, colour = NA),\n          plot.margin = margin(0,0,0,0),\n          legend.position = c(0,.8),\n          legend.margin = margin(0,0,0,0),\n          legend.title = element_text(size = 6),\n          legend.text = element_text(size = 6))\n  print(pl[[i]])\n  dev.off()\n}\npl[[1]] | pl[[2]] | pl[[3]] | pl[[4]]",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>sup_figure14</span>"
    ]
  },
  {
    "objectID": "sup_figure14.html#sup_figure14c",
    "href": "sup_figure14.html#sup_figure14c",
    "title": "sup_figure14",
    "section": "sup_figure14c",
    "text": "sup_figure14c\n\nsce_mac$cell_types2 &lt;- factor(sce_mac$cell_types2, levels = c(\"DN-mp\", \"Other-mp\"))\nIdents(sce_mac) &lt;- \"cell_types2\"\n#pdf(glue::glue(\"{res_dir}/sfig14c_sce_mac_S100A9_vlnplot.pdf\"), width = 3, height = 3)\np &lt;- VlnPlot(sce_mac, features = \"S100A9\", pt.size = 0,\n             cols = c(\"DN-mp\" = \"#BC3C29FF\", \"Other-mp\" = \"#0072B5FF\"), combine = F)\np &lt;- p[[1]] + ylab(\"S100A9\") +\n  theme(plot.title = element_blank(),\n        axis.text = element_text(size = 6),\n        axis.title.y = element_text(size = 8, margin = margin(0,0,0,0)),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.text=element_text(size = 4),\n        legend.key.size = unit(.2, \"cm\"))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>sup_figure14</span>"
    ]
  },
  {
    "objectID": "sup_figure14.html#sup_figure14d",
    "href": "sup_figure14.html#sup_figure14d",
    "title": "sup_figure14",
    "section": "sup_figure14d",
    "text": "sup_figure14d\n\nspatial_mac_tumor$DN_any &lt;- factor(spatial_mac_tumor$DN_any, levels = c(\"DN-mac enriched\", \"Other-mac enriched\"))\nIdents(spatial_mac_tumor) &lt;- \"DN_any\"\n\n#pdf(glue::glue(\"{res_dir}/sfig14d_seu_mactumor_s100a9.pdf\"), width = 3, height = 3)\np &lt;- VlnPlot(spatial_mac_tumor, features = \"S100A9\", pt.size = 0, combine = F,\n             cols = c(\"DN-mac enriched\" = \"#BC3C29FF\", \"Other-mac enriched\" = \"#0072B5FF\"))\np &lt;- p[[1]] + ylab(\"S100A9\") +\n  theme(plot.title = element_blank(),\n        axis.text = element_text(size = 6),\n        axis.title.y = element_text(size = 8),\n        axis.title.x = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 10),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.text=element_text(size = 4),\n        legend.key.size = unit(.2, \"cm\"))\nprint(p)",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>sup_figure14</span>"
    ]
  },
  {
    "objectID": "sup_figure14.html#sup_figure14e",
    "href": "sup_figure14.html#sup_figure14e",
    "title": "sup_figure14",
    "section": "sup_figure14e",
    "text": "sup_figure14e\n\ndf_k_exp &lt;- read_csv(glue::glue(\"{dat_dir}/df_knn_exp.csv\")) \n\ndf_k_exp_dnm &lt;- df_k_exp %&gt;%\n  dplyr::mutate(DN_any = case_when(CD68 &gt; 0 & if_any(contains(\"HLA\"), ~ .x == 0) & \n                                     CD163 == 0 ~ \"DN-Mp enriched\",\n                                   CD68 == 0 ~ \"NoMp_enriched\",\n                                   TRUE ~ \"Other-Mp enriched\"))\n\ndf_spotmac &lt;- df_k_exp_dnm %&gt;% dplyr::filter(DN_any != \"NoMp_enriched\")\n\ndf_spotmac_mean &lt;- df_spotmac %&gt;% group_by(k, DN_any) %&gt;%\n  dplyr::transmute(across(CD68:S100A9, mean, .names = \"mean_{.col}\")) %&gt;%\n  ungroup() %&gt;% distinct() %&gt;% pivot_longer(cols = mean_CD68:mean_S100A9, names_to = \"gene\", values_to = \"exp\")\n\np &lt;- ggplot(df_spotmac_mean[df_spotmac_mean$gene == \"mean_S100A9\" & df_spotmac_mean$k != 0,],\n            aes(x=k, y=exp, color=DN_any, group = DN_any)) +\n  geom_point() + geom_line() + xlab(\"k\") + ylab(glue::glue(\"Mean expression of S100A9\")) +\n  scale_color_manual(values=c(\"DN-Mp enriched\" = \"#BC3C29FF\", \"Other-Mp enriched\" = \"#0072B5FF\")) +\n  xlab(\"Near&lt;- Neighboring spots of tumor spots -&gt;Far\") +\n  theme_bmbdc() +\n  theme(plot.title = element_blank(),\n        plot.subtitle = element_blank(),\n        text = element_text(size = 6),\n        axis.text = element_text(size = 6),\n        axis.title.x = element_text(size = 8),\n        axis.title.y = element_text(size = 8),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.key.size = unit(.2, 'cm'),\n        legend.title = element_blank(),\n        legend.text = element_text(size=6),\n        legend.position = \"top\")\nggsave(glue::glue(\"{res_dir}/sfig14e_visium_spotmac_mean_s100a9_k24610.pdf\"), p, width = 3, height = 3.3)\np",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>sup_figure14</span>"
    ]
  }
]