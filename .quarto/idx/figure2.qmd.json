{"title":"figure2","markdown":{"headingText":"figure2","containsRefs":false,"markdown":"\n```{r figure2}\n#| echo: true\n#| warning: false\n#| message: false \npkgs <- c(\"fs\", \"futile.logger\", \"configr\", \"stringr\", \"ggpubr\", \"ggthemes\",\n          \"SingleCellExperiment\", \"RColorBrewer\", \"vroom\", \"jhtools\", \"glue\",\n          \"jhuanglabHyperion\", \"openxlsx\", \"ggsci\", \"ggraph\", \"patchwork\",\n          \"cowplot\", \"tidyverse\", \"dplyr\", \"rstatix\", \"magrittr\", \"igraph\",\n          \"tidygraph\", \"ggtree\", \"aplot\", \"circlize\")\nsuppressMessages(conflicted::conflict_scout())\nfor (pkg in pkgs){\n  suppressPackageStartupMessages(library(pkg, character.only = T))\n}\nres_dir <- \"./results/figure2\" %>% checkdir\ndat_dir <- \"./data\" %>% checkdir\nconfig_dir <- \"./config\" %>% checkdir\n\n#colors config\nconfig_fn <- glue::glue(\"{config_dir}/configs.yaml\")\nstype3_cols <- jhtools::show_me_the_colors(config_fn, \"stype3\")\nctype10_cols <- jhtools::show_me_the_colors(config_fn, \"cell_type_new\")\nmeta_cols <- jhtools::show_me_the_colors(config_fn, \"meta_color\")\n\n#read in coldata\ncoldat <- readr::read_csv(glue::glue(\"{dat_dir}/sce_coldata.csv\"))\nmeta_clu <- readxl::read_excel(glue::glue(\"{dat_dir}/meta_clu.xlsx\")) %>% dplyr::select(-9)\n```\n\n## figure2b\n\n```{r figure2b}\n#| echo: true\n#| warning: false\n#| message: false \n#| label: figure2b\n#| fig-width: 9\n#| fig-height: 7\n\n# define cell groups\nepiendo_cells <- c(\"Epithelial tumor cell\", \"Normal epithelial cell\", \"Endothelial cell\")\nimmu_stroma_cells <- c(\"DC\", \"MDSC\", \"Monocyte\", \"B cell\", \"CD8+ T cell\", \"CD4+ T cell\",\n                 \"HLA-DR-CD163- mp\", \"HLA-DR-CD163+ mp\", \"HLA-DR+CD163- mp\",\n                   \"HLA-DR+CD163+ mp\", \"HLA-DR-CD163- MMT\", \"HLA-DR+CD163- MMT\", \n                 \"HLA-DR+CD163+ MMT\", \"PSC\", \"myoCAF\", \"Col1+ CAF\")\nother_cells <- c(\"CCR6+ cell\", \"B7-H4+ cell\", \"Ki67+ cell\", \"Vim+ cell\", \"Unknown\")\n\ngrouping_celltype <- data.frame(cell_type_new = c(epiendo_cells, immu_stroma_cells, other_cells),\n                                meta_celltype = c(rep(\"Epi-endo\", 3), rep(\"Immune-stroma\", 16), rep(\"Others\", 5)))\n\n# calculate fraction data\ncol_frac <- coldat %>% group_by(cluster_names, cell_type_new) %>% dplyr::mutate(cell_clu_count = n()) %>%\n  group_by(cluster_names) %>% dplyr::mutate(all_count = n(), frac = cell_clu_count / all_count) %>%\n  group_by(cell_type_new) %>% dplyr::mutate(all_c_count = n(), frac2 = cell_clu_count / all_c_count)\ncol_frac_s <- col_frac %>% select(cluster_names, cell_type_new, frac2, frac) %>%\n  na.omit() %>% unique() %>% as.data.frame()\ncol_frac_wide <- col_frac_s %>% select(-frac) %>%\n  pivot_wider(names_from = cell_type_new, values_from = frac2, values_fill = 0) %>%\n  as.data.frame() %>% column_to_rownames(var = \"cluster_names\") %>% as.matrix()\n\ncol_frac_wide <- col_frac_wide[, c(epiendo_cells, immu_stroma_cells)]\nht_mat <- scale(t(col_frac_wide))\n\n# grouped scale \nscale_this <- function(x){\n  (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)\n}\nplot_data <- col_frac_s %>%\n  group_by(cluster_names) %>% dplyr::mutate(frac2_scaled = scale_this(frac2)) %>%\n  group_by(cell_type_new) %>% dplyr::mutate(frac_scaled_byrow = scale_this(frac))\nplot_data <- left_join(plot_data, grouping_celltype) %>% ungroup() %>%\n  dplyr::filter(meta_celltype != \"Others\")\n\n# calculate dendrogram\nclust <- hclust(dist(ht_mat))\nv_clust <- hclust(dist(t(ht_mat)))\nddgram_col <- as.dendrogram(v_clust)\nggtree_plot_col <- ggtree(ddgram_col) + layout_dendrogram()\nddgram <- as.dendrogram(clust)\nggtree_plot <- ggtree::ggtree(ddgram)\n\n# set colors and output location\ncol_fun1 = circlize::colorRamp2(c(-1, 0, 1, 2, 3), c(\"#5658A5\", \"#8BCDA3\", \"#FBF4AA\", \"#F16943\", \"#9D1A44\"))\nmeta_colors <- c(\"Epi-endo\" = \"#B61932\", \"Immune-stroma\" = \"#568AC2\", \"Others\" = \"#BEA278\")\nctype_colors <- data.frame(meta_colors, meta_celltype = names(meta_colors))\nplot_data <- left_join(plot_data, ctype_colors, by = \"meta_celltype\")\n\n# main plot\ndotplot3 <- plot_data %>%\n  dplyr::mutate(`Enrichment\\nin cell types` = frac2_scaled) %>%  \n  dplyr::mutate(`Enrichment\\nin clusters` = frac_scaled_byrow) %>%\n  dplyr::mutate(cell_type_new = factor(cell_type_new, levels = clust$labels[clust$order]),\n         cluster = factor(cluster_names, levels = v_clust$labels[v_clust$order])) %>%\n  ggplot(aes(x=cluster, y = cell_type_new, color = `Enrichment\\nin clusters`, size = `Enrichment\\nin cell types`)) +\n  geom_point() +\n  cowplot::theme_cowplot() +\n  theme(axis.line  = element_blank()) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  xlab('') +\n  ylab('') +\n  theme(axis.ticks = element_blank()) +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"cm\")) +\n  scale_color_gradientn(colours = col_fun1(seq(-1, 4, by = 0.2))) +\n  scale_y_discrete(position = \"right\")\n\n# handy function to alter the legend\naddSmallLegend <- function(myPlot, pointSize = 4, textSize = 8) {\n  myPlot +\n    guides(shape = guide_legend(override.aes = list(size = pointSize))) +\n    theme(legend.title = element_text(size = textSize),\n          legend.text  = element_text(size = textSize),\n          legend.position = c(1.1, -0.3), ## legend.justification does not work well\n          legend.direction = \"horizontal\")\n}\ndotplot3_s <- addSmallLegend(dotplot3)\n\n# dendrograms\nggtree_plot <- ggtree_plot + ylim2(dotplot3)\nggtree_plot_col <- ggtree_plot_col + xlim2(dotplot3)\n# row labels of cell metaclusters\nlabels <- ggplot(plot_data %>%\n                   dplyr::mutate(`Cell Categories` = meta_celltype,\n                          cell_type_new = factor(cell_type_new, levels = clust$labels[clust$order])),\n                 aes(y = cell_type_new, x = 3, fill = `Cell Categories`)) +\n  geom_tile() +\n  scale_fill_manual(values = meta_colors) +\n  ylim2(dotplot3)\n\n# legend\nlegend <- plot_grid(ggpubr::get_legend(labels + theme(legend.position = \"bottom\")))\nlabels <- labels + theme_nothing() + theme(legend.position = \"none\")  +\n  theme(plot.margin = unit(c(0, 0, 0, 0), \"cm\"))\n# merged plot\nmerged <- plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + ggtree_plot_col +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() +\n  ggtree_plot + plot_spacer() + labels + plot_spacer() + dotplot3_s +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() +\n  plot_spacer() + plot_spacer() + plot_spacer() + plot_spacer() + legend +\n  plot_layout(ncol = 5, widths = c(0.7, -0.3, 0.2, -0.25, 4.2), heights = c(0.9, -0.4, 4, -0.5, 0.9))\n\nggsave(glue::glue(\"{res_dir}/fig2b_dotplot_main.pdf\"), merged, height = 7, width = 9)\nmerged\n```\n\n## figure2c\n\n```{r figure2c}\n#| echo: true\n#| warning: false\n#| message: false \n#| label: figure2c\n#| fig-width: 3\n#| fig-height: 3\n# use fast_tsne function\nsource(\"/cluster/apps/FIt-SNE/1.2.1/fast_tsne.R\", chdir = T)\n\n# set empty theme\ntheme_no <- function (font_size = 14, font_family = \"\", rel_small = 12/14) {\n  theme_void(base_size = font_size, base_family = font_family) %+replace%\n    theme(line = element_blank(), rect = element_blank(),\n          text = element_text(family = font_family, face = \"plain\",\n                              color = \"black\", size = font_size, lineheight = 0.9,\n                              hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(),\n                              debug = FALSE), axis.line = element_blank(),\n          axis.line.x = NULL, axis.line.y = NULL, axis.text = element_blank(),\n          axis.text.x = NULL, axis.text.x.top = NULL, axis.text.y = NULL,\n          axis.text.y.right = NULL, axis.ticks = element_blank(),\n          axis.ticks.length = unit(0, \"pt\"), axis.title = element_blank(),\n          axis.title.x = NULL, axis.title.x.top = NULL, axis.title.y = NULL,\n          axis.title.y.right = NULL, legend.background = element_blank(),\n          panel.background = element_blank(),\n          panel.border = element_blank(), panel.grid = element_blank(),\n          panel.grid.major = NULL, panel.grid.minor = NULL,\n          panel.spacing = unit(font_size/2, \"pt\"), panel.spacing.x = NULL,\n          panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_blank(),\n          strip.text = element_blank(), strip.text.x = NULL,\n          strip.text.y = NULL, strip.placement = \"inside\",\n          strip.placement.x = NULL, strip.placement.y = NULL,\n          strip.switch.pad.grid = unit(0, \"cm\"), strip.switch.pad.wrap = unit(0, \"cm\"), \n          plot.background = element_blank(), plot.title = element_blank(),\n          plot.subtitle = element_blank(), plot.caption = element_blank(),\n          plot.tag = element_text(face = \"bold\", hjust = 0,\n                                  vjust = 0.7), plot.tag.position = c(0, 1), \n          plot.margin = margin(0,0, 0, 0), complete = TRUE)\n}\n\ndf_com <- distinct(coldat[, c(\"cluster_names\", \"community_name\", \"meta_cluster\")]) \n\n# Option 3 fast_tsne & cell interaction data. for details of m_list, see\n# ~/projects/hyperion/code/community/data_generation/1_community_clusters_generation.R\nm_list <- readr::read_rds(glue::glue(\"{dat_dir}/m_list_0.rds\"))\nm <- do.call(rbind, unname(m_list)) %>% as.matrix()\nm <- m[!endsWith(rownames(m), \"_NA\"), ]\nres_tsne <- fftRtsne(m)\n\ntsne_result3 <- data.frame(community_name = rownames(m),\n                           tsne_1 = res_tsne[, 1],\n                           tsne_2 = res_tsne[, 2])\n\ntsne_result3 <- left_join(tsne_result3,\n                          df_com, by = \"community_name\")\n\n# plot and output\ntsne_plot_3 <- ggplot(tsne_result3,\n                      aes(x = tsne_1,\n                          y = tsne_2,\n                          color = meta_cluster,\n                          fill = meta_cluster)) +\n  geom_point(size = 0.001, alpha = 0.5) +\n  scale_color_manual(values = meta_cols) +\n  scale_fill_manual(values = meta_cols) +\n  theme_no() +\n  labs(color = \"Meta Clusters\") +\n  theme(legend.position = \"none\") \n  #guides(color = guide_legend(override.aes = list(size = 2, alpha = 1)))\nggsave(glue::glue(\"{res_dir}/fig2c_tsne_community_meta_clusters.pdf\"),\n       tsne_plot_3, dpi=300, width = 6, height = 7, units = \"cm\")\ntsne_plot_3\n```\n\n## figure2d\n\n```{r figure2d}\n#| echo: true\n#| warning: false\n#| message: false \n#| label: figure2d\n#| fig-width: 7\n#| fig-height: 7\n\n# circular stacked barplot of community and meta cluster fraction\n## get the fraction data of both community and meta levels\ndt <- coldat[, c(\"cell_id\",\"cell_type_new\", \"cluster_names\", \"community_name\", \"meta_cluster\")] %>%\n  na.omit()\n\ndt <- dt %>% group_by(cluster_names) %>% mutate(comm_count = length(unique(community_name))) %>%\n  dplyr::mutate(all_clu_cell_count = n()) %>% group_by(cluster_names, cell_type_new) %>%\n  dplyr::mutate(cell_allcount = n(), frac_cells_clu = cell_allcount / all_clu_cell_count)\n\ndt <- dt %>% group_by(meta_cluster) %>% dplyr::mutate(comm_count_meta = length(unique(community_name))) %>%\n  dplyr::mutate(all_meta_cell_count = n()) %>% group_by(meta_cluster, cell_type_new) %>%\n  dplyr::mutate(cell_allcount_meta = n(), frac_cells_meta = cell_allcount_meta / all_meta_cell_count)\n\ndt$count_avg_meta <- dt$cell_allcount_meta / dt$comm_count_meta\ndt$count_avg <- dt$cell_allcount / dt$comm_count\n\ndt$cell_type_new <- factor(dt$cell_type_new, levels = names(ctype10_cols))\n\ncommu_data <- unique(dt[, c(\"cell_type_new\", \"cluster_names\",\n                            \"count_avg\", \"comm_count\", \"frac_cells_clu\")])\nmeta_data <- unique(dt[, c(\"cell_type_new\", \"meta_cluster\",\n                           \"count_avg_meta\", \"comm_count_meta\", \"frac_cells_meta\")])\n\ncommu_dt <- commu_data[, c(1, 2, 5)] %>% gather(key = 'observation', value = 'value', -c(1, 2))\nmeta_dt <- meta_data[, c(1, 2, 5)] %>% gather(key = 'observation', value = 'value', -c(1, 2))\ncommu_dt <- commu_dt[, -3]\nmeta_dt <- meta_dt[, -3]\n## convert the long matrix to wide matrix, with '0' filled in the missing cell\nmtx_commu_dt <- commu_dt %>% ungroup() %>%\n  pivot_wider(id_cols = \"cell_type_new\", names_from = \"cluster_names\",\n              values_from = \"value\", values_fill = 0)\nmtx_meta_dt <- meta_dt %>% ungroup() %>%\n  pivot_wider(id_cols = \"cell_type_new\", names_from = \"meta_cluster\",\n              values_from = \"value\", values_fill = 0)\n\n## convert the wide matrices to the long ones\nlong_mtx_commu_dt <- mtx_commu_dt %>% pivot_longer(cols = NL1:DC2, names_to = \"names\", values_to = \"value\")\nlevels(long_mtx_commu_dt$names) <- c(\n  \"TM1\", \"TB2\", \"TB1\", \"ST_MP2\", \"ST_MP1\", \"ST_mCAF2\",\n  \"ST_mCAF1\", \"ST_CAF3\", \"ST_CAF2\", \"ST_CAF1\", \"C2_MP2\",\n  \"C2_MP1\", \"C1_MP2\", \"C1_MP1\", \"IM_M\", \"IM_e2\", \"IM_e1\",\n  \"DC2\", \"DC1\", \"NL3\", \"NL2\", \"NL1\"\n)\nlong_mtx_commu_dt$group <- 'cluster'\n\nlong_mtx_meta_dt <- mtx_meta_dt %>% pivot_longer(cols = \"MC-normal\":\"MC-tumor-core\", names_to = \"names\", values_to = \"value\")\nlevels(long_mtx_meta_dt$names) <-\n  rev(c(\n    \"MC-tumor-core\",\n    \"MC-tumor-frontline\",\n    \"MC-stroma-macro\",\n    \"MC-stroma-mCAF\",\n    \"MC-stroma-CAF\",\n    \"MC-macro-c2\",\n    \"MC-macro-c1\",\n    \"MC-immune-myeloid\",\n    \"MC-immune-enriched\",\n    \"MC-DC\",\n    \"MC-normal\"\n  ))\nlong_mtx_meta_dt$group <- 'metacluster'\n\n## combine the 2 matrices\ndata <- rbind(long_mtx_commu_dt, long_mtx_meta_dt)\n\n## set the empty area\nempty_bar <- 2\nnObsType <- nlevels(as.factor(data$cell_type_new))\nto_add <-\n  data.frame(matrix(\n    data = NA,\n    nrow = empty_bar * nlevels(as.factor(data$group)) * nObsType,\n    ncol(data)\n  ))\ncolnames(to_add) <- colnames(data)\nto_add$group <-\n  rep(unique(data$group), each = empty_bar)\ndata <- rbind(data, to_add)\ndata <- data %>% arrange(group, names)\ndata$id <-\n  rep(seq(1, nrow(data) / nObsType) , each = nObsType)\n\n## set the label data\nlabel_data <-\n  data %>% group_by(id, names) %>% summarize(tot = sum(value))\nnumber_of_bar <- nrow(label_data)\nangle <-\n  90 - 360 * (label_data$id - 0.5) / number_of_bar\n# I substract 0.5 because the letter must have the angle of the center of the bars.\n# Not extreme right(1) or extreme left (0)\nlabel_data$hjust <- ifelse(angle <= -90, 1, 0)\nlabel_data$angle <- ifelse(angle <= -90, angle + 180, angle)\n\n# prepare a data frame for base lines\nbase_data <- data %>%\n  group_by(group) %>%\n  summarize(start = min(id), end = max(id) - empty_bar) %>%\n  rowwise() %>%\n  mutate(title = mean(c(start, end)))\n\n# prepare a data frame for grid (scales)\ngrid_data <- base_data\ngrid_data$end <-\n  grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + .5\ngrid_data$start <- grid_data$start - .5\ngrid_data <- grid_data[-1,]\n\np <- ggplot(data) +\n  # Add the stacked bar\n  geom_bar(\n    aes(x = as.factor(id), y = value, fill = cell_type_new),\n    stat = \"identity\",\n    position = 'fill',\n    alpha = 1\n  ) +\n  scale_fill_manual(values = ctype10_cols) +\n  # Add a val=1/.75/.50/.25/0 lines. I do it at the beginning to make sur barplots are OVER it.\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 0,\n      xend = start,\n      yend = 0\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 0.25,\n      xend = start,\n      yend = .25\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = .5,\n      xend = start,\n      yend = .5\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = .75,\n      xend = start,\n      yend = .75\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  )  +\n  geom_segment(\n    data = grid_data,\n    aes(\n      x = end,\n      y = 1,\n      xend = start,\n      yend = 1\n    ),\n    colour = \"grey\",\n    alpha = 1,\n    size = 0.3 ,\n    inherit.aes = FALSE\n  )  +\n  # Add text showing the value of each 1.00/.75/.50/.25/0 lines\n  ggplot2::annotate(\n    \"text\",\n    x = rep(max(data$id), 5),\n    y = c(0, .25, .5, .75, 1),\n    label = c(\"0\", '0.25', '0.5', '0.75', '1.0') ,\n    color = \"darkgray\",\n    size = 3 ,\n    angle = 0,\n    fontface = \"bold\",\n    hjust = 1\n  ) +\n  ylim(-.3, max(label_data$tot, na.rm = T) + .5) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(rep(-1, 4), \"cm\")\n  ) +\n  coord_polar() +\n  # Add labels on top of each bar\n  geom_text(\n    data = label_data,\n    aes(\n      x = id,\n      y = tot + .04,\n      label = names,\n      hjust = hjust\n    ),\n    color = \"black\",\n    fontface = \"bold\",\n    alpha = 1,\n    size = 2.5,\n    angle = label_data$angle,\n    inherit.aes = FALSE\n  )\nggsave(glue::glue(\"{res_dir}/fig2d_cell_type_prop_in_MCs_barplot_circle.pdf\"), p, height = 7, width = 7)\np\n```\n\n## figure2e\n\n```{r figure2e}\n#| echo: true\n#| warning: false\n#| message: false \n#| label: figure2e\n#| fig-width: 10\n#| fig-height: 10\n\n# read in and alter the data\nci_weighted <- readr::read_rds(glue::glue(\"{dat_dir}/ci_weighted_list.rds\"))\nci_data <- data.table::rbindlist(ci_weighted)\ndim(ci_data)\n\n# rename\nclu_new <- meta_clu$cluster_names %>% `names<-`(meta_clu$old_cluster_name)\nci_data$from_cluster <- clu_new[ci_data$from_cluster]\nci_data$to_cluster <- clu_new[ci_data$to_cluster]\n\nmeta_new <- meta_clu$meta_short_new %>% `names<-`(meta_clu$cluster_names)\nci_data$from_meta <- meta_new[ci_data$from_cluster]\nci_data$to_meta <- meta_new[ci_data$to_cluster]\n\n# meta-cluster interaction with self-interaction\nci_matrix3 <- ci_data %>% group_by(from_meta, to_meta) %>% summarise(count = n()) %>%\n  pivot_wider(names_from = from_meta, values_from = count, values_fill = 0) %>%\n  as.data.frame() %>% column_to_rownames(var = \"to_meta\") %>% as.matrix()\n\n# cluster interaction without self-interaction\nci_matrix4 <- ci_matrix3\nfor (i in 1:nrow(ci_matrix4)) {\n  x <- rownames(ci_matrix4)[i]\n  ci_matrix4[x, x] <- 0\n}\n\n\nci_matrix4 <- ci_matrix4[c(\"MC-tumor-core\",\n                           \"MC-tumor-frontline\",\n                           \"MC-stroma-macro\",\n                           \"MC-stroma-mCAF\",\n                           \"MC-stroma-CAF\",\n                           \"MC-macro-c2\",\n                           \"MC-macro-c1\",\n                           \"MC-immune-myeloid\",\n                           \"MC-immune-enriched\",\n                           \"MC-DC\",\n                           \"MC-normal\"),\n                         c(\"MC-tumor-core\",\n                           \"MC-tumor-frontline\",\n                           \"MC-stroma-macro\",\n                           \"MC-stroma-mCAF\",\n                           \"MC-stroma-CAF\",\n                           \"MC-macro-c2\",\n                           \"MC-macro-c1\",\n                           \"MC-immune-myeloid\",\n                           \"MC-immune-enriched\",\n                           \"MC-DC\",\n                           \"MC-normal\")]\n\n# rotate labels\n#pdf(glue::glue(\"{res_dir}/fig2e_metacluster_interaction_circ_noself_rotate.pdf\"), width = 10, height = 10)\nchordDiagram(ci_matrix4, grid.col = meta_cols, annotationTrack = c(\"grid\", \"axis\"),\n             preAllocateTracks = list(track.height = max(strwidth(unlist(dimnames(ci_matrix4))))))\ncircos.track(track.index = 1, panel.fun = function(x, y) {\n  circos.text(CELL_META$xcenter, CELL_META$ylim[1], CELL_META$sector.index, cex = 0.7,\n              facing = \"clockwise\", niceFacing = TRUE, adj = c(-0.2, 0))\n}, bg.border = NA)\n\n```\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":false,"output-file":"figure2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.3","bibliography":["references.bib"],"editor":"visual","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"figure2.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}