{
  "hash": "7ec9b66df2c9f2e288652cb522199f0c",
  "result": {
    "engine": "knitr",
    "markdown": "# sup_figure7\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npkgs <- c(\"fs\", \"futile.logger\", \"configr\", \"stringr\", \"ggpubr\", \"ggthemes\", \"SingleCellExperiment\",\n          \"RColorBrewer\", \"vroom\", \"jhtools\", \"glue\", \"jhuanglabHyperion\", \"openxlsx\", \"ggsci\", \"ggraph\",\n          \"patchwork\", \"cowplot\", \"tidyverse\", \"dplyr\", \"rstatix\", \"magrittr\", \"igraph\",\"tidygraph\")\nsuppressMessages(conflicted::conflict_scout())\nfor (pkg in pkgs){\n  suppressPackageStartupMessages(library(pkg, character.only = T))\n}\nres_dir <- \"./results/sup_figure7\" %>% checkdir\ndat_dir <- \"./data\" %>% checkdir\nconfig_dir <- \"./config\" %>% checkdir\n\n#colors config\nconfig_fn <- glue::glue(\"{config_dir}/configs.yaml\")\nstype3_cols <- jhtools::show_me_the_colors(config_fn, \"stype3\")\nctype10_cols <- jhtools::show_me_the_colors(config_fn, \"cell_type_new\")\nmeta_cols <- jhtools::show_me_the_colors(config_fn, \"meta_color\")\n\n#read in coldata\ncoldat <- readr::read_csv(glue::glue(\"{dat_dir}/sce_coldata.csv\"))\nmeta_clu <- readxl::read_excel(glue::glue(\"{dat_dir}/meta_clu.xlsx\")) %>% dplyr::select(-9)\nci <- readr::read_rds(glue::glue(\"{dat_dir}/ci_list.rds\"))\nsample_chemo_type_list <- readr::read_rds(glue::glue(\"{dat_dir}/sample_chemo_type_list.rds\"))\nmetadata <- readr::read_rds(glue::glue(\"{dat_dir}/metadata.rds\"))\n\n# function\ninteraction_plot <- function(x, conditionCol, group, colors, threshold = 0.1, selfDe = T){\n  from <- \"from_meta\"\n  to <- \"to_meta\"\n  fn <- \"metacluster_\"\n  cols <- colors\n\n  if (selfDe == TRUE) {\n    fil <- \"filteredself\"\n    dt_cl <- x %>% dplyr::filter(.data[[from]] != .data[[to]]) %>% \n      group_by(.data[[from]], .data[[to]], .data[[conditionCol]]) %>% \n      summarise(N = n()) %>% left_join(x %>% dplyr::filter(.data[[from]] != .data[[to]]) %>% \n                  group_by(.data[[conditionCol]]) %>% \n                  summarise(NT = n()), by = conditionCol) %>% \n      dplyr::mutate(pct = N/NT * 100)\n  } else {\n    fil <- \"\"\n    dt_cl <- x %>% group_by(.data[[from]], .data[[to]], .data[[conditionCol]]) %>% \n      summarise(N = n()) %>% left_join(x %>% group_by(.data[[conditionCol]]) %>% \n                                         summarise(NT = n()), by = conditionCol) %>% \n      dplyr::mutate(pct = N/NT * 100)\n  }\n\n  dt_cl <- dt_cl %>% group_by(.data[[conditionCol]])\n  glist <- dt_cl %>% dplyr::filter(pct > 0.1) %>% \n    group_map(~as_tbl_graph(dplyr::select(.,c(.data[[from]], .data[[to]], pct))))\n  gkeys <- dt_cl %>% group_keys()\n  plist <- list()\n  for(i in 1:length(glist)){\n    g <- glist[[i]]\n    if(length(g) == 0) next\n    names <- paste0(fn, group, \"_\", gkeys[i,][[conditionCol]], \"_\", fil)\n    plist[[names]] <- ggraph(g, \"stress\") +\n      geom_edge_link(aes(edge_width = pct, alpha = pct)) +\n      geom_node_point(aes(color = name), size = 3) +\n      #geom_node_text(aes(label = name), size = 4, repel = T, colour = \"red\") +\n      scale_edge_width(\"interaction percentage\", range = c(0.2, 1.5), \n                       breaks = c(0.1,1,3,5,10,15,20,25),limits=c(0.1, 25), #oob = scales::squish,\n                       guide = guide_legend(title.theme = element_text(size = 8), \n                                            ncol = 1, byrow = FALSE, keywidth = 0.8, \n                                            keyheight = 0.1)) +\n      scale_edge_alpha(\"interaction percentage\", range = c(0.1, 1.5), \n                       breaks = c(0.1,1,3,5,10,15,20,25), \n                       limits=c(0.1, 25), oob = scales::squish) +\n      scale_color_manual(limits = as.factor(V(g)$name), values = colors) +\n      theme_graph(base_family = \"Helvetica\", base_size =8) +\n      guides(col = guide_legend(title = \"interaction\", ncol = 1, \n                                byrow = FALSE, keywidth = 0.1, keyheight = 0.1,\n                                override.aes = list(size=1),\n                                title.theme = element_text(size = 8)))\n  }\n  return(plist)\n}\n```\n:::\n\n\n\n\n\n\n## sup_figure7a\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkeycols_list <- c(list(\"nerve_invasion\"), list(\"vascular_invasion\"),\n                  list(\"lymph_metastasis_status\"), list(\"size_alteration\"),\n                  list(\"size_alteration\"), list(\"pfs_group\"))\ncompare_groups <-c(\"nerve_invasion\", \"vascular_invasion\", \"lymph_metastasis\",\n                   \"chemo_outcome_before\", \"chemo_outcome_after\", \"pfs_analysis\")\nnames(keycols_list) <- compare_groups\n\nmeta_cluster_names <- rev(c(\"MC-macro-c2\", \"MC-macro-c1\", \"MC-immune-myeloid\",\n                            \"MC-immune-enriched\", \"MC-stroma-CAF\", \"MC-stroma-macro\",\n                            \"MC-stroma-mCAF\", \"MC-tumor-frontline\", \"MC-tumor-core\"))\n\ntotal_group <- coldat %>%\n  dplyr::select(c(sample_id, sample_tiff_id, patient_id, cell_id, stype2, \n                  cluster_names, meta_cluster)) %>%\n  na.omit() %>% dplyr::filter(meta_cluster %in% meta_cluster_names)\n\nfactor_list <- list(\"nerve_invasion\" = c(\"1\", \"0\"),\n                    \"vascular_invasion\" = c(\"1\", \"0\"),\n                    \"lymph_metastasis\" = c(\"1\", \"0\"),\n                    \"chemo_outcome_before\" = c(\"increase\", \"decrease\"),\n                    \"chemo_outcome_after\" = c(\"increase\", \"decrease\"),\n                    \"pfs_analysis\" = c(\"short\",\"long\"))\n\nplist <- list()\nfor(compare_group in compare_groups){\n  #cli::cli_h1(compare_group)\n  groups <- metadata[[compare_group]]\n  gp_key <- keycols_list[[compare_group]]\n  cli::cli_alert_info(gp_key)\n  groups <- groups %>% drop_na(all_of(gp_key))\n\n  dt_groups <- total_group %>% dplyr::filter(patient_id %in% groups$patient_id)\n  if (compare_group == \"chemo_outcome_before\") {\n    dt_groups <- dt_groups %>% dplyr::filter(stype2 %in% c(\"before_chemo\",\"puncture_pdac\"))\n  } else if (compare_group %notin% c(\"paired_after_neoadj\", \"mpc_primary_metastasis\", \"tumor_para\")) {\n    dt_groups <- dt_groups %>% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n\n  dat_plot <- dt_groups %>%\n    group_by(meta_cluster, sample_tiff_id) %>%\n    summarise(nc = n()) %>%\n    group_by(sample_tiff_id) %>%\n    dplyr::mutate(nt = sum(nc)) %>%\n    dplyr::mutate(pro = nc/nt) %>% ungroup()\n  dat_plot$meta_cluster <- factor(dat_plot$meta_cluster, levels = meta_cluster_names)\n  \n  metainfo <- coldat[, c(\"sample_tiff_id\", \"patient_id\")] %>% distinct()\n  dat_plot <- inner_join(dat_plot, metainfo, by = \"sample_tiff_id\") %>%\n    inner_join(groups, by = \"patient_id\") %>% distinct()\n\n  dat_plot[[gp_key]] <- factor(dat_plot[[gp_key]], levels = factor_list[[compare_group]])\n  dat_plot$meta_cluster <- fct_relevel(dat_plot$meta_cluster, meta_cluster_names)\n\n  p <- ggboxplot(dat_plot, x = \"meta_cluster\", y = \"pro\", fill = gp_key, outlier.shape = NA,\n                 palette = pal_nejm(\"default\")(3), xlab = NULL,size = 0.2) + theme_classic() +\n    theme(strip.placement  = \"outside\",\n          panel.spacing    = unit(3, \"points\"),\n          strip.background = element_blank(),\n          strip.text       = element_text(face = \"bold\", size = 5),\n          axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),\n          axis.line.x = element_line(size = 0.4),\n          axis.line.y = element_line(size = 0.4),\n          legend.position=\"right\") +\n    labs(x= NULL, y = NULL)\n  exp1 <- expr(pro ~ !!ensym(gp_key))\n  stat_test <- dat_plot %>%\n    group_by(meta_cluster) %>% rstatix::wilcox_test(eval(exp1), p.adjust.method = \"none\")\n  stat_test <- stat_test %>% mutate(p.adj.signif = case_when(p >= 0.05 ~ \"ns\",\n                                                            p >= 0.01 & p < 0.05 ~ \"*\",\n                                                            p >= 0.001 & p < 0.01 ~ \"**\",\n                                                            p >= 0.0001 & p < 0.001 ~ \"***\",\n                                                            p < 0.0001 ~ \"****\",\n                                                            TRUE ~ \"ns\"))\n  stat_test <- stat_test %>%\n    add_xy_position(x = \"meta_cluster\", dodge = 0.8)\n  p1 <- p +\n    stat_pvalue_manual(\n      stat_test, tip.length = 0.01, hide.ns = T, label = \"p.adj.signif\",\n      coord.flip = TRUE\n    ) + coord_flip() +\n    guides(fill = guide_legend(reverse = TRUE))\n  #ggsave(glue(\"metacluster_{compare_group}.pdf\"), p1, width = 6, height = 6)\n  plist[[compare_group]] <- p1\n}\npc <- (plist[[1]]|plist[[2]]|plist[[3]])/(plist[[4]]|plist[[5]]|plist[[6]]) + \n  plot_layout(guides = 'collect', widths = c(2, 2.5, 2.5, 2.5))\nggsave(glue::glue(\"{res_dir}/sup_figure7a_wilct.pdf\"), pc, width = 10.5, height = 5)\npc\n```\n\n::: {.cell-output-display}\n![](sup_figure7_files/figure-html/sup_figure7a-1.png){width=1008}\n:::\n:::\n\n\n\n\n\n\n## sup_figure7b\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# clinical metadata\n#chemo_outcome_before\ndt_cob <- metadata[[\"chemo_outcome_before\"]][c(\"patient_id\", \"size_alteration\")]\ndt_cob <- coldat %>% dplyr::filter(patient_id %in% dt_cob$patient_id) %>%\n  dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %>% unique() %>%\n  left_join(dt_cob, by = \"patient_id\") %>% \n  dplyr::filter(stype2 %in% c(\"before_chemo\", \"puncture_pdac\"))\n\n#chemo_outcome_after\ndt_coa <- metadata[[\"chemo_outcome_after\"]][c(\"patient_id\", \"size_alteration\")]\ndt_coa <- coldat %>% dplyr::filter(patient_id %in% dt_coa$patient_id) %>%\n  dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %>% unique() %>%\n  left_join(dt_coa, by = \"patient_id\") %>% \n  dplyr::filter(stype2 %in% c(\"after_chemo\", \"tumor\"))\n\ndt_list <- list(dt_cob, dt_coa)\nnames(dt_list) <- c(\"chemo_outcome_before\", \"chemo_outcome_after\")\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] <- left_join(dt_list[[i]], do.call(\"rbind\", ci), \n                            by = \"sample_tiff_id\") %>% dplyr::select(-c(from, to))\n  dt_list[[i]] <- dt_list[[i]] %>% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %>%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[\"size_alteration\"]] <- factor(dt_list[[i]][[\"size_alteration\"]], \n                                              levels = factor_list[[names(dt_list)[i]]])\n}\n\ngroup_list <- list(c(\"chemo_outcome_before\", \"size_alteration\"), \n                   c(\"chemo_outcome_after\", \"size_alteration\"))\n\np1 <- purrr::map2(dt_list, group_list, ~interaction_plot(x = .x, conditionCol = .y[2], \n                                                         group = .y[1], colors = meta_cols))\nnames(p1) <- c(\"chemo_outcome_before\", \"chemo_outcome_after\")\n\n\n#sub keycols\nkeycols_sub <- keycols_list[c(\"nerve_invasion\", \"vascular_invasion\", \"lymph_metastasis\", \"pfs_analysis\")]\n\ndt_list <- list()\nfor (i in 1:length(keycols_sub)) {\n  dt_list[[i]] <- metadata[[names(keycols_sub[i])]][c(\"patient_id\", keycols_sub[[i]])]\n  dt_list[[i]] <- coldat %>% dplyr::filter(patient_id %in% dt_list[[i]]$patient_id) %>%\n    dplyr::select(sample_id, stype2, patient_id, sample_tiff_id) %>% unique() %>%\n    left_join(dt_list[[i]], by = \"patient_id\") %>% dplyr::filter(stype2 %in% c(\"after_chemo\", \"tumor\"))\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] <- left_join(dt_list[[i]], do.call(\"rbind\", ci), by = \"sample_tiff_id\") %>% \n    dplyr::select(-c(from, to))\n  dt_list[[i]] <- dt_list[[i]] %>% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %>%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[keycols_sub[[i]]]] <- factor(dt_list[[i]][[keycols_sub[[i]]]], \n                                             levels = factor_list[[names(keycols_sub)[i]]])\n}\n\np_list <- list()\nfor (i in 1:length(dt_list)) {\n  for (j in 1:length(keycols_sub[[i]])) {\n    group1 <- str_c(names(keycols_sub)[i],keycols_sub[[i]][j], sep= \"_\")\n    p_list[[group1]] <- interaction_plot(dt_list[[i]] %>% \n                                           dplyr::select(sample_id, keycols_sub[[i]][j], sample_tiff_id,\n                                                         from_cluster, to_cluster, from_meta, to_meta) %>% na.omit(),\n                                         conditionCol = keycols_sub[[i]][j], group = group1, colors = meta_cols)\n  }\n}\n\n\np_list <- c(p_list, p1)\n\nlo <- \"\nABC\nDEF\nGHI\nJKL\n\"\n\np2 <- p_list[[\"nerve_invasion_nerve_invasion\"]][[1]] + p_list[[\"vascular_invasion_vascular_invasion\"]][[1]] +\n  p_list[[\"lymph_metastasis_lymph_metastasis_status\"]][[1]] + p_list[[\"nerve_invasion_nerve_invasion\"]][[2]] +\n  p_list[[\"vascular_invasion_vascular_invasion\"]][[2]] + p_list[[\"lymph_metastasis_lymph_metastasis_status\"]][[2]] +\n  p_list[[\"chemo_outcome_before\"]][[1]] + p_list[[\"chemo_outcome_after\"]][[1]] +\n  p_list[[\"pfs_analysis_pfs_group\"]][[1]] + p_list[[\"chemo_outcome_before\"]][[2]] +\n  p_list[[\"chemo_outcome_after\"]][[2]] + p_list[[\"pfs_analysis_pfs_group\"]][[2]] + plot_layout(design = lo, guides='collect')\n\nggsave(glue::glue(\"{res_dir}/sup_figure7b.pdf\"), p2, width = 12, height = 9.5)\np2\n```\n\n::: {.cell-output-display}\n![](sup_figure7_files/figure-html/sup_figure7b-1.png){width=1152}\n:::\n:::",
    "supporting": [
      "sup_figure7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}