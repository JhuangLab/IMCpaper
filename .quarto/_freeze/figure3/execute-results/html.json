{
  "hash": "7b27738362d98d4216750761433784a5",
  "result": {
    "engine": "knitr",
    "markdown": "# figure3\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npkgs <- c(\"fs\", \"futile.logger\", \"configr\", \"stringr\", \"ggpubr\", \"ggthemes\", \"SingleCellExperiment\",\n          \"RColorBrewer\", \"vroom\", \"jhtools\", \"glue\", \"jhuanglabHyperion\", \"openxlsx\", \"ggsci\", \"ggraph\",\n          \"patchwork\", \"cowplot\", \"tidyverse\", \"dplyr\", \"rstatix\", \"magrittr\", \"igraph\",\"tidygraph\")\nfor (pkg in pkgs){\n  suppressPackageStartupMessages(library(pkg, character.only = T))\n}\nres_dir <- \"./results/figure3\" %>% checkdir\ndat_dir <- \"./data\" %>% checkdir\nconfig_dir <- \"./config\" %>% checkdir\n\n#colors config\nconfig_fn <- glue::glue(\"{config_dir}/configs.yaml\")\nstype3_cols <- jhtools::show_me_the_colors(config_fn, \"stype3\")\nctype10_cols <- jhtools::show_me_the_colors(config_fn, \"cell_type_new\")\nmeta_cols <- jhtools::show_me_the_colors(config_fn, \"meta_color\")\n\n#read in coldata\ncoldat <- readr::read_csv(glue::glue(\"{dat_dir}/sce_coldata.csv\"))\nmeta_clu <- readxl::read_excel(glue::glue(\"{dat_dir}/meta_clu.xlsx\")) %>% dplyr::select(-9)\nci <- readr::read_rds(glue::glue(\"{dat_dir}/ci_list.rds\"))\nsample_chemo_type_list <- readr::read_rds(glue::glue(\"{dat_dir}/sample_chemo_type_list.rds\"))\nmetadata <- readr::read_rds(glue::glue(\"{dat_dir}/metadata.rds\"))\n\n# function\ninteraction_plot <- function(x, conditionCol, group, colors, threshold = 0.1, selfDe = T){\n    from <- \"from_meta\"\n    to <- \"to_meta\"\n    fn <- \"metacluster_\"\n    cols <- colors\n\n  if (selfDe == TRUE) {\n    fil <- \"filteredself\"\n    dt_cl <- x %>% dplyr::filter(.data[[from]] != .data[[to]]) %>% group_by(.data[[from]], .data[[to]], .data[[conditionCol]]) %>% summarise(N = n()) %>%\n      left_join(x %>% dplyr::filter(.data[[from]] != .data[[to]]) %>% group_by(.data[[conditionCol]]) %>% summarise(NT = n()), by = conditionCol) %>% dplyr::mutate(pct = N/NT * 100)\n  } else {\n    fil <- \"\"\n    dt_cl <- x %>% group_by(.data[[from]], .data[[to]], .data[[conditionCol]]) %>% summarise(N = n()) %>%\n      left_join(x %>% group_by(.data[[conditionCol]]) %>% summarise(NT = n()), by = conditionCol) %>% dplyr::mutate(pct = N/NT * 100)\n  }\n\n  dt_cl <- dt_cl %>% group_by(.data[[conditionCol]])\n  glist <- dt_cl %>% dplyr::filter(pct > 0.1) %>% group_map(~as_tbl_graph(dplyr::select(.,c(.data[[from]], .data[[to]], pct))))\n  gkeys <- dt_cl %>% group_keys()\n  plist <- list()\n  for(i in 1:length(glist)){\n    g <- glist[[i]]\n    if(length(g) == 0) next\n    names <- paste0(fn, group, \"_\", gkeys[i,][[conditionCol]], \"_\", fil)\n    plist[[names]] <- ggraph(g, \"stress\") +\n      geom_edge_link(aes(edge_width = pct, alpha = pct)) +\n      geom_node_point(aes(color = name), size = 3) +\n      #geom_node_text(aes(label = name), size = 4, repel = T, colour = \"red\") +\n      scale_edge_width(\"interaction percentage\", range = c(0.2, 1.5), breaks = c(0.1,1,3,5,10,15,20,25),limits=c(0.1, 25), #oob = scales::squish,\n                       guide = guide_legend(title.theme = element_text(size = 8), ncol = 1, byrow = FALSE, keywidth = 0.8, keyheight = 0.1)) +\n      scale_edge_alpha(\"interaction percentage\", range = c(0.1, 1.5), breaks = c(0.1,1,3,5,10,15,20,25),limits=c(0.1, 25), oob = scales::squish) +\n      scale_color_manual(limits = as.factor(V(g)$name), values = cols) +\n      theme_graph(base_family = 'Helvetica', base_size =8) +\n      guides(col = guide_legend(title = \"interaction\", ncol = 1, byrow = FALSE, keywidth = 0.1, keyheight = 0.1,\n                                override.aes = list(size=1),title.theme = element_text(size = 8)))\n  }\n  return(plist)\n}\n```\n:::\n\n\n\n\n\n\n## figure3a\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(metadata[[\"differentiation_degree\"]]$diff_degree) = c(\"low\", \"middle\", \"high\")\nlevels(metadata[[\"stages_tme\"]]$stage) = c(\"MPC\", \"BRPC_LAPC\", \"RPC\")\n\nkeycols_list <- c(list(\"stage\"), list(\"treatment_type\"), list(\"os_group_24\"))\ncompare_groups <- c(\"stages_tme\", \"neoadj_vs_direct_surgery\", \"os_analysis\")\nnames(keycols_list) <- compare_groups\n\nmeta_cluster_names <- rev(c(\"MC-macro-c2\", \"MC-macro-c1\", \"MC-immune-myeloid\",\n                            \"MC-immune-enriched\", \"MC-stroma-CAF\", \"MC-stroma-macro\",\n                            \"MC-stroma-mCAF\", \"MC-tumor-frontline\", \"MC-tumor-core\"))\n\ntotal_group <- coldat %>%\n  dplyr::select(c(sample_id, sample_tiff_id, patient_id, cell_id, \n                  stype2, cluster_names, meta_cluster)) %>%\n  na.omit() %>% dplyr::filter(meta_cluster %in% meta_cluster_names)\n\nplist <- list()\n\ntotal_group_pro <- total_group %>% group_by(meta_cluster, sample_tiff_id) %>% \n  summarise(pro = n()/nrow(total_group)) %>% group_by(meta_cluster) %>% dplyr::mutate(pro_total = sum(pro))\n\ntotal_group_pro$meta_cluster <- fct_relevel(total_group_pro$meta_cluster, meta_cluster_names)\np1 <- ggplot(distinct(total_group_pro[,c(\"meta_cluster\", \"pro_total\")]),\n             aes(x = pro_total, y = meta_cluster, fill = meta_cluster)) +\n  geom_bar(stat='identity', linewidth = 0.8) +\n  theme_classic() +\n  scale_fill_manual(values = meta_cols,\n                    labels = vars(meta_cluster)) +\n  theme(strip.placement  = \"outside\",\n        panel.spacing    = unit(3, \"points\"),\n        strip.background = element_blank(),\n        strip.text       = element_text(face = \"bold\", size = 5),\n        axis.text.x = element_text(size = 10, colour=\"black\"),\n        axis.text.y = element_text(size = 10, colour=\"black\"),\n        axis.line.x = element_line(linewidth = 0.4),\n        axis.line.y = element_line(linewidth = 0.4),\n        legend.position=\"none\")\nplist[[\"total\"]] <- p1\nggsave(glue::glue(\"{res_dir}/fig3a_community_total_metacluster.pdf\"), p1, width = 3, height = 4)\np1\n```\n\n::: {.cell-output-display}\n![](figure3_files/figure-html/figure3a-1.png){width=288}\n:::\n:::\n\n\n\n\n\n\n## figure3bcd\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_total <- total_group_pro %>% dplyr::select(meta_cluster, pro_total) %>% distinct() %>% ungroup()\nfactor_list <- list(\"stages_tme\" = c(\"MPC\", \"BRPC_LAPC\", \"RPC\"),\n                    \"neoadj_vs_direct_surgery\" = c(\"direct_surgery\", \"surgery_after_chemo\"),\n                    \"os_analysis\" = c(\"short\", \"long\"))\n\nfor(compare_group in compare_groups){\n  #cli::cli_h1(compare_group)\n  groups <- metadata[[compare_group]]\n  gp_key <- keycols_list[[compare_group]]\n  cli::cli_alert_info(gp_key)\n  groups <- groups %>% drop_na(all_of(gp_key))\n\n  dt_groups <- total_group %>% dplyr::filter(patient_id %in% groups$patient_id)\n  if (compare_group == \"chemo_outcome_before\") {\n    dt_groups <- dt_groups %>% dplyr::filter(stype2 %in% c(\"before_chemo\",\"puncture_pdac\"))\n  } else {\n    dt_groups <- dt_groups %>% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n  dat_plot <- dt_groups %>%\n    group_by(meta_cluster, sample_tiff_id) %>%\n    summarise(nc = n()) %>%\n    group_by(sample_tiff_id) %>%\n    dplyr::mutate(nt = sum(nc)) %>%\n    dplyr::mutate(pro = nc/nt) %>% ungroup()\n  dat_plot$meta_cluster <- factor(dat_plot$meta_cluster, levels = meta_cluster_names)\n  \n  metainfo <- coldat[, c(\"sample_tiff_id\", \"patient_id\")] %>% distinct()\n  dat_plot <- inner_join(dat_plot, metainfo, by = \"sample_tiff_id\") %>%\n    inner_join(groups, by = \"patient_id\") %>% distinct()\n\n  dat_plot[[gp_key]] <- factor(dat_plot[[gp_key]], levels = factor_list[[compare_group]])\n  dat_plot$meta_cluster <- fct_relevel(dat_plot$meta_cluster, meta_cluster_names)\n  p <- ggboxplot(dat_plot, x = \"meta_cluster\", y = \"pro\", fill = gp_key, outlier.shape = NA,\n                 palette = pal_nejm(\"default\")(3), xlab = NULL,size = 0.2) + theme_classic() +\n    theme(strip.placement  = \"outside\",\n          panel.spacing    = unit(3, \"points\"),\n          strip.background = element_blank(),\n          strip.text       = element_text(face = \"bold\", size = 5),\n          axis.text.x = element_text(size = 10, colour=\"black\"),\n          axis.text.y = element_blank(),\n          axis.line.x = element_line(size = 0.4),\n          axis.line.y = element_line(size = 0.4),\n          legend.position=\"right\") +\n    labs(x= NULL, y = NULL)\n  exp1 <- expr(pro ~ !!ensym(gp_key))\n  stat_test <- dat_plot %>%\n    group_by(meta_cluster) %>% rstatix::wilcox_test(eval(exp1), p.adjust.method = \"BH\")\n  stat_test <- stat_test %>% mutate(p.adj.signif = case_when(p >= 0.05 ~ \"ns\",\n                                                            p >= 0.01 & p < 0.05 ~ \"*\",\n                                                            p >= 0.001 & p < 0.01 ~ \"**\",\n                                                            p >= 0.0001 & p < 0.001 ~ \"***\",\n                                                            p < 0.0001 ~ \"****\",\n                                                            TRUE ~ \"ns\"))\n  stat_test <- stat_test %>%\n    add_xy_position(x = \"meta_cluster\", dodge = 0.8)\n  p1 <- p +\n    stat_pvalue_manual(\n      stat_test, tip.length = 0.01, hide.ns = T, label = \"p.adj.signif\",\n      coord.flip = TRUE\n    ) + coord_flip() +\n    guides(fill = guide_legend(reverse = TRUE))\n  plist[[compare_group]] <- p1\n  #write_rds(p1, glue::glue(\"{compare_group}_boxplot_wilct_sams.rds\"))\n}\npc <- (plist[[1]]|plist[[2]]|plist[[3]]|plist[[4]]) + plot_layout(guides = 'collect', widths = c(2, 2.5, 2.5, 2.5))\nggsave(glue::glue(\"{res_dir}/fig3abcd_wilct.pdf\"), pc, width = 10, height = 4)\npc\n```\n\n::: {.cell-output-display}\n![](figure3_files/figure-html/figure3bcd-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n## figure3efg\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_list <- list(\"stages_tme\" = c(\"RPC\", \"BRPC_LAPC\", \"MPC\"),\n                    \"neoadj_vs_direct_surgery\" = c(\"surgery_after_chemo\", \"direct_surgery\"),\n                    \"os_analysis\" = c(\"long\", \"short\"))\n\n# clinical metadata\nkeycols_list <- c(list(\"stage\"), list(\"treatment_type\"),\n                 list(\"os_group_24\"))\n\nnames(keycols_list) <- c(\"stages_tme\", \"neoadj_vs_direct_surgery\", \"os_analysis\")\n\ndt_list <- list()\nfor (i in 1:length(keycols_list)) {\n  dt_list[[i]] <- metadata[[names(keycols_list[i])]][c(\"patient_id\", keycols_list[[i]])]\n  dt_list[[i]] <- coldat %>% dplyr::filter(patient_id %in% dt_list[[i]]$patient_id) %>%\n    dplyr::select(sample_id, stype2, patient_id) %>% unique() %>% left_join(dt_list[[i]], by = \"patient_id\")\n  \n  if (names(keycols_list)[i] == \"chemo_outcome_before\") {\n    dt_list[[i]] <- dt_list[[i]] %>% dplyr::filter(sample_id %in% sample_chemo_type_list[[\"no_chemo_all\"]])\n  } else {\n    dt_list[[i]] <- dt_list[[i]] %>% dplyr::filter(stype2 %in% c(\"after_chemo\",\"tumor\"))\n  }\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] <- left_join(dt_list[[i]] %>% dplyr::select(-patient_id), \n                            distinct(coldat[,c(\"sample_id\", \"sample_tiff_id\")]), by = \"sample_id\")\n  dt_list[[i]] <- left_join(dt_list[[i]], do.call(\"rbind\", ci), by = \"sample_tiff_id\") %>% \n    dplyr::select(-c(from, to))\n}\n\nfor (i in 1:length(dt_list)) {\n  dt_list[[i]] <- dt_list[[i]] %>% left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n                                             by = c(\"from_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"from_meta_old\" = \"from_meta\", \"from_meta\" = \"meta_short_new\") %>%\n    left_join(meta_clu[, c(\"old_cluster_name\", \"meta_short_new\")],\n              by = c(\"to_cluster\" = \"old_cluster_name\")) %>%\n    dplyr::rename(\"to_meta_old\" = \"to_meta\", \"to_meta\" = \"meta_short_new\")\n\n  dt_list[[i]][[keycols_list[[i]]]] <- factor(dt_list[[i]][[keycols_list[[i]]]], \n                                              levels = factor_list[[names(keycols_list)[i]]])\n}\n\np_list <- list()\nfor (i in 1:length(dt_list)) {\n  for (j in 1:length(keycols_list[[i]])) {\n    group1 <- str_c(names(keycols_list)[i],keycols_list[[i]][j], sep= \"_\")\n    p_list[[group1]] <- interaction_plot(dt_list[[i]] %>% \n                                           dplyr::select(sample_id, keycols_list[[i]][j], \n                                                         sample_tiff_id, from_cluster, \n                                                         to_cluster, from_meta, to_meta) %>% \n                                           na.omit(), colors = meta_cols,\n                                          conditionCol = keycols_list[[i]][j], group = group1)\n  }\n}\n\np_mian <- p_list[[1]][[1]] + p_list[[1]][[2]] + p_list[[1]][[3]] +\n  p_list[[2]][[1]] + p_list[[2]][[2]] + p_list[[3]][[1]] + p_list[[3]][[2]] +\n  plot_layout(design = \"123#\\n4567\", guides='collect')\nggsave(glue::glue(\"{res_dir}/fig3efg.pdf\"), p_mian, width = 15, height = 6.75)\np_mian\n```\n\n::: {.cell-output-display}\n![](figure3_files/figure-html/figure3efg-1.png){width=1440}\n:::\n:::\n",
    "supporting": [
      "figure3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}